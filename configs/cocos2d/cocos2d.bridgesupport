<?xml version='1.0'?>
<signatures version='1.0'>
<struct type='{CCPVRMipmap=&quot;address&quot;*&quot;len&quot;I}' name='CCPVRMipmap'>
<field declared_type='unsigned char*' type='*' name='address'/>
<field declared_type='unsigned int' type='I' name='len'/>
</struct>
<struct type='{CCZHeader=&quot;sig&quot;[4C]&quot;compression_type&quot;S&quot;version&quot;S&quot;reserved&quot;I&quot;len&quot;I}' name='CCZHeader'>
<field declared_type='uint8_t*' type='[4C]' name='sig'/>
<field declared_type='uint16_t' type='S' name='compression_type'/>
<field declared_type='uint16_t' type='S' name='version'/>
<field declared_type='uint32_t' type='I' name='reserved'/>
<field declared_type='uint32_t' type='I' name='len'/>
</struct>
<struct type='{UT_hash_bucket=&quot;hh_head&quot;^{UT_hash_handle}&quot;count&quot;I&quot;expand_mult&quot;I}' name='UT_hash_bucket'>
<field declared_type='struct UT_hash_handle*' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' name='hh_head'/>
<field declared_type='unsigned int' type='I' name='count'/>
<field declared_type='unsigned int' type='I' name='expand_mult'/>
</struct>
<struct type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' name='UT_hash_handle'>
<field declared_type='struct UT_hash_table*' type='^{UT_hash_table=^{UT_hash_bucket}III^{UT_hash_handle}iIIIII}' name='tbl'/>
<field declared_type='void*' type='^v' name='prev'/>
<field declared_type='void*' type='^v' name='next'/>
<field declared_type='struct UT_hash_handle*' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' name='hh_prev'/>
<field declared_type='struct UT_hash_handle*' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' name='hh_next'/>
<field declared_type='void*' type='^v' name='key'/>
<field declared_type='unsigned int' type='I' name='keylen'/>
<field declared_type='unsigned int' type='I' name='hashv'/>
</struct>
<struct type='{UT_hash_table=&quot;buckets&quot;^{UT_hash_bucket}&quot;num_buckets&quot;I&quot;log2_num_buckets&quot;I&quot;num_items&quot;I&quot;tail&quot;^{UT_hash_handle}&quot;hho&quot;i&quot;ideal_chain_maxlen&quot;I&quot;nonideal_items&quot;I&quot;ineff_expands&quot;I&quot;noexpand&quot;I&quot;signature&quot;I}' name='UT_hash_table'>
<field declared_type='UT_hash_bucket*' type='^{UT_hash_bucket=^{UT_hash_handle}II}' name='buckets'/>
<field declared_type='unsigned int' type='I' name='num_buckets'/>
<field declared_type='unsigned int' type='I' name='log2_num_buckets'/>
<field declared_type='unsigned int' type='I' name='num_items'/>
<field declared_type='struct UT_hash_handle*' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' name='tail'/>
<field declared_type='ptrdiff_t' type='i' name='hho'/>
<field declared_type='unsigned int' type='I' name='ideal_chain_maxlen'/>
<field declared_type='unsigned int' type='I' name='nonideal_items'/>
<field declared_type='unsigned int' type='I' name='ineff_expands'/>
<field declared_type='unsigned int' type='I' name='noexpand'/>
<field declared_type='uint32_t' type='I' name='signature'/>
</struct>
<struct type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}' name='ccArray'>
<field declared_type='NSUInteger' type='I' name='num'/>
<field declared_type='NSUInteger' type='I' name='max'/>
<field declared_type='CCARRAY_ID*' type='^@' name='arr'/>
</struct>
<struct type='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}' name='ccBMFontDef'>
<field declared_type='unichar' type='S' name='charID'/>
<field declared_type='CGRect' type='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}' name='rect'/>
<field declared_type='short' type='s' name='xOffset'/>
<field declared_type='short' type='s' name='yOffset'/>
<field declared_type='short' type='s' name='xAdvance'/>
</struct>
<struct type='{_BMFontPadding=&quot;left&quot;i&quot;top&quot;i&quot;right&quot;i&quot;bottom&quot;i}' name='ccBMFontPadding'>
<field declared_type='int' type='i' name='left'/>
<field declared_type='int' type='i' name='top'/>
<field declared_type='int' type='i' name='right'/>
<field declared_type='int' type='i' name='bottom'/>
</struct>
<struct type='{_ccBezierConfig=&quot;endPosition&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_1&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_2&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}}' name='ccBezierConfig'>
<field declared_type='CGPoint' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='endPosition'/>
<field declared_type='CGPoint' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='controlPoint_1'/>
<field declared_type='CGPoint' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='controlPoint_2'/>
</struct>
<struct type='{_ccBlendFunc=&quot;src&quot;I&quot;dst&quot;I}' name='ccBlendFunc'>
<field declared_type='GLenum' type='I' name='src'/>
<field declared_type='GLenum' type='I' name='dst'/>
</struct>
<struct type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}' name='ccCArray'>
<field declared_type='NSUInteger' type='I' name='num'/>
<field declared_type='NSUInteger' type='I' name='max'/>
<field declared_type='CCARRAY_ID*' type='^@' name='arr'/>
</struct>
<struct type='{_ccColor3B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C}' name='ccColor3B'>
<field declared_type='GLubyte' type='C' name='r'/>
<field declared_type='GLubyte' type='C' name='g'/>
<field declared_type='GLubyte' type='C' name='b'/>
</struct>
<struct type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' name='ccColor4B'>
<field declared_type='GLubyte' type='C' name='r'/>
<field declared_type='GLubyte' type='C' name='g'/>
<field declared_type='GLubyte' type='C' name='b'/>
<field declared_type='GLubyte' type='C' name='a'/>
</struct>
<struct type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='ccColor4F'>
<field declared_type='GLfloat' type='f' name='r'/>
<field declared_type='GLfloat' type='f' name='g'/>
<field declared_type='GLfloat' type='f' name='b'/>
<field declared_type='GLfloat' type='f' name='a'/>
</struct>
<struct type='{_ccGridSize=&quot;x&quot;i&quot;y&quot;i}' name='ccGridSize'>
<field declared_type='NSInteger' type='i' name='x'/>
<field declared_type='NSInteger' type='i' name='y'/>
</struct>
<struct type='{_ccPVRTexturePixelFormatInfo=&quot;internalFormat&quot;I&quot;format&quot;I&quot;type&quot;I&quot;bpp&quot;I&quot;compressed&quot;B&quot;alpha&quot;B&quot;ccPixelFormat&quot;i}' name='ccPVRTexturePixelFormatInfo'>
<field declared_type='GLenum' type='I' name='internalFormat'/>
<field declared_type='GLenum' type='I' name='format'/>
<field declared_type='GLenum' type='I' name='type'/>
<field declared_type='uint32_t' type='I' name='bpp'/>
<field declared_type='BOOL' type='B' name='compressed'/>
<field declared_type='BOOL' type='B' name='alpha'/>
<field declared_type='CCTexture2DPixelFormat' type='i' name='ccPixelFormat'/>
</struct>
<struct type='{_ccPointSprite=&quot;pos&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;size&quot;f}' name='ccPointSprite'>
<field declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='pos'/>
<field declared_type='ccColor4B' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' name='color'/>
<field declared_type='GLfloat' type='f' name='size'/>
</struct>
<struct type='{_ccQuad2=&quot;tl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;tr&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;bl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;br&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}}' name='ccQuad2'>
<field declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='tl'/>
<field declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='tr'/>
<field declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='bl'/>
<field declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='br'/>
</struct>
<struct type='{_ccQuad3=&quot;bl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;br&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tr&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}' name='ccQuad3'>
<field declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='bl'/>
<field declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='br'/>
<field declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='tl'/>
<field declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='tr'/>
</struct>
<struct type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' name='ccTex2F'>
<field declared_type='GLfloat' type='f' name='u'/>
<field declared_type='GLfloat' type='f' name='v'/>
</struct>
<struct type='{_ccTexParams=&quot;minFilter&quot;I&quot;magFilter&quot;I&quot;wrapS&quot;I&quot;wrapT&quot;I}' name='ccTexParams'>
<field declared_type='GLuint' type='I' name='minFilter'/>
<field declared_type='GLuint' type='I' name='magFilter'/>
<field declared_type='GLuint' type='I' name='wrapS'/>
<field declared_type='GLuint' type='I' name='wrapT'/>
</struct>
<struct type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV2F_C4B_T2F'>
<field declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='vertices'/>
<field declared_type='ccColor4B' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' name='colors'/>
<field declared_type='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' name='texCoords'/>
</struct>
<struct type='{_ccV2F_C4B_T2F_Quad=&quot;bl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV2F_C4B_T2F_Quad'>
<field declared_type='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='bl'/>
<field declared_type='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='br'/>
<field declared_type='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tl'/>
<field declared_type='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tr'/>
</struct>
<struct type='{_ccV2F_C4B_T2F_Triangle=&quot;a&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;b&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;c&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV2F_C4B_T2F_Triangle'>
<field declared_type='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='a'/>
<field declared_type='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='b'/>
<field declared_type='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='c'/>
</struct>
<struct type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV2F_C4F_T2F'>
<field declared_type='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='vertices'/>
<field declared_type='ccColor4F' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='colors'/>
<field declared_type='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' name='texCoords'/>
</struct>
<struct type='{_ccV2F_C4F_T2F_Quad=&quot;bl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV2F_C4F_T2F_Quad'>
<field declared_type='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='bl'/>
<field declared_type='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='br'/>
<field declared_type='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tl'/>
<field declared_type='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tr'/>
</struct>
<struct type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV3F_C4B_T2F'>
<field declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='vertices'/>
<field declared_type='ccColor4B' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' name='colors'/>
<field declared_type='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' name='texCoords'/>
</struct>
<struct type='{_ccV3F_C4B_T2F_Quad=&quot;tl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV3F_C4B_T2F_Quad'>
<field declared_type='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tl'/>
<field declared_type='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='bl'/>
<field declared_type='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tr'/>
<field declared_type='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='br'/>
</struct>
<struct type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV3F_C4F_T2F'>
<field declared_type='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='vertices'/>
<field declared_type='ccColor4F' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='colors'/>
<field declared_type='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' name='texCoords'/>
</struct>
<struct type='{_ccV3F_C4F_T2F_Quad=&quot;tl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV3F_C4F_T2F_Quad'>
<field declared_type='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tl'/>
<field declared_type='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='bl'/>
<field declared_type='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tr'/>
<field declared_type='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='br'/>
</struct>
<struct type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='ccVertex2F'>
<field declared_type='GLfloat' type='f' name='x'/>
<field declared_type='GLfloat' type='f' name='y'/>
</struct>
<struct type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='ccVertex3F'>
<field declared_type='GLfloat' type='f' name='x'/>
<field declared_type='GLfloat' type='f' name='y'/>
<field declared_type='GLfloat' type='f' name='z'/>
</struct>
<struct type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' name='sCCParticle'>
<field declared_type='CGPoint' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='pos'/>
<field declared_type='CGPoint' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='startPos'/>
<field declared_type='ccColor4F' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='color'/>
<field declared_type='ccColor4F' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='deltaColor'/>
<field declared_type='float' type='f' name='size'/>
<field declared_type='float' type='f' name='deltaSize'/>
<field declared_type='float' type='f' name='rotation'/>
<field declared_type='float' type='f' name='deltaRotation'/>
<field declared_type='ccTime' type='f' name='timeToLive'/>
<field declared_type='NSUInteger' type='I' name='atlasIndex'/>
<field declared_type='union sCCParticle::' type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' name='mode'/>
</struct>
<struct type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}' name='sImageTGA'>
<field declared_type='int' type='i' name='status'/>
<field declared_type='unsigned char' type='C' name='type'/>
<field declared_type='unsigned char' type='C' name='pixelDepth'/>
<field declared_type='short' type='s' name='width'/>
<field declared_type='short' type='s' name='height'/>
<field declared_type='unsigned char*' type='*' name='imageData'/>
<field declared_type='int' type='i' name='flipped'/>
</struct>
<struct type='{_FontDefHashElement=&quot;key&quot;I&quot;fontDef&quot;{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}}' name='tCCFontDefHashElement'>
<field declared_type='NSUInteger' type='I' name='key'/>
<field declared_type='ccBMFontDef' type='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}' name='fontDef'/>
<field declared_type='UT_hash_handle' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' name='hh'/>
</struct>
<struct type='{_KerningHashElement=&quot;key&quot;i&quot;amount&quot;i&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}}' name='tCCKerningHashElement'>
<field declared_type='int' type='i' name='key'/>
<field declared_type='int' type='i' name='amount'/>
<field declared_type='UT_hash_handle' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' name='hh'/>
</struct>
<struct type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' name='tCCParticle'>
<field declared_type='CGPoint' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='pos'/>
<field declared_type='CGPoint' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='startPos'/>
<field declared_type='ccColor4F' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='color'/>
<field declared_type='ccColor4F' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='deltaColor'/>
<field declared_type='float' type='f' name='size'/>
<field declared_type='float' type='f' name='deltaSize'/>
<field declared_type='float' type='f' name='rotation'/>
<field declared_type='float' type='f' name='deltaRotation'/>
<field declared_type='ccTime' type='f' name='timeToLive'/>
<field declared_type='NSUInteger' type='I' name='atlasIndex'/>
<field declared_type='union sCCParticle::' type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' name='mode'/>
</struct>
<struct type='{_hashElement=&quot;actions&quot;^{ccArray}&quot;actionIndex&quot;I&quot;currentActionSalvaged&quot;B&quot;paused&quot;B&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}&quot;target&quot;@&quot;currentAction&quot;@&quot;CCAction&quot;}' name='tHashElement'>
<field declared_type='struct ccArray*' type='^{ccArray=II^@}' name='actions'/>
<field declared_type='NSUInteger' type='I' name='actionIndex'/>
<field declared_type='BOOL' type='B' name='currentActionSalvaged'/>
<field declared_type='BOOL' type='B' name='paused'/>
<field declared_type='UT_hash_handle' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' name='hh'/>
<field declared_type='id' type='@' name='target'/>
<field declared_type='CCAction*' type='@&quot;CCAction&quot;' name='currentAction'/>
</struct>
<struct type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}' name='tImageTGA'>
<field declared_type='int' type='i' name='status'/>
<field declared_type='unsigned char' type='C' name='type'/>
<field declared_type='unsigned char' type='C' name='pixelDepth'/>
<field declared_type='short' type='s' name='width'/>
<field declared_type='short' type='s' name='height'/>
<field declared_type='unsigned char*' type='*' name='imageData'/>
<field declared_type='int' type='i' name='flipped'/>
</struct>
<constant declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='ccBLACK' const='true'/>
<constant declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='ccBLUE' const='true'/>
<constant declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='ccGRAY' const='true'/>
<constant declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='ccGREEN' const='true'/>
<constant declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='ccMAGENTA' const='true'/>
<constant declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='ccORANGE' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionColorLengthTexture_frag' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionColorLengthTexture_vert' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionColor_frag' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionColor_vert' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionTextureA8Color_frag' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionTextureA8Color_vert' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionTextureColorAlphaTest_frag' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionTextureColor_frag' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionTextureColor_vert' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionTexture_frag' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionTexture_uColor_frag' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionTexture_uColor_vert' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPositionTexture_vert' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPosition_uColor_frag' const='true'/>
<constant declared_type='GLchar*' type='*' name='ccPosition_uColor_vert' const='true'/>
<constant declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='ccRED' const='true'/>
<constant declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='ccWHITE' const='true'/>
<constant declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='ccYELLOW' const='true'/>
<constant declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' name='kCCBlendFuncDisable' const='true'/>
<constant declared_type='NSString*' type='@' name='kCCFileUtilsDefault' const='true'/>
<constant declared_type='NSString*' type='@' name='kCCFileUtilsMac' const='true'/>
<constant declared_type='NSString*' type='@' name='kCCFileUtilsMacHD' const='true'/>
<constant declared_type='BOOL' type='B' name='kCCProfilerCategoryBatchSprite'/>
<constant declared_type='BOOL' type='B' name='kCCProfilerCategoryParticles'/>
<constant declared_type='BOOL' type='B' name='kCCProfilerCategorySprite'/>
<string_constant name='CCAnimationFrameDisplayedNotification' value='CCAnimationFrameDisplayedNotification' nsstring='true'/>
<string_constant name='kCCAttributeNameColor' value='a_color' nsstring='true'/>
<string_constant name='kCCAttributeNamePosition' value='a_position' nsstring='true'/>
<string_constant name='kCCAttributeNameTexCoord' value='a_texCoord' nsstring='true'/>
<string_constant name='kCCShader_PositionColor' value='ShaderPositionColor' nsstring='true'/>
<string_constant name='kCCShader_PositionLengthTexureColor' value='ShaderPositionLengthTextureColor' nsstring='true'/>
<string_constant name='kCCShader_PositionTexture' value='ShaderPositionTexture' nsstring='true'/>
<string_constant name='kCCShader_PositionTextureA8Color' value='ShaderPositionTextureA8Color' nsstring='true'/>
<string_constant name='kCCShader_PositionTextureColor' value='ShaderPositionTextureColor' nsstring='true'/>
<string_constant name='kCCShader_PositionTextureColorAlphaTest' value='ShaderPositionTextureColorAlphaTest' nsstring='true'/>
<string_constant name='kCCShader_PositionTexture_uColor' value='ShaderPositionTexture_uColor' nsstring='true'/>
<string_constant name='kCCShader_Position_uColor' value='ShaderPosition_uColor' nsstring='true'/>
<string_constant name='kCCUniformAlphaTestValue' value='CC_alpha_value'/>
<string_constant name='kCCUniformCosTime_s' value='CC_CosTime'/>
<string_constant name='kCCUniformMVMatrix_s' value='CC_MVMatrix'/>
<string_constant name='kCCUniformMVPMatrix_s' value='CC_MVPMatrix'/>
<string_constant name='kCCUniformPMatrix_s' value='CC_PMatrix'/>
<string_constant name='kCCUniformRandom01_s' value='CC_Random01'/>
<string_constant name='kCCUniformSampler_s' value='CC_Texture0'/>
<string_constant name='kCCUniformSinTime_s' value='CC_SinTime'/>
<string_constant name='kCCUniformTime_s' value='CC_Time'/>
<enum name='CCSpriteIndexNotInitialized' value='4294967295'/>
<enum name='CCTMXOrientationHex' value='1'/>
<enum name='CCTMXOrientationIso' value='2'/>
<enum name='CCTMXOrientationOrtho' value='0'/>
<enum name='CCZ_COMPRESSION_BZIP2' value='1'/>
<enum name='CCZ_COMPRESSION_GZIP' value='2'/>
<enum name='CCZ_COMPRESSION_NONE' value='3'/>
<enum name='CCZ_COMPRESSION_ZLIB' value='0'/>
<enum name='CC_BLEND_DST' value='771'/>
<enum name='CC_BLEND_SRC' value='1'/>
<enum name='CC_DIRECTOR_IOS_USE_BACKGROUND_THREAD' value='0'/>
<enum name='CC_DIRECTOR_MAC_THREAD' value='0'/>
<enum name='CC_DIRECTOR_STATS_INTERVAL' value='0.1f'/>
<enum name='CC_ENABLE_BOX2D_INTEGRATION' value='0'/>
<enum name='CC_ENABLE_DEPRECATED' value='1'/>
<enum name='CC_ENABLE_GL_STATE_CACHE' value='0'/>
<enum name='CC_ENABLE_PROFILERS' value='0'/>
<enum name='CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL' value='0'/>
<enum name='CC_GL_ALL' value='0'/>
<enum name='CC_LABELATLAS_DEBUG_DRAW' value='0'/>
<enum name='CC_LABELBMFONT_DEBUG_DRAW' value='0'/>
<enum name='CC_MAC_USE_DISPLAY_LINK_THREAD' value='0'/>
<enum name='CC_MAC_USE_MAIN_THREAD' value='2'/>
<enum name='CC_MAC_USE_OWN_THREAD' value='1'/>
<enum name='CC_NODE_RENDER_SUBPIXEL' value='1'/>
<enum name='CC_PVRMIPMAP_MAX' value='16'/>
<enum name='CC_SPRITEBATCHNODE_RENDER_SUBPIXEL' value='1'/>
<enum name='CC_SPRITE_DEBUG_DRAW' value='0'/>
<enum name='CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP' value='0'/>
<enum name='CC_TEXTURE_ATLAS_USE_VAO' value='1'/>
<enum name='CC_USE_LA88_LABELS' value='1'/>
<enum name='COCOS2D_VERSION' value='131328'/>
<enum name='HASH_BKT_CAPACITY_THRESH' value='10'/>
<enum name='HASH_BLOOM_SIGNATURE' value='2971803890'/>
<enum name='HASH_INITIAL_NUM_BUCKETS' value='32'/>
<enum name='HASH_INITIAL_NUM_BUCKETS_LOG2' value='5'/>
<enum name='HASH_SIGNATURE' value='2685476833'/>
<enum name='TGA_ERROR_COMPRESSED_FILE' value='5'/>
<enum name='TGA_ERROR_FILE_OPEN' value='1'/>
<enum name='TGA_ERROR_INDEXED_COLOR' value='3'/>
<enum name='TGA_ERROR_MEMORY' value='4'/>
<enum name='TGA_ERROR_READING_FILE' value='2'/>
<enum name='TGA_OK' value='0'/>
<enum name='TMXLayerAttribBase64' value='2'/>
<enum name='TMXLayerAttribGzip' value='4'/>
<enum name='TMXLayerAttribNone' value='1'/>
<enum name='TMXLayerAttribZlib' value='8'/>
<enum name='TMXPropertyLayer' value='2'/>
<enum name='TMXPropertyMap' value='1'/>
<enum name='TMXPropertyNone' value='0'/>
<enum name='TMXPropertyObject' value='4'/>
<enum name='TMXPropertyObjectGroup' value='3'/>
<enum name='TMXPropertyTile' value='5'/>
<enum name='kCCActionTagInvalid' value='-1'/>
<enum name='kCCDirectorProjection2D' value='0'/>
<enum name='kCCDirectorProjection3D' value='1'/>
<enum name='kCCDirectorProjectionCustom' value='2'/>
<enum name='kCCDirectorProjectionDefault' value='1'/>
<enum name='kCCFileUtilsSearchDirectory' value='1'/>
<enum name='kCCFileUtilsSearchSuffix' value='0'/>
<enum name='kCCFlipedAll' value='3758096384'/>
<enum name='kCCFlippedMask' value='536870911'/>
<enum name='kCCImageFormatJPEG' value='0'/>
<enum name='kCCImageFormatPNG' value='1'/>
<enum name='kCCItemSize' value='32'/>
<enum name='kCCLabelAutomaticWidth' value='-1'/>
<enum name='kCCLineBreakModeCharacterWrap' value='1'/>
<enum name='kCCLineBreakModeClip' value='2'/>
<enum name='kCCLineBreakModeHeadTruncation' value='3'/>
<enum name='kCCLineBreakModeMiddleTruncation' value='5'/>
<enum name='kCCLineBreakModeTailTruncation' value='4'/>
<enum name='kCCLineBreakModeWordWrap' value='0'/>
<enum name='kCCMacVersion_10_6' value='168165376'/>
<enum name='kCCMacVersion_10_7' value='168230912'/>
<enum name='kCCMacVersion_10_8' value='168296448'/>
<enum name='kCCMenuHandlerPriority' value='-128'/>
<enum name='kCCMenuStateTrackingTouch' value='1'/>
<enum name='kCCMenuStateWaiting' value='0'/>
<enum name='kCCNodeTagInvalid' value='-1'/>
<enum name='kCCParticleDurationInfinity' value='-1'/>
<enum name='kCCParticleModeGravity' value='0'/>
<enum name='kCCParticleModeRadius' value='1'/>
<enum name='kCCParticleStartRadiusEqualToEndRadius' value='-1'/>
<enum name='kCCParticleStartSizeEqualToEndSize' value='-1'/>
<enum name='kCCPositionTypeFree' value='0'/>
<enum name='kCCPositionTypeGrouped' value='2'/>
<enum name='kCCPositionTypeRelative' value='1'/>
<enum name='kCCPriorityNonSystemMin' value='-2147483647'/>
<enum name='kCCPrioritySystem' value='-2147483648'/>
<enum name='kCCProgressTimerTypeBar' value='1'/>
<enum name='kCCProgressTimerTypeRadial' value='0'/>
<enum name='kCCRepeatForever' value='4294967294'/>
<enum name='kCCResolutionMac' value='1'/>
<enum name='kCCResolutionMacRetinaDisplay' value='2'/>
<enum name='kCCResolutionUnknown' value='0'/>
<enum name='kCCTMXTileDiagonalFlag' value='536870912'/>
<enum name='kCCTMXTileHorizontalFlag' value='2147483648'/>
<enum name='kCCTMXTileVerticalFlag' value='1073741824'/>
<enum name='kCCTextAlignmentCenter' value='1'/>
<enum name='kCCTextAlignmentLeft' value='0'/>
<enum name='kCCTextAlignmentRight' value='2'/>
<enum name='kCCTexture2DPixelFormat_A8' value='3'/>
<enum name='kCCTexture2DPixelFormat_AI88' value='5'/>
<enum name='kCCTexture2DPixelFormat_Default' value='0'/>
<enum name='kCCTexture2DPixelFormat_I8' value='4'/>
<enum name='kCCTexture2DPixelFormat_PVRTC2' value='9'/>
<enum name='kCCTexture2DPixelFormat_PVRTC4' value='8'/>
<enum name='kCCTexture2DPixelFormat_RGB565' value='2'/>
<enum name='kCCTexture2DPixelFormat_RGB5A1' value='7'/>
<enum name='kCCTexture2DPixelFormat_RGB888' value='1'/>
<enum name='kCCTexture2DPixelFormat_RGBA4444' value='6'/>
<enum name='kCCTexture2DPixelFormat_RGBA8888' value='0'/>
<enum name='kCCTouchesAllAtOnce' value='0'/>
<enum name='kCCTouchesOneByOne' value='1'/>
<enum name='kCCTransitionOrientationDownOver' value='1'/>
<enum name='kCCTransitionOrientationLeftOver' value='0'/>
<enum name='kCCTransitionOrientationRightOver' value='1'/>
<enum name='kCCTransitionOrientationUpOver' value='0'/>
<enum name='kCCUniformCosTime' value='5'/>
<enum name='kCCUniformMVMatrix' value='1'/>
<enum name='kCCUniformMVPMatrix' value='2'/>
<enum name='kCCUniformPMatrix' value='0'/>
<enum name='kCCUniformRandom01' value='6'/>
<enum name='kCCUniformSampler' value='7'/>
<enum name='kCCUniformSinTime' value='4'/>
<enum name='kCCUniformTime' value='3'/>
<enum name='kCCUniform_MAX' value='8'/>
<enum name='kCCVertexAttribFlag_Color' value='2'/>
<enum name='kCCVertexAttribFlag_None' value='0'/>
<enum name='kCCVertexAttribFlag_PosColorTex' value='7'/>
<enum name='kCCVertexAttribFlag_Position' value='1'/>
<enum name='kCCVertexAttribFlag_TexCoords' value='4'/>
<enum name='kCCVertexAttrib_Color' value='1'/>
<enum name='kCCVertexAttrib_MAX' value='3'/>
<enum name='kCCVertexAttrib_Position' value='0'/>
<enum name='kCCVertexAttrib_TexCoords' value='2'/>
<enum name='kCCVerticalTextAlignmentBottom' value='2'/>
<enum name='kCCVerticalTextAlignmentCenter' value='1'/>
<enum name='kCCVerticalTextAlignmentTop' value='0'/>
<enum name='kCCiOSVersion_4_0' value='67108864'/>
<enum name='kCCiOSVersion_4_0_1' value='67109120'/>
<enum name='kCCiOSVersion_4_1' value='67174400'/>
<enum name='kCCiOSVersion_4_2' value='67239936'/>
<enum name='kCCiOSVersion_4_2_1' value='67240192'/>
<enum name='kCCiOSVersion_4_3' value='67305472'/>
<enum name='kCCiOSVersion_4_3_1' value='67305728'/>
<enum name='kCCiOSVersion_4_3_2' value='67305984'/>
<enum name='kCCiOSVersion_4_3_3' value='67306240'/>
<enum name='kCCiOSVersion_4_3_4' value='67306496'/>
<enum name='kCCiOSVersion_4_3_5' value='67306752'/>
<enum name='kCCiOSVersion_5_0' value='83886080'/>
<enum name='kCCiOSVersion_5_0_1' value='83886336'/>
<enum name='kCCiOSVersion_5_1_0' value='83951616'/>
<enum name='kCCiOSVersion_6_0_0' value='100663296'/>
<enum name='kParticleDurationInfinity' value='-1'/>
<enum name='kParticleStartSizeEqualToEndSize' value='-1'/>
<enum name='kPositionTypeFree' value='0'/>
<enum name='kPositionTypeGrouped' value='2'/>
<function name='CCProfilingBeginTimingBlock'>
<arg declared_type='NSString*' type='@' name='timerName'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CCProfilingEndTimingBlock'>
<arg declared_type='NSString*' type='@' name='timerName'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CCProfilingResetTimingBlock'>
<arg declared_type='NSString*' type='@' name='timerName'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CGAffineToGL'>
<arg declared_type='CGAffineTransform*' type='^{CGAffineTransform=ffffff}' name='t' const='true'/>
<arg declared_type='GLfloat*' type='^f' name='m'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FNTConfigLoadFile'>
<arg declared_type='NSString*' type='@' name='file'/>
<retval declared_type='CCBMFontConfiguration*' type='@'/>
</function>
<function name='FNTConfigRemoveCache'>
<retval declared_type='void' type='v'/>
</function>
<function name='GLToCGAffine'>
<arg declared_type='GLfloat*' type='^f' name='m' const='true'/>
<arg declared_type='CGAffineTransform*' type='^{CGAffineTransform=ffffff}' name='t'/>
<retval declared_type='void' type='v'/>
</function>
<function name='base64Decode'>
<arg declared_type='unsigned char*' type='*' name='in'/>
<arg declared_type='unsigned int' type='I' name='inLength'/>
<arg declared_type='unsigned char**' type='^*' name='out'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccArrayAppendArray'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='plusArr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayAppendArrayWithResize'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='plusArr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayAppendObject'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayAppendObjectWithResize'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayContainsObject'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccArrayDoubleCapacity'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayEnsureExtraCapacity'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='NSUInteger' type='I' name='extra'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFastRemoveObject'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFastRemoveObjectAtIndex'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFree'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFullRemoveArray'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='minusArr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayGetIndexOfObject'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='NSUInteger' type='I'/>
</function>
<function name='ccArrayInsertObjectAtIndex'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='id' type='@' name='object'/>
<arg declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayMakeObjectPerformSelectorWithArrayObjects'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='SEL' type=':' name='sel'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayMakeObjectsPerformSelector'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='SEL' type=':' name='sel'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayMakeObjectsPerformSelectorWithObject'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='SEL' type=':' name='sel'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayNew'>
<arg declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='ccArray*' type='^{ccArray=II^@}'/>
</function>
<function name='ccArrayRemoveAllObjects'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayRemoveArray'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='minusArr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayRemoveObject'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayRemoveObjectAtIndex'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayShrink'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArraySwapObjectsAtIndexes'>
<arg declared_type='ccArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='NSUInteger' type='I' name='index1'/>
<arg declared_type='NSUInteger' type='I' name='index2'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendArray'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='plusArr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendArrayWithResize'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='plusArr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendValue'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='CCARRAY_ID' type='@' name='value'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendValueWithResize'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='CCARRAY_ID' type='@' name='value'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayContainsValue'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='CCARRAY_ID' type='@' name='value'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccCArrayDoubleCapacity'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayEnsureExtraCapacity'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='NSUInteger' type='I' name='extra'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayFastRemoveValueAtIndex'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayFree'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayFullRemoveArray'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='minusArr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayGetIndexOfValue'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='CCARRAY_ID' type='@' name='value'/>
<retval declared_type='NSUInteger' type='I'/>
</function>
<function name='ccCArrayInsertValueAtIndex'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='CCARRAY_ID' type='@' name='value'/>
<arg declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayNew'>
<arg declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='ccCArray*' type='^{ccArray=II^@}'/>
</function>
<function name='ccCArrayRemoveAllValues'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayRemoveArray'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='minusArr'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayRemoveValue'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='CCARRAY_ID' type='@' name='value'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayRemoveValueAtIndex'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCardinalSplineAt'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p0'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p1'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p2'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p3'/>
<arg declared_type='CGFloat' type='f' name='tension'/>
<arg declared_type='ccTime' type='f' name='t'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccDrawCardinalSpline'>
<arg declared_type='CCPointArray*' type='@' name='config'/>
<arg declared_type='CGFloat' type='f' name='tension'/>
<arg declared_type='NSUInteger' type='I' name='segments'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawCatmullRom'>
<arg declared_type='CCPointArray*' type='@' name='arrayOfControlPoints'/>
<arg declared_type='NSUInteger' type='I' name='segments'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawCircle'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='center'/>
<arg declared_type='float' type='f' name='radius'/>
<arg declared_type='float' type='f' name='angle'/>
<arg declared_type='NSUInteger' type='I' name='segments'/>
<arg declared_type='BOOL' type='B' name='drawLineToCenter'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawColor4B'>
<arg declared_type='GLubyte' type='C' name='r'/>
<arg declared_type='GLubyte' type='C' name='g'/>
<arg declared_type='GLubyte' type='C' name='b'/>
<arg declared_type='GLubyte' type='C' name='a'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawColor4F'>
<arg declared_type='GLfloat' type='f' name='r'/>
<arg declared_type='GLfloat' type='f' name='g'/>
<arg declared_type='GLfloat' type='f' name='b'/>
<arg declared_type='GLfloat' type='f' name='a'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawCubicBezier'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='origin'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='control1'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='control2'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='destination'/>
<arg declared_type='NSUInteger' type='I' name='segments'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawLine'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='origin'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='destination'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawPoint'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='point'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawPoints'>
<arg declared_type='CGPoint*' type='^{CGPoint=ff}' name='points' const='true'/>
<arg declared_type='NSUInteger' type='I' name='numberOfPoints'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawPoly'>
<arg declared_type='CGPoint*' type='^{CGPoint=ff}' name='vertices' const='true'/>
<arg declared_type='NSUInteger' type='I' name='numOfVertices'/>
<arg declared_type='BOOL' type='B' name='closePolygon'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawQuadBezier'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='origin'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='control'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='destination'/>
<arg declared_type='NSUInteger' type='I' name='segments'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawRect'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='origin'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='destination'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawSolidPoly'>
<arg declared_type='CGPoint*' type='^{CGPoint=ff}' name='poli' const='true'/>
<arg declared_type='NSUInteger' type='I' name='numberOfPoints'/>
<arg declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='color'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawSolidRect'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='origin'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='destination'/>
<arg declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='color'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLBindTexture2D'>
<arg declared_type='GLuint' type='I' name='textureId'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLBindTexture2DN'>
<arg declared_type='GLuint' type='I' name='textureUnit'/>
<arg declared_type='GLuint' type='I' name='textureId'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLBindVAO'>
<arg declared_type='GLuint' type='I' name='vaoId'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLBlendFunc'>
<arg declared_type='GLenum' type='I' name='sfactor'/>
<arg declared_type='GLenum' type='I' name='dfactor'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLBlendResetToCache'>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLDeleteProgram'>
<arg declared_type='GLuint' type='I' name='program'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLDeleteTexture'>
<arg declared_type='GLuint' type='I' name='textureId'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLDeleteTextureN'>
<arg declared_type='GLuint' type='I' name='textureUnit'/>
<arg declared_type='GLuint' type='I' name='textureId'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLEnable'>
<arg declared_type='ccGLServerState' type='i' name='flags'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLEnableVertexAttribs'>
<arg declared_type='unsigned int' type='I' name='flags'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLInvalidateStateCache'>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLUseProgram'>
<arg declared_type='GLuint' type='I' name='program'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccInflateCCZFile'>
<arg declared_type='char*' type='*' name='filename' const='true'/>
<arg declared_type='unsigned char**' type='^*' name='out'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccInflateGZipFile'>
<arg declared_type='char*' type='*' name='filename' const='true'/>
<arg declared_type='unsigned char**' type='^*' name='out'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccInflateMemory'>
<arg declared_type='unsigned char*' type='*' name='in'/>
<arg declared_type='unsigned int' type='I' name='inLength'/>
<arg declared_type='unsigned char**' type='^*' name='out'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccInflateMemoryWithHint'>
<arg declared_type='unsigned char*' type='*' name='in'/>
<arg declared_type='unsigned int' type='I' name='inLength'/>
<arg declared_type='unsigned char**' type='^*' name='out'/>
<arg declared_type='unsigned int' type='I' name='outLenghtHint'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccLoadFileIntoMemory'>
<arg declared_type='char*' type='*' name='filename' const='true'/>
<arg declared_type='unsigned char**' type='^*' name='out'/>
<retval declared_type='NSInteger' type='i'/>
</function>
<function name='ccNextPOT'>
<arg declared_type='unsigned long' type='L' name='value'/>
<retval declared_type='unsigned long' type='L'/>
</function>
<function name='ccPointSize'>
<arg declared_type='GLfloat' type='f' name='pointSize'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccSetProjectionMatrixDirty'>
<retval declared_type='void' type='v'/>
</function>
<function name='ccVertexLineIntersect'>
<arg declared_type='float' type='f' name='Ax'/>
<arg declared_type='float' type='f' name='Ay'/>
<arg declared_type='float' type='f' name='Bx'/>
<arg declared_type='float' type='f' name='By'/>
<arg declared_type='float' type='f' name='Cx'/>
<arg declared_type='float' type='f' name='Cy'/>
<arg declared_type='float' type='f' name='Dx'/>
<arg declared_type='float' type='f' name='Dy'/>
<arg declared_type='float*' type='^f' name='T'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccVertexLineToPolygon'>
<arg declared_type='CGPoint*' type='^{CGPoint=ff}' name='points'/>
<arg declared_type='float' type='f' name='stroke'/>
<arg declared_type='ccVertex2F*' type='^{_ccVertex2F=ff}' name='vertices'/>
<arg declared_type='NSUInteger' type='I' name='offset'/>
<arg declared_type='NSUInteger' type='I' name='nuPoints'/>
<retval declared_type='void' type='v'/>
</function>
<function name='cc_insertionSort'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='arr'/>
<arg declared_type='cc_comparator' type='^?' name='comparator' function_pointer='true'>
<arg declared_type='void*' type='^v' const='true'/>
<arg declared_type='void*' type='^v' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='cc_mergesortL'>
<arg declared_type='ccCArray*' type='^{ccArray=II^@}' name='array'/>
<arg declared_type='size_t' type='L' name='width'/>
<arg declared_type='cc_comparator' type='^?' name='comparator' function_pointer='true'>
<arg declared_type='void*' type='^v' const='true'/>
<arg declared_type='void*' type='^v' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='cc_pointerswap'>
<arg declared_type='void*' type='^v' name='a'/>
<arg declared_type='void*' type='^v' name='b'/>
<arg declared_type='size_t' type='L' name='width'/>
<retval declared_type='void' type='v'/>
</function>
<function inline='true' name='ccc3'>
<arg declared_type='GLubyte' type='C' name='r' const='true'/>
<arg declared_type='GLubyte' type='C' name='g' const='true'/>
<arg declared_type='GLubyte' type='C' name='b' const='true'/>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</function>
<function inline='true' name='ccc4'>
<arg declared_type='GLubyte' type='C' name='r' const='true'/>
<arg declared_type='GLubyte' type='C' name='g' const='true'/>
<arg declared_type='GLubyte' type='C' name='b' const='true'/>
<arg declared_type='GLubyte' type='C' name='o' const='true'/>
<retval declared_type='ccColor4B' type='{_ccColor4B=CCCC}'/>
</function>
<function inline='true' name='ccc4BFromccc4F'>
<arg declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='c'/>
<retval declared_type='ccColor4B' type='{_ccColor4B=CCCC}'/>
</function>
<function inline='true' name='ccc4FEqual'>
<arg declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='a'/>
<arg declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='b'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='ccc4FFromccc3B'>
<arg declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='c'/>
<retval declared_type='ccColor4F' type='{_ccColor4F=ffff}'/>
</function>
<function inline='true' name='ccc4FFromccc4B'>
<arg declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='c'/>
<retval declared_type='ccColor4F' type='{_ccColor4F=ffff}'/>
</function>
<function inline='true' name='ccc4f'>
<arg declared_type='GLfloat' type='f' name='r' const='true'/>
<arg declared_type='GLfloat' type='f' name='g' const='true'/>
<arg declared_type='GLfloat' type='f' name='b' const='true'/>
<arg declared_type='GLfloat' type='f' name='a' const='true'/>
<retval declared_type='ccColor4F' type='{_ccColor4F=ffff}'/>
</function>
<function inline='true' name='ccg'>
<arg declared_type='NSInteger' type='i' name='x' const='true'/>
<arg declared_type='NSInteger' type='i' name='y' const='true'/>
<retval declared_type='ccGridSize' type='{_ccGridSize=ii}'/>
</function>
<function inline='true' name='ccp'>
<arg declared_type='CGFloat' type='f' name='x'/>
<arg declared_type='CGFloat' type='f' name='y'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function inline='true' name='ccpAdd'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v1' const='true'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v2' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpAngle'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='a'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='b'/>
<retval declared_type='float' type='f'/>
</function>
<function name='ccpAngleSigned'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='a'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='b'/>
<retval declared_type='float' type='f'/>
</function>
<function name='ccpClamp'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='from'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='to'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpCompMult'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='a'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='b'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpCompOp'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p'/>
<arg declared_type='float (*)(float)' type='^?' name='opFunc' function_pointer='true'>
<arg declared_type='float' type='f'/>
<retval declared_type='float' type='f'/>
</arg>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function inline='true' name='ccpCross'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v1' const='true'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v2' const='true'/>
<retval declared_type='CGFloat' type='f'/>
</function>
<function name='ccpDistance'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v1' const='true'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v2' const='true'/>
<retval declared_type='CGFloat' type='f'/>
</function>
<function inline='true' name='ccpDistanceSQ'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p1' const='true'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p2' const='true'/>
<retval declared_type='CGFloat' type='f'/>
</function>
<function inline='true' name='ccpDot'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v1' const='true'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v2' const='true'/>
<retval declared_type='CGFloat' type='f'/>
</function>
<function name='ccpForAngle'>
<arg declared_type='CGFloat' type='f' name='a' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpFromSize'>
<arg declared_type='CGSize' type='{CGSize=ff}' name='s'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpFuzzyEqual'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='a'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='b'/>
<arg declared_type='float' type='f' name='variance'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccpIntersectPoint'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='A'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='B'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='C'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='D'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpLength'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v' const='true'/>
<retval declared_type='CGFloat' type='f'/>
</function>
<function inline='true' name='ccpLengthSQ'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v' const='true'/>
<retval declared_type='CGFloat' type='f'/>
</function>
<function name='ccpLerp'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='a'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='b'/>
<arg declared_type='float' type='f' name='alpha'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpLineIntersect'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p1'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p2'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p3'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='p4'/>
<arg declared_type='float*' type='^f' name='s'/>
<arg declared_type='float*' type='^f' name='t'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='ccpMidpoint'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v1' const='true'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v2' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function inline='true' name='ccpMult'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v' const='true'/>
<arg declared_type='CGFloat' type='f' name='s' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function inline='true' name='ccpNeg'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpNormalize'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function inline='true' name='ccpPerp'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function inline='true' name='ccpProject'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v1' const='true'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v2' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function inline='true' name='ccpRPerp'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function inline='true' name='ccpRotate'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v1' const='true'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v2' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpRotateByAngle'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='pivot'/>
<arg declared_type='float' type='f' name='angle'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpSegmentIntersect'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='A'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='B'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='C'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='D'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='ccpSub'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v1' const='true'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v2' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpToAngle'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v' const='true'/>
<retval declared_type='CGFloat' type='f'/>
</function>
<function inline='true' name='ccpUnrotate'>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v1' const='true'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' name='v2' const='true'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='clampf'>
<arg declared_type='float' type='f' name='value'/>
<arg declared_type='float' type='f' name='min_inclusive'/>
<arg declared_type='float' type='f' name='max_inclusive'/>
<retval declared_type='float' type='f'/>
</function>
<function name='cocos2dVersion'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='tgaDestroy'>
<arg declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}' name='info'/>
<retval declared_type='void' type='v'/>
</function>
<function name='tgaLoad'>
<arg declared_type='char*' type='*' name='filename' const='true'/>
<retval declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}'/>
</function>
<function name='tgaLoadHeader'>
<arg declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' name='file'/>
<arg declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}' name='info'/>
<retval declared_type='void' type='v'/>
</function>
<function name='tgaLoadImageData'>
<arg declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' name='file'/>
<arg declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}' name='info'/>
<retval declared_type='void' type='v'/>
</function>
<function name='tgaRGBtogreyscale'>
<arg declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}' name='info'/>
<retval declared_type='void' type='v'/>
</function>
<function_alias original='NSPointToCGPoint' name='CCNSPointToCGPoint'/>
<function_alias original='NSRectToCGRect' name='CCNSRectToCGRect'/>
<function_alias original='NSSizeToCGSize' name='CCNSSizeToCGSize'/>
<function_alias original='glBindVertexArrayAPPLE' name='glBindVertexArray'/>
<function_alias original='glDeleteVertexArraysAPPLE' name='glDeleteVertexArrays'/>
<function_alias original='glGenVertexArraysAPPLE' name='glGenVertexArrays'/>
<class name='CCAccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg index='0' declared_type='CCAction*' type='@' name='action'/>
<arg index='1' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:duration:'>
<arg index='0' declared_type='CCAction*' type='@' name='action'/>
<arg index='1' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg index='0' declared_type='float' type='f' name='rate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAccelDeccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg index='0' declared_type='CCAction*' type='@' name='action'/>
<arg index='1' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:duration:'>
<arg index='0' declared_type='CCAction*' type='@' name='action'/>
<arg index='1' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg index='0' declared_type='float' type='f' name='rate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAction'>
<method selector='action' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='copyWithZone:'>
<arg index='0' declared_type='NSZone*' type='^{_NSZone=}' name='zone'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isDone'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='originalTarget'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setTag:'>
<arg index='0' declared_type='NSInteger' type='i' name='tag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startWithTarget:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='step:'>
<arg index='0' declared_type='ccTime' type='f' name='dt'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='target'>
<retval declared_type='id' type='@'/>
</method>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='time'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCActionCamera'>
<method selector='startWithTarget:'>
<arg index='0' declared_type='id' type='@' name='aTarget'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCActionEase'>
<method selector='actionWithAction:' class_method='true'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCActionInstant'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCActionInterval'>
<method selector='actionWithDuration:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='elapsed'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='initWithDuration:'>
<arg index='0' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isDone'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reverse'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCActionManager'>
<method selector='addAction:target:paused:'>
<arg index='0' declared_type='CCAction*' type='@' name='action'/>
<arg index='1' declared_type='id' type='@' name='target'/>
<arg index='2' declared_type='BOOL' type='B' name='paused'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getActionByTag:target:'>
<arg index='0' declared_type='NSInteger' type='i' name='tag'/>
<arg index='1' declared_type='id' type='@' name='target'/>
<retval declared_type='CCAction*' type='@'/>
</method>
<method selector='numberOfRunningActionsInTarget:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='pauseAllRunningActions'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='pauseTarget:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAction:'>
<arg index='0' declared_type='CCAction*' type='@' name='action'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeActionByTag:target:'>
<arg index='0' declared_type='NSInteger' type='i' name='tag'/>
<arg index='1' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllActionsFromTarget:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTarget:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTargets:'>
<arg index='0' declared_type='NSSet*' type='@' name='targetsToResume'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCActionTween'>
<method selector='actionWithDuration:key:from:to:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='aDuration'/>
<arg index='1' declared_type='NSString*' type='@' name='key'/>
<arg index='2' declared_type='float' type='f' name='from'/>
<arg index='3' declared_type='float' type='f' name='to'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:key:from:to:'>
<arg index='0' declared_type='ccTime' type='f' name='aDuration'/>
<arg index='1' declared_type='NSString*' type='@' name='key'/>
<arg index='2' declared_type='float' type='f' name='from'/>
<arg index='3' declared_type='float' type='f' name='to'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCAnimate'>
<method selector='actionWithAnimation:' class_method='true'>
<arg index='0' declared_type='CCAnimation*' type='@' name='animation'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='animation'>
<retval declared_type='CCAnimation*' type='@'/>
</method>
<method selector='initWithAnimation:'>
<arg index='0' declared_type='CCAnimation*' type='@' name='animation'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAnimation:'>
<arg index='0' declared_type='CCAnimation*' type='@' name='animation'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAnimation'>
<method selector='addSpriteFrame:'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='frame'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFrameWithFilename:'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFrameWithTexture:rect:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animation' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='animationWithAnimationFrames:delayPerUnit:loops:' class_method='true'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfAnimationFrames'/>
<arg index='1' declared_type='float' type='f' name='delayPerUnit'/>
<arg index='2' declared_type='NSUInteger' type='I' name='loops'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='animationWithSpriteFrames:' class_method='true'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfSpriteFrameNames'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='animationWithSpriteFrames:delay:' class_method='true'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfSpriteFrameNames'/>
<arg index='1' declared_type='float' type='f' name='delay'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='delayPerUnit'>
<retval declared_type='float' type='f'/>
</method>
<method selector='duration'>
<retval declared_type='float' type='f'/>
</method>
<method selector='frames'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='initWithAnimationFrames:delayPerUnit:loops:'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfAnimationFrames'/>
<arg index='1' declared_type='float' type='f' name='delayPerUnit'/>
<arg index='2' declared_type='NSUInteger' type='I' name='loops'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrames:'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfSpriteFrameNames'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrames:delay:'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfSpriteFrameNames'/>
<arg index='1' declared_type='float' type='f' name='delay'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='loops'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='restoreOriginalFrame'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelayPerUnit:'>
<arg index='0' declared_type='float' type='f' name='delayPerUnit'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrames:'>
<arg index='0' declared_type='NSMutableArray*' type='@' name='frames'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoops:'>
<arg index='0' declared_type='NSUInteger' type='I' name='loops'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestoreOriginalFrame:'>
<arg index='0' declared_type='BOOL' type='B' name='restoreOriginalFrame'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='totalDelayUnits'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='CCAnimationCache'>
<method selector='addAnimation:name:'>
<arg index='0' declared_type='CCAnimation*' type='@' name='animation'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnimationsWithDictionary:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='dictionary'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnimationsWithFile:'>
<arg index='0' declared_type='NSString*' type='@' name='plist'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationByName:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='CCAnimation*' type='@'/>
</method>
<method selector='purgeSharedAnimationCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnimationByName:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedAnimationCache' class_method='true'>
<retval declared_type='CCAnimationCache*' type='@'/>
</method>
</class>
<class name='CCAnimationFrame'>
<method selector='delayUnits'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithSpriteFrame:delayUnits:userInfo:'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='spriteFrame'/>
<arg index='1' declared_type='float' type='f' name='delayUnits'/>
<arg index='2' declared_type='NSDictionary*' type='@' name='userInfo'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelayUnits:'>
<arg index='0' declared_type='float' type='f' name='delayUnits'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpriteFrame:'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='spriteFrame'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='userInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spriteFrame'>
<retval declared_type='CCSpriteFrame*' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='CCArray'>
<method selector='addObject:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjectsFromArray:'>
<arg index='0' declared_type='CCArray*' type='@' name='otherArray'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjectsFromNSArray:'>
<arg index='0' declared_type='NSArray*' type='@' name='otherArray'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='array' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='arrayWithArray:' class_method='true'>
<arg index='0' declared_type='CCArray*' type='@' name='otherArray'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='arrayWithCapacity:' class_method='true'>
<arg index='0' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='arrayWithNSArray:' class_method='true'>
<arg index='0' declared_type='NSArray*' type='@' name='otherArray'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='capacity'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='containsObject:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='exchangeObject:withObject:'>
<arg index='0' declared_type='id' type='@' name='object1'/>
<arg index='1' declared_type='id' type='@' name='object2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='index1'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fastRemoveObject:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fastRemoveObjectAtIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNSArray'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexOfObject:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='initWithArray:'>
<arg index='0' declared_type='CCArray*' type='@' name='otherArray'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNSArray:'>
<arg index='0' declared_type='NSArray*' type='@' name='otherArray'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertObject:atIndex:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertionSort:'>
<arg index='0' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertionSortUsingCFuncComparator:'>
<arg index='0' declared_type='int (*)(void *, void *)' type='^?' name='comparator' function_pointer='true'>
<arg declared_type='void*' type='^v' const='true'/>
<arg declared_type='void*' type='^v' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEqualToArray:'>
<arg index='0' declared_type='CCArray*' type='@' name='otherArray'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='makeObjectPerformSelectorWithArrayObjects:selector:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='SEL' type=':' name='aSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg index='0' declared_type='SEL' type=':' name='aSelector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg index='0' declared_type='SEL' type=':' name='aSelector'/>
<arg index='1' declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mergesortLUsingCFuncComparator:'>
<arg index='0' declared_type='int (*)(void *, void *)' type='^?' name='comparator' function_pointer='true'>
<arg declared_type='void*' type='^v' const='true'/>
<arg declared_type='void*' type='^v' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectAtIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='qsortUsingCFuncComparator:'>
<arg index='0' declared_type='int (*)(void *, void *)' type='^?' name='comparator' function_pointer='true'>
<arg declared_type='void*' type='^v' const='true'/>
<arg declared_type='void*' type='^v' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='randomObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='reduceMemoryFootprint'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLastObject'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsInArray:'>
<arg index='0' declared_type='CCArray*' type='@' name='otherArray'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg index='0' declared_type='NSUInteger' type='I' name='index'/>
<arg index='1' declared_type='id' type='@' name='anObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverseObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg index='0' declared_type='NSInteger (*)(id, id, void *)' type='^?' name='compare' function_pointer='true'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='NSInteger' type='i'/>
</arg>
<arg index='1' declared_type='void*' type='^v' name='context'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAtlasNode'>
<method selector='atlasWithTileFile:tileWidth:tileHeight:itemsToRender:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='tile'/>
<arg index='1' declared_type='NSUInteger' type='I' name='w'/>
<arg index='2' declared_type='NSUInteger' type='I' name='h'/>
<arg index='3' declared_type='NSUInteger' type='I' name='c'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithTileFile:tileWidth:tileHeight:itemsToRender:'>
<arg index='0' declared_type='NSString*' type='@' name='tile'/>
<arg index='1' declared_type='NSUInteger' type='I' name='w'/>
<arg index='2' declared_type='NSUInteger' type='I' name='h'/>
<arg index='3' declared_type='NSUInteger' type='I' name='c'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='quadsToDraw'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' name='blendFunc'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg index='0' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg index='0' declared_type='GLubyte' type='C' name='opacity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuadsToDraw:'>
<arg index='0' declared_type='NSUInteger' type='I' name='quadsToDraw'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' declared_type='CCTextureAtlas*' type='@' name='textureAtlas'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
<method selector='updateAtlasValues'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCBMFontConfiguration'>
<method selector='atlasName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='characterSet'>
<retval declared_type='NSCharacterSet*' type='@'/>
</method>
<method selector='configurationWithFNTFile:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='FNTfile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFNTfile:'>
<arg index='0' declared_type='NSString*' type='@' name='FNTfile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAtlasName:'>
<arg index='0' declared_type='NSString*' type='@' name='atlasName'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCBezierBy'>
<method selector='actionWithDuration:bezier:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='ccBezierConfig' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' name='c'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:bezier:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='ccBezierConfig' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' name='c'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCBezierTo'>
<method selector='startWithTarget:'>
<arg index='0' declared_type='CCNode*' type='@' name='aTarget'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCBlink'>
<method selector='actionWithDuration:blinks:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='NSUInteger' type='I' name='blinks'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:blinks:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='NSUInteger' type='I' name='blinks'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallBlock'>
<method selector='actionWithBlock:' class_method='true'>
<arg index='0' declared_type='void (^)()' type='@?' name='block' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:'>
<arg index='0' declared_type='void (^)()' type='@?' name='block' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallBlockN'>
<method selector='actionWithBlock:' class_method='true'>
<arg index='0' declared_type='void (^)(CCNode *)' type='@?' name='block' function_pointer='true'>
<arg declared_type='CCNode*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:'>
<arg index='0' declared_type='void (^)(CCNode *)' type='@?' name='block' function_pointer='true'>
<arg declared_type='CCNode*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallBlockO'>
<method selector='actionWithBlock:object:' class_method='true'>
<arg index='0' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' declared_type='id' type='@' name='object'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:object:'>
<arg index='0' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' declared_type='id' type='@' name='object'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='object'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setObject:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCallFunc'>
<method selector='actionWithTarget:selector:' class_method='true'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='SEL' type=':' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTarget:selector:'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='SEL' type=':' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setTargetCallback:'>
<arg index='0' declared_type='id' type='@' name='targetCallback'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetCallback'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallFuncN'>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCallFuncND'>
<method selector='actionWithTarget:selector:data:' class_method='true'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='SEL' type=':' name='s'/>
<arg index='2' declared_type='void*' type='^v' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='callbackMethod'>
<retval declared_type='CC_CALLBACK_ND' type='^?' function_pointer='true'>
<arg declared_type='id' type='@'/>
<arg declared_type='SEL' type=':'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='initWithTarget:selector:data:'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='SEL' type=':' name='s'/>
<arg index='2' declared_type='void*' type='^v' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setCallbackMethod:'>
<arg index='0' declared_type='CC_CALLBACK_ND' type='^?' name='callbackMethod' function_pointer='true'>
<arg declared_type='id' type='@'/>
<arg declared_type='SEL' type=':'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCallFuncO'>
<method selector='actionWithTarget:selector:object:' class_method='true'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='SEL' type=':' name='s'/>
<arg index='2' declared_type='id' type='@' name='object'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='SEL' type=':' name='s'/>
<arg index='2' declared_type='id' type='@' name='object'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='object'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setObject:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCamera'>
<method selector='centerX:centerY:centerZ:'>
<arg index='0' declared_type='float*' type='^f' name='x'/>
<arg index='1' declared_type='float*' type='^f' name='y'/>
<arg index='2' declared_type='float*' type='^f' name='z'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dirty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='eyeX:eyeY:eyeZ:'>
<arg index='0' declared_type='float*' type='^f' name='x'/>
<arg index='1' declared_type='float*' type='^f' name='y'/>
<arg index='2' declared_type='float*' type='^f' name='z'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getZEye' class_method='true'>
<retval declared_type='float' type='f'/>
</method>
<method selector='locate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='restore'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenterX:centerY:centerZ:'>
<arg index='0' declared_type='float' type='f' name='x'/>
<arg index='1' declared_type='float' type='f' name='y'/>
<arg index='2' declared_type='float' type='f' name='z'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirty:'>
<arg index='0' declared_type='BOOL' type='B' name='dirty'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEyeX:eyeY:eyeZ:'>
<arg index='0' declared_type='float' type='f' name='x'/>
<arg index='1' declared_type='float' type='f' name='y'/>
<arg index='2' declared_type='float' type='f' name='z'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpX:upY:upZ:'>
<arg index='0' declared_type='float' type='f' name='x'/>
<arg index='1' declared_type='float' type='f' name='y'/>
<arg index='2' declared_type='float' type='f' name='z'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='upX:upY:upZ:'>
<arg index='0' declared_type='float*' type='^f' name='x'/>
<arg index='1' declared_type='float*' type='^f' name='y'/>
<arg index='2' declared_type='float*' type='^f' name='z'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCardinalSplineBy'>
<method selector='startWithTarget:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCardinalSplineTo'>
<method selector='actionWithDuration:points:tension:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='CCPointArray*' type='@' name='points'/>
<arg index='2' declared_type='CGFloat' type='f' name='tension'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:points:tension:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='CCPointArray*' type='@' name='points'/>
<arg index='2' declared_type='CGFloat' type='f' name='tension'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='points'>
<retval declared_type='CCPointArray*' type='@'/>
</method>
<method selector='setPoints:'>
<arg index='0' declared_type='CCPointArray*' type='@' name='points'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCatmullRomBy'>
<method selector='actionWithDuration:points:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='dt'/>
<arg index='1' declared_type='CCPointArray*' type='@' name='points'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:points:'>
<arg index='0' declared_type='ccTime' type='f' name='dt'/>
<arg index='1' declared_type='CCPointArray*' type='@' name='points'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCatmullRomTo'>
<method selector='actionWithDuration:points:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='dt'/>
<arg index='1' declared_type='CCPointArray*' type='@' name='points'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:points:'>
<arg index='0' declared_type='ccTime' type='f' name='dt'/>
<arg index='1' declared_type='CCPointArray*' type='@' name='points'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCClippingNode'>
<method selector='alphaThreshold'>
<retval declared_type='GLfloat' type='f'/>
</method>
<method selector='clippingNode' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='clippingNodeWithStencil:' class_method='true'>
<arg index='0' declared_type='CCNode*' type='@' name='stencil'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithStencil:'>
<arg index='0' declared_type='CCNode*' type='@' name='stencil'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inverted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAlphaThreshold:'>
<arg index='0' declared_type='GLfloat' type='f' name='alphaThreshold'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInverted:'>
<arg index='0' declared_type='BOOL' type='B' name='inverted'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencil:'>
<arg index='0' declared_type='CCNode*' type='@' name='stencil'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stencil'>
<retval declared_type='CCNode*' type='@'/>
</method>
</class>
<class name='CCConfiguration'>
<method selector='OSVersion'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='checkForGLExtension:'>
<arg index='0' declared_type='NSString*' type='@' name='searchName'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxModelviewStackDepth'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='maxTextureSize'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='maxTextureUnits'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='sharedConfiguration' class_method='true'>
<retval declared_type='CCConfiguration*' type='@'/>
</method>
<method selector='supportsBGRA8888'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsDiscardFramebuffer'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsNPOT'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsPVRTC'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsShareableVAO'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CCDeccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg index='0' declared_type='CCAction*' type='@' name='action'/>
<arg index='1' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:duration:'>
<arg index='0' declared_type='CCAction*' type='@' name='action'/>
<arg index='1' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg index='0' declared_type='float' type='f' name='rate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCDelayTime'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='dt'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCDirector'>
<method selector='actionManager'>
<retval declared_type='CCActionManager*' type='@'/>
</method>
<method selector='animationInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='convertToGL:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='p'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='convertToUI:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='p'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='createStatsLabel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='displayStats'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawScene'>
<retval declared_type='void' type='v'/>
</method>
<method selector='end'>
<retval declared_type='void' type='v'/>
</method>
<method selector='getZEye'>
<retval declared_type='float' type='f'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nextDeltaTimeZero'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notificationNode'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='popScene'>
<retval declared_type='void' type='v'/>
</method>
<method selector='popToRootScene'>
<retval declared_type='void' type='v'/>
</method>
<method selector='projection'>
<retval declared_type='ccDirectorProjection' type='i'/>
</method>
<method selector='purgeCachedData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pushScene:'>
<arg index='0' declared_type='CCScene*' type='@' name='scene'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceScene:'>
<arg index='0' declared_type='CCScene*' type='@' name='scene'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reshapeProjection:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='newWindowSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runWithScene:'>
<arg index='0' declared_type='CCScene*' type='@' name='scene'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runningScene'>
<retval declared_type='CCScene*' type='@'/>
</method>
<method selector='runningThread'>
<retval declared_type='NSThread*' type='@'/>
</method>
<method selector='scheduler'>
<retval declared_type='CCScheduler*' type='@'/>
</method>
<method selector='secondsPerFrame'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='sendCleanupToScene'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActionManager:'>
<arg index='0' declared_type='CCActionManager*' type='@' name='actionManager'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlphaBlending:'>
<arg index='0' declared_type='BOOL' type='B' name='on'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationInterval:'>
<arg index='0' declared_type='NSTimeInterval' type='d' name='animationInterval'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg index='0' declared_type='id' type='@' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthTest:'>
<arg index='0' declared_type='BOOL' type='B' name='on'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayStats:'>
<arg index='0' declared_type='BOOL' type='B' name='displayStats'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGLDefaultValues'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNextDeltaTimeZero:'>
<arg index='0' declared_type='BOOL' type='B' name='nextDeltaTimeZero'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotificationNode:'>
<arg index='0' declared_type='id' type='@' name='notificationNode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjection:'>
<arg index='0' declared_type='ccDirectorProjection' type='i' name='projection'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScheduler:'>
<arg index='0' declared_type='CCScheduler*' type='@' name='scheduler'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg index='0' declared_type='CCGLView*' type='@' name='view'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedDirector' class_method='true'>
<retval declared_type='CCDirector*' type='@'/>
</method>
<method selector='startAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='totalFrames'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='view'>
<retval declared_type='CCGLView*' type='@'/>
</method>
<method selector='winSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='winSizeInPixels'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
</class>
<class name='CCDrawNode'>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='clear'>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawDot:radius:color:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<arg index='1' declared_type='CGFloat' type='f' name='radius'/>
<arg index='2' declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='color'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPolyWithVerts:count:fillColor:borderWidth:borderColor:'>
<arg index='0' declared_type='CGPoint*' type='^{CGPoint=ff}' name='verts'/>
<arg index='1' declared_type='NSUInteger' type='I' name='count'/>
<arg index='2' declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='fill'/>
<arg index='3' declared_type='CGFloat' type='f' name='width'/>
<arg index='4' declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='line'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawSegmentFrom:to:radius:color:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='a'/>
<arg index='1' declared_type='CGPoint' type='{CGPoint=ff}' name='b'/>
<arg index='2' declared_type='CGFloat' type='f' name='radius'/>
<arg index='3' declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='color'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' name='blendFunc'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseBackIn'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseBackInOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseBackOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseBounce'>
<method selector='bounceTime:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='ccTime' type='f'/>
</method>
</class>
<class name='CCEaseBounceIn'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseBounceInOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseBounceOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseElastic'>
<method selector='actionWithAction:period:' class_method='true'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<arg index='1' declared_type='float' type='f' name='period'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:period:'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<arg index='1' declared_type='float' type='f' name='period'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='period'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPeriod:'>
<arg index='0' declared_type='float' type='f' name='period'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseElasticIn'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseElasticInOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseElasticOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseExponentialIn'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseExponentialInOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseExponentialOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseIn'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseInOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseRateAction'>
<method selector='actionWithAction:rate:' class_method='true'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<arg index='1' declared_type='float' type='f' name='rate'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:rate:'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<arg index='1' declared_type='float' type='f' name='rate'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg index='0' declared_type='float' type='f' name='rate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseSineIn'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseSineInOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseSineOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCFadeIn'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='dt'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCFadeOut'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='dt'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCFadeTo'>
<method selector='actionWithDuration:opacity:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='GLubyte' type='C' name='opactiy'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:opacity:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='GLubyte' type='C' name='opacity'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFileUtils'>
<method selector='buildSearchChain'>
<retval declared_type='void' type='v'/>
</method>
<method selector='buildSearchChainWithFallbacks:'>
<arg index='0' declared_type='BOOL' type='B' name='useFallbacks'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bundle'>
<retval declared_type='NSBundle*' type='@'/>
</method>
<method selector='directoriesDict'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='fileManager'>
<retval declared_type='NSFileManager*' type='@'/>
</method>
<method selector='fullPathFromRelativePath:'>
<arg index='0' declared_type='NSString*' type='@' name='relPath'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fullPathFromRelativePath:resolutionType:'>
<arg index='0' declared_type='NSString*' type='@' name='relPath'/>
<arg index='1' declared_type='ccResolutionType*' type='^i' name='resolutionType'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fullPathIgnoringResolutionsFromRelativePath:'>
<arg index='0' declared_type='NSString*' type='@' name='relPath'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isEnabledFallbackChain'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='purgeCachedEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchChain'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setBundle:'>
<arg index='0' declared_type='NSBundle*' type='@' name='bundle'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirectoriesDict:'>
<arg index='0' declared_type='NSMutableDictionary*' type='@' name='directoriesDict'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableFallbackChain:'>
<arg index='0' declared_type='BOOL' type='B' name='enableFallbackChain'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableFallbackSuffixes:'>
<arg index='0' declared_type='BOOL' type='B' name='enableFallbackSuffixes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileManager:'>
<arg index='0' declared_type='NSFileManager*' type='@' name='fileManager'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchChain:'>
<arg index='0' declared_type='NSArray*' type='@' name='searchChain'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuffixesDict:'>
<arg index='0' declared_type='NSMutableDictionary*' type='@' name='suffixesDict'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedFileUtils' class_method='true'>
<retval declared_type='CCFileUtils*' type='@'/>
</method>
<method selector='suffixesDict'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
</class>
<class name='CCFiniteTimeAction'>
<method selector='duration'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='reverse'>
<retval declared_type='CCFiniteTimeAction*' type='@'/>
</method>
<method selector='setDuration:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCFlipX'>
<method selector='actionWithFlipX:' class_method='true'>
<arg index='0' declared_type='BOOL' type='B' name='x'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFlipX:'>
<arg index='0' declared_type='BOOL' type='B' name='x'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFlipX3D'>
<method selector='actionWithDuration:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:'>
<arg index='0' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFlipY'>
<method selector='actionWithFlipY:' class_method='true'>
<arg index='0' declared_type='BOOL' type='B' name='y'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFlipY:'>
<arg index='0' declared_type='BOOL' type='B' name='y'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFlipY3D'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='time'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCFollow'>
<method selector='actionWithTarget:' class_method='true'>
<arg index='0' declared_type='CCNode*' type='@' name='followedNode'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithTarget:worldBoundary:' class_method='true'>
<arg index='0' declared_type='CCNode*' type='@' name='followedNode'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='boundarySet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithTarget:'>
<arg index='0' declared_type='CCNode*' type='@' name='followedNode'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:worldBoundary:'>
<arg index='0' declared_type='CCNode*' type='@' name='followedNode'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBoundarySet:'>
<arg index='0' declared_type='BOOL' type='B' name='boundarySet'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCGLProgram'>
<method selector='addAttribute:index:'>
<arg index='0' declared_type='NSString*' type='@' name='attributeName'/>
<arg index='1' declared_type='GLuint' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fragmentShaderLog'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithVertexShaderByteArray:fragmentShaderByteArray:'>
<arg index='0' declared_type='GLchar*' type='*' name='vShaderByteArray' const='true'/>
<arg index='1' declared_type='GLchar*' type='*' name='fShaderByteArray' const='true'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithVertexShaderFilename:fragmentShaderFilename:'>
<arg index='0' declared_type='NSString*' type='@' name='vShaderFilename'/>
<arg index='1' declared_type='NSString*' type='@' name='fShaderFilename'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='link'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='program'>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='programLog'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setUniformForModelViewProjectionMatrix'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:with2fv:count:'>
<arg index='0' declared_type='GLint' type='i' name='location'/>
<arg index='1' declared_type='GLfloat*' type='^f' name='floats'/>
<arg index='2' declared_type='NSUInteger' type='I' name='numberOfArrays'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:with3fv:count:'>
<arg index='0' declared_type='GLint' type='i' name='location'/>
<arg index='1' declared_type='GLfloat*' type='^f' name='floats'/>
<arg index='2' declared_type='NSUInteger' type='I' name='numberOfArrays'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:with4fv:count:'>
<arg index='0' declared_type='GLint' type='i' name='location'/>
<arg index='1' declared_type='GLvoid*' type='^v' name='floats'/>
<arg index='2' declared_type='NSUInteger' type='I' name='numberOfArrays'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:'>
<arg index='0' declared_type='GLint' type='i' name='location'/>
<arg index='1' declared_type='GLfloat' type='f' name='f1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:f2:'>
<arg index='0' declared_type='GLint' type='i' name='location'/>
<arg index='1' declared_type='GLfloat' type='f' name='f1'/>
<arg index='2' declared_type='GLfloat' type='f' name='f2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:'>
<arg index='0' declared_type='GLint' type='i' name='location'/>
<arg index='1' declared_type='GLfloat' type='f' name='f1'/>
<arg index='2' declared_type='GLfloat' type='f' name='f2'/>
<arg index='3' declared_type='GLfloat' type='f' name='f3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:f4:'>
<arg index='0' declared_type='GLint' type='i' name='location'/>
<arg index='1' declared_type='GLfloat' type='f' name='f1'/>
<arg index='2' declared_type='GLfloat' type='f' name='f2'/>
<arg index='3' declared_type='GLfloat' type='f' name='f3'/>
<arg index='4' declared_type='GLfloat' type='f' name='f4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withI1:'>
<arg index='0' declared_type='GLint' type='i' name='location'/>
<arg index='1' declared_type='GLint' type='i' name='i1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withMatrix4fv:count:'>
<arg index='0' declared_type='GLint' type='i' name='location'/>
<arg index='1' declared_type='GLvoid*' type='^v' name='matrix_array'/>
<arg index='2' declared_type='NSUInteger' type='I' name='numberOfMatrix'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformsForBuiltins'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateUniforms'>
<retval declared_type='void' type='v'/>
</method>
<method selector='use'>
<retval declared_type='void' type='v'/>
</method>
<method selector='vertexShaderLog'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CCGrabber'>
<method selector='afterRender:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beforeRender:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='grab:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCGrid3D'>
<method selector='originalVertex:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
<method selector='setVertex:vertex:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<arg index='1' declared_type='ccVertex3F' type='{_ccVertex3F=fff}' name='vertex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='vertex:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
</class>
<class name='CCGrid3DAction'>
<method selector='originalVertex:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
<method selector='setVertex:vertex:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<arg index='1' declared_type='ccVertex3F' type='{_ccVertex3F=fff}' name='vertex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='vertex:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
</class>
<class name='CCGridAction'>
<method selector='actionWithSize:duration:' class_method='true'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='size'/>
<arg index='1' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='grid'>
<retval declared_type='CCGridBase*' type='@'/>
</method>
<method selector='gridSize'>
<retval declared_type='ccGridSize' type='{_ccGridSize=ii}'/>
</method>
<method selector='initWithSize:duration:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='1' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setGridSize:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCGridBase'>
<method selector='active'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='afterDraw:'>
<arg index='0' declared_type='CCNode*' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beforeDraw'>
<retval declared_type='void' type='v'/>
</method>
<method selector='blit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='calculateVertexPoints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='grabber'>
<retval declared_type='CCGrabber*' type='@'/>
</method>
<method selector='gridSize'>
<retval declared_type='ccGridSize' type='{_ccGridSize=ii}'/>
</method>
<method selector='gridWithSize:' class_method='true'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='gridWithSize:texture:flippedTexture:' class_method='true'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='1' declared_type='CCTexture2D*' type='@' name='texture'/>
<arg index='2' declared_type='BOOL' type='B' name='flipped'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSize:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSize:texture:flippedTexture:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='1' declared_type='CCTexture2D*' type='@' name='texture'/>
<arg index='2' declared_type='BOOL' type='B' name='flipped'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isTextureFlipped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reuse'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reuseGrid'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setActive:'>
<arg index='0' declared_type='BOOL' type='B' name='active'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGrabber:'>
<arg index='0' declared_type='CCGrabber*' type='@' name='grabber'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsTextureFlipped:'>
<arg index='0' declared_type='BOOL' type='B' name='isTextureFlipped'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReuseGrid:'>
<arg index='0' declared_type='int' type='i' name='reuseGrid'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShaderProgram:'>
<arg index='0' declared_type='CCGLProgram*' type='@' name='shaderProgram'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStep:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='step'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderProgram'>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='step'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
</class>
<class name='CCHide'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='time'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCJumpBy'>
<method selector='actionWithDuration:position:height:jumps:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='CGPoint' type='{CGPoint=ff}' name='position'/>
<arg index='2' declared_type='ccTime' type='f' name='height'/>
<arg index='3' declared_type='NSUInteger' type='I' name='jumps'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:position:height:jumps:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='CGPoint' type='{CGPoint=ff}' name='position'/>
<arg index='2' declared_type='ccTime' type='f' name='height'/>
<arg index='3' declared_type='NSUInteger' type='I' name='jumps'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCJumpTiles3D'>
<method selector='actionWithJumps:amplitude:grid:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='j'/>
<arg index='1' declared_type='float' type='f' name='amp'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithJumps:amplitude:grid:duration:'>
<arg index='0' declared_type='int' type='i' name='j'/>
<arg index='1' declared_type='float' type='f' name='amp'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' declared_type='float' type='f' name='amplitude'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' declared_type='float' type='f' name='amplitudeRate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCJumpTo'>
<method selector='startWithTarget:'>
<arg index='0' declared_type='CCNode*' type='@' name='aTarget'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLabelAtlas'>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='charmapfile'/>
<arg index='2' declared_type='NSUInteger' type='I' name='w'/>
<arg index='3' declared_type='NSUInteger' type='I' name='h'/>
<arg index='4' declared_type='NSUInteger' type='I' name='firstElement'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fntFile:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='fontFile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='charmapfile'/>
<arg index='2' declared_type='NSUInteger' type='I' name='w'/>
<arg index='3' declared_type='NSUInteger' type='I' name='h'/>
<arg index='4' declared_type='NSUInteger' type='I' name='firstElement'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='fontFile'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCLabelBMFont'>
<method selector='alignment'>
<retval declared_type='CCTextAlignment' type='i'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='createFontChars'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fntFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithString:fntFile:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='fntFile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fntFile:width:alignment:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='fntFile'/>
<arg index='2' declared_type='float' type='f' name='width'/>
<arg index='3' declared_type='CCTextAlignment' type='i' name='alignment'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fntFile:width:alignment:imageOffset:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='fntFile'/>
<arg index='2' declared_type='float' type='f' name='width'/>
<arg index='3' declared_type='CCTextAlignment' type='i' name='alignment'/>
<arg index='4' declared_type='CGPoint' type='{CGPoint=ff}' name='offset'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='fntFile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:width:alignment:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='fntFile'/>
<arg index='2' declared_type='float' type='f' name='width'/>
<arg index='3' declared_type='CCTextAlignment' type='i' name='alignment'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:width:alignment:imageOffset:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='fntFile'/>
<arg index='2' declared_type='float' type='f' name='width'/>
<arg index='3' declared_type='CCTextAlignment' type='i' name='alignment'/>
<arg index='4' declared_type='CGPoint' type='{CGPoint=ff}' name='offset'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='purgeCachedData' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignment:'>
<arg index='0' declared_type='CCTextAlignment' type='i' name='alignment'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg index='0' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFntFile:'>
<arg index='0' declared_type='NSString*' type='@' name='fntFile'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg index='0' declared_type='GLubyte' type='C' name='opacity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg index='0' declared_type='float' type='f' name='width'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLabelTTF'>
<method selector='dimensions'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fontSize'>
<retval declared_type='float' type='f'/>
</method>
<method selector='horizontalAlignment'>
<retval declared_type='CCTextAlignment' type='i'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<arg index='3' declared_type='CGSize' type='{CGSize=ff}' name='dimensions'/>
<arg index='4' declared_type='CCTextAlignment' type='i' name='alignment'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:lineBreakMode:'>
<arg index='0' declared_type='NSString*' type='@' name='str'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<arg index='3' declared_type='CGSize' type='{CGSize=ff}' name='dimensions'/>
<arg index='4' declared_type='CCTextAlignment' type='i' name='alignment'/>
<arg index='5' declared_type='CCLineBreakMode' type='i' name='lineBreakMode'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<arg index='3' declared_type='CGSize' type='{CGSize=ff}' name='dimensions'/>
<arg index='4' declared_type='CCTextAlignment' type='i' name='alignment'/>
<arg index='5' declared_type='CCVerticalTextAlignment' type='i' name='vertAlignment'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:lineBreakMode:'>
<arg index='0' declared_type='NSString*' type='@' name='str'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<arg index='3' declared_type='CGSize' type='{CGSize=ff}' name='dimensions'/>
<arg index='4' declared_type='CCTextAlignment' type='i' name='alignment'/>
<arg index='5' declared_type='CCVerticalTextAlignment' type='i' name='vAlignment'/>
<arg index='6' declared_type='CCLineBreakMode' type='i' name='lineBreakMode'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fontName:fontSize:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fontName:fontSize:dimensions:hAlignment:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<arg index='3' declared_type='CGSize' type='{CGSize=ff}' name='dimensions'/>
<arg index='4' declared_type='CCTextAlignment' type='i' name='alignment'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fontName:fontSize:dimensions:hAlignment:lineBreakMode:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<arg index='3' declared_type='CGSize' type='{CGSize=ff}' name='dimensions'/>
<arg index='4' declared_type='CCTextAlignment' type='i' name='alignment'/>
<arg index='5' declared_type='CCLineBreakMode' type='i' name='lineBreakMode'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<arg index='3' declared_type='CGSize' type='{CGSize=ff}' name='dimensions'/>
<arg index='4' declared_type='CCTextAlignment' type='i' name='alignment'/>
<arg index='5' declared_type='CCVerticalTextAlignment' type='i' name='vertAlignment'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:lineBreakMode:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<arg index='3' declared_type='CGSize' type='{CGSize=ff}' name='dimensions'/>
<arg index='4' declared_type='CCTextAlignment' type='i' name='alignment'/>
<arg index='5' declared_type='CCVerticalTextAlignment' type='i' name='vertAlignment'/>
<arg index='6' declared_type='CCLineBreakMode' type='i' name='lineBreakMode'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDimensions:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='dimensions'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontName:'>
<arg index='0' declared_type='NSString*' type='@' name='fontName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontSize:'>
<arg index='0' declared_type='float' type='f' name='fontSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalAlignment:'>
<arg index='0' declared_type='CCTextAlignment' type='i' name='horizontalAlignment'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg index='0' declared_type='NSString*' type='@' name='str'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalAlignment:'>
<arg index='0' declared_type='CCVerticalTextAlignment' type='i' name='verticalAlignment'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='verticalAlignment'>
<retval declared_type='CCVerticalTextAlignment' type='i'/>
</method>
</class>
<class name='CCLayer'>
<method selector='gesturePriority'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='isGestureEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isKeyboardEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMouseEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTouchEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyboardPriority'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='mousePriority'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='setGestureEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='gestureEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGesturePriority:'>
<arg index='0' declared_type='NSInteger' type='i' name='gesturePriority'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyboardEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='keyboardEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyboardPriority:'>
<arg index='0' declared_type='NSInteger' type='i' name='keyboardPriority'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMouseEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='mouseEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMousePriority:'>
<arg index='0' declared_type='NSInteger' type='i' name='mousePriority'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTouchEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='touchEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTouchPriority:'>
<arg index='0' declared_type='NSInteger' type='i' name='touchPriority'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchPriority'>
<retval declared_type='NSInteger' type='i'/>
</method>
</class>
<class name='CCLayerColor'>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='changeHeight:'>
<arg index='0' declared_type='GLfloat' type='f' name='h'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeWidth:'>
<arg index='0' declared_type='GLfloat' type='f' name='w'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeWidth:height:'>
<arg index='0' declared_type='GLfloat' type='f' name='w'/>
<arg index='1' declared_type='GLfloat' type='f' name='h'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithColor:'>
<arg index='0' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='color'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithColor:width:height:'>
<arg index='0' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='color'/>
<arg index='1' declared_type='GLfloat' type='f' name='w'/>
<arg index='2' declared_type='GLfloat' type='f' name='h'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:' class_method='true'>
<arg index='0' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='color'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:width:height:' class_method='true'>
<arg index='0' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='color'/>
<arg index='1' declared_type='GLfloat' type='f' name='w'/>
<arg index='2' declared_type='GLfloat' type='f' name='h'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' name='blendFunc'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLayerGradient'>
<method selector='compressedInterpolation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='endColor'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='endOpacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='initWithColor:fadingTo:'>
<arg index='0' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='start'/>
<arg index='1' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='end'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithColor:fadingTo:alongVector:'>
<arg index='0' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='start'/>
<arg index='1' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='end'/>
<arg index='2' declared_type='CGPoint' type='{CGPoint=ff}' name='v'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:fadingTo:' class_method='true'>
<arg index='0' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='start'/>
<arg index='1' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='end'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:fadingTo:alongVector:' class_method='true'>
<arg index='0' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='start'/>
<arg index='1' declared_type='ccColor4B' type='{_ccColor4B=CCCC}' name='end'/>
<arg index='2' declared_type='CGPoint' type='{CGPoint=ff}' name='v'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setCompressedInterpolation:'>
<arg index='0' declared_type='BOOL' type='B' name='compressedInterpolation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndColor:'>
<arg index='0' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='endColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndOpacity:'>
<arg index='0' declared_type='GLubyte' type='C' name='endOpacity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartColor:'>
<arg index='0' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='startColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartOpacity:'>
<arg index='0' declared_type='GLubyte' type='C' name='startOpacity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVector:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='vector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startColor'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='startOpacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='vector'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
</class>
<class name='CCLayerMultiplex'>
<method selector='initWithLayers:vaList:'>
<arg index='0' declared_type='CCLayer*' type='@' name='layer'/>
<arg index='1' declared_type='va_list' type='*' name='params'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithLayers:' sentinel='0' variadic='true' class_method='true'>
<arg index='0' declared_type='CCLayer*' type='@' name='layer'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='switchTo:'>
<arg index='0' declared_type='unsigned int' type='I' name='n'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='switchToAndReleaseMe:'>
<arg index='0' declared_type='unsigned int' type='I' name='n'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLens3D'>
<method selector='actionWithPosition:radius:grid:duration:' class_method='true'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<arg index='1' declared_type='float' type='f' name='r'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPosition:radius:grid:duration:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<arg index='1' declared_type='float' type='f' name='r'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lensEffect'>
<retval declared_type='float' type='f'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='setLensEffect:'>
<arg index='0' declared_type='float' type='f' name='lensEffect'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='position'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLiquid'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='wav'/>
<arg index='1' declared_type='float' type='f' name='amp'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg index='0' declared_type='int' type='i' name='wav'/>
<arg index='1' declared_type='float' type='f' name='amp'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' declared_type='float' type='f' name='amplitude'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' declared_type='float' type='f' name='amplitudeRate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenu'>
<method selector='alignItemsHorizontally'>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsHorizontallyWithPadding:'>
<arg index='0' declared_type='float' type='f' name='padding'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInColumns:' sentinel='0' variadic='true'>
<arg index='0' declared_type='NSNumber*' type='@' name='columns'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInColumns:vaList:'>
<arg index='0' declared_type='NSNumber*' type='@' name='columns'/>
<arg index='1' declared_type='va_list' type='*' name='args'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInColumnsWithArray:'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfNumbers'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInRows:' sentinel='0' variadic='true'>
<arg index='0' declared_type='NSNumber*' type='@' name='rows'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInRows:vaList:'>
<arg index='0' declared_type='NSNumber*' type='@' name='rows'/>
<arg index='1' declared_type='va_list' type='*' name='args'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInRowsWithArray:'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfNumbers'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsVertically'>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsVerticallyWithPadding:'>
<arg index='0' declared_type='float' type='f' name='padding'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='enabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithArray:'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfItems'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='menuWithArray:' class_method='true'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfItems'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='menuWithItems:' sentinel='0' variadic='true' class_method='true'>
<arg index='0' declared_type='CCMenuItem*' type='@' name='item'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='menuWithItems:vaList:' class_method='true'>
<arg index='0' declared_type='CCMenuItem*' type='@' name='firstItem'/>
<arg index='1' declared_type='va_list' type='*' name='args'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='setEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='enabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHandlerPriority:'>
<arg index='0' declared_type='NSInteger' type='i' name='newPriority'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItem'>
<method selector='activate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cleanup'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:'>
<arg index='0' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<arg index='1' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemWithBlock:' class_method='true'>
<arg index='0' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithTarget:selector:' class_method='true'>
<arg index='0' declared_type='id' type='@' name='target'/>
<arg index='1' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='selected'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlock:'>
<arg index='0' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='enabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:selector:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<arg index='1' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unselected'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemAtlasFont'>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='charMapFile'/>
<arg index='2' declared_type='int' type='i' name='itemWidth'/>
<arg index='3' declared_type='int' type='i' name='itemHeight'/>
<arg index='4' declared_type='char' type='c' name='startCharMap'/>
<arg index='5' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='charMapFile'/>
<arg index='2' declared_type='int' type='i' name='itemWidth'/>
<arg index='3' declared_type='int' type='i' name='itemHeight'/>
<arg index='4' declared_type='char' type='c' name='startCharMap'/>
<arg index='5' declared_type='id' type='@' name='target'/>
<arg index='6' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='charMapFile'/>
<arg index='2' declared_type='int' type='i' name='itemWidth'/>
<arg index='3' declared_type='int' type='i' name='itemHeight'/>
<arg index='4' declared_type='char' type='c' name='startCharMap'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='charMapFile'/>
<arg index='2' declared_type='int' type='i' name='itemWidth'/>
<arg index='3' declared_type='int' type='i' name='itemHeight'/>
<arg index='4' declared_type='char' type='c' name='startCharMap'/>
<arg index='5' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='charMapFile'/>
<arg index='2' declared_type='int' type='i' name='itemWidth'/>
<arg index='3' declared_type='int' type='i' name='itemHeight'/>
<arg index='4' declared_type='char' type='c' name='startCharMap'/>
<arg index='5' declared_type='id' type='@' name='target'/>
<arg index='6' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCMenuItemFont'>
<method selector='fontName' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fontSize' class_method='true'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='fontSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='initWithString:block:'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:target:selector:'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='id' type='@' name='r'/>
<arg index='2' declared_type='SEL' type=':' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:block:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:target:selector:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='id' type='@' name='r'/>
<arg index='2' declared_type='SEL' type=':' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFontName:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='n'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontName:'>
<arg index='0' declared_type='NSString*' type='@' name='n'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontSize:' class_method='true'>
<arg index='0' declared_type='NSUInteger' type='I' name='s'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontSize:'>
<arg index='0' declared_type='NSUInteger' type='I' name='s'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemImage'>
<method selector='initWithNormalImage:selectedImage:disabledImage:block:'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='value2'/>
<arg index='2' declared_type='NSString*' type='@' name='value3'/>
<arg index='3' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNormalImage:selectedImage:disabledImage:target:selector:'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='value2'/>
<arg index='2' declared_type='NSString*' type='@' name='value3'/>
<arg index='3' declared_type='id' type='@' name='r'/>
<arg index='4' declared_type='SEL' type=':' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='value2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:block:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='value2'/>
<arg index='2' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:disabledImage:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='value2'/>
<arg index='2' declared_type='NSString*' type='@' name='value3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:disabledImage:block:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='value2'/>
<arg index='2' declared_type='NSString*' type='@' name='value3'/>
<arg index='3' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:disabledImage:target:selector:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='value2'/>
<arg index='2' declared_type='NSString*' type='@' name='value3'/>
<arg index='3' declared_type='id' type='@' name='r'/>
<arg index='4' declared_type='SEL' type=':' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:target:selector:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='value'/>
<arg index='1' declared_type='NSString*' type='@' name='value2'/>
<arg index='2' declared_type='id' type='@' name='r'/>
<arg index='3' declared_type='SEL' type=':' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDisabledSpriteFrame:'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='frame'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNormalSpriteFrame:'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='frame'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedSpriteFrame:'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='frame'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemLabel'>
<method selector='disabledColor'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithLabel:block:'>
<arg index='0' declared_type='CCNode*' type='@' name='label'/>
<arg index='1' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLabel:target:selector:'>
<arg index='0' declared_type='CCNode*' type='@' name='label'/>
<arg index='1' declared_type='id' type='@' name='target'/>
<arg index='2' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithLabel:' class_method='true'>
<arg index='0' declared_type='CCNode*' type='@' name='label'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithLabel:block:' class_method='true'>
<arg index='0' declared_type='CCNode*' type='@' name='label'/>
<arg index='1' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithLabel:target:selector:' class_method='true'>
<arg index='0' declared_type='CCNode*' type='@' name='label'/>
<arg index='1' declared_type='id' type='@' name='target'/>
<arg index='2' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='label'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='setDisabledColor:'>
<arg index='0' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='disabledColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='enabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg index='0' declared_type='CCNode*' type='@' name='label'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg index='0' declared_type='NSString*' type='@' name='label'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemSprite'>
<method selector='disabledImage'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:block:'>
<arg index='0' declared_type='CCNode*' type='@' name='normalSprite'/>
<arg index='1' declared_type='CCNode*' type='@' name='selectedSprite'/>
<arg index='2' declared_type='CCNode*' type='@' name='disabledSprite'/>
<arg index='3' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg index='0' declared_type='CCNode*' type='@' name='normalSprite'/>
<arg index='1' declared_type='CCNode*' type='@' name='selectedSprite'/>
<arg index='2' declared_type='CCNode*' type='@' name='disabledSprite'/>
<arg index='3' declared_type='id' type='@' name='target'/>
<arg index='4' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:' class_method='true'>
<arg index='0' declared_type='CCNode*' type='@' name='normalSprite'/>
<arg index='1' declared_type='CCNode*' type='@' name='selectedSprite'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:block:' class_method='true'>
<arg index='0' declared_type='CCNode*' type='@' name='normalSprite'/>
<arg index='1' declared_type='CCNode*' type='@' name='selectedSprite'/>
<arg index='2' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:disabledSprite:block:' class_method='true'>
<arg index='0' declared_type='CCNode*' type='@' name='normalSprite'/>
<arg index='1' declared_type='CCNode*' type='@' name='selectedSprite'/>
<arg index='2' declared_type='CCNode*' type='@' name='disabledSprite'/>
<arg index='3' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:disabledSprite:target:selector:' class_method='true'>
<arg index='0' declared_type='CCNode*' type='@' name='normalSprite'/>
<arg index='1' declared_type='CCNode*' type='@' name='selectedSprite'/>
<arg index='2' declared_type='CCNode*' type='@' name='disabledSprite'/>
<arg index='3' declared_type='id' type='@' name='target'/>
<arg index='4' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:target:selector:' class_method='true'>
<arg index='0' declared_type='CCNode*' type='@' name='normalSprite'/>
<arg index='1' declared_type='CCNode*' type='@' name='selectedSprite'/>
<arg index='2' declared_type='id' type='@' name='target'/>
<arg index='3' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='normalImage'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='selectedImage'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='setDisabledImage:'>
<arg index='0' declared_type='CCNode*' type='@' name='disabledImage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNormalImage:'>
<arg index='0' declared_type='CCNode*' type='@' name='normalImage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedImage:'>
<arg index='0' declared_type='CCNode*' type='@' name='selectedImage'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemToggle'>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithItems:block:'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfItems'/>
<arg index='1' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithItems:' class_method='true'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfItems'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithItems:block:' class_method='true'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfItems'/>
<arg index='1' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithTarget:selector:items:' sentinel='0' variadic='true' class_method='true'>
<arg index='0' declared_type='id' type='@' name='target'/>
<arg index='1' declared_type='SEL' type=':' name='selector'/>
<arg index='2' declared_type='CCMenuItem*' type='@' name='item'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithTarget:selector:items:vaList:' class_method='true'>
<arg index='0' declared_type='id' type='@' name='target'/>
<arg index='1' declared_type='SEL' type=':' name='selector'/>
<arg index='2' declared_type='CCMenuItem*' type='@' name='item'/>
<arg index='3' declared_type='va_list' type='*' name='args'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='selectedIndex'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='selectedItem'>
<retval declared_type='CCMenuItem*' type='@'/>
</method>
<method selector='setSelectedIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='selectedIndex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubItems:'>
<arg index='0' declared_type='NSMutableArray*' type='@' name='subItems'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subItems'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
</class>
<class name='CCMotionStreak'>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='initWithFade:minSeg:width:color:texture:'>
<arg index='0' declared_type='float' type='f' name='fade'/>
<arg index='1' declared_type='float' type='f' name='minSeg'/>
<arg index='2' declared_type='float' type='f' name='stroke'/>
<arg index='3' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<arg index='4' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFade:minSeg:width:color:textureFilename:'>
<arg index='0' declared_type='float' type='f' name='fade'/>
<arg index='1' declared_type='float' type='f' name='minSeg'/>
<arg index='2' declared_type='float' type='f' name='stroke'/>
<arg index='3' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<arg index='4' declared_type='NSString*' type='@' name='path'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFastMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' name='blendFunc'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFastMode:'>
<arg index='0' declared_type='BOOL' type='B' name='fastMode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='streakWithFade:minSeg:width:color:texture:' class_method='true'>
<arg index='0' declared_type='float' type='f' name='fade'/>
<arg index='1' declared_type='float' type='f' name='minSeg'/>
<arg index='2' declared_type='float' type='f' name='stroke'/>
<arg index='3' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<arg index='4' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='streakWithFade:minSeg:width:color:textureFilename:' class_method='true'>
<arg index='0' declared_type='float' type='f' name='fade'/>
<arg index='1' declared_type='float' type='f' name='minSeg'/>
<arg index='2' declared_type='float' type='f' name='stroke'/>
<arg index='3' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<arg index='4' declared_type='NSString*' type='@' name='path'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='tintWithColor:'>
<arg index='0' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='colors'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMoveBy'>
<method selector='actionWithDuration:position:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='CGPoint' type='{CGPoint=ff}' name='deltaPosition'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:position:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='CGPoint' type='{CGPoint=ff}' name='deltaPosition'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCMoveTo'>
<method selector='actionWithDuration:position:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='CGPoint' type='{CGPoint=ff}' name='position'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:position:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='CGPoint' type='{CGPoint=ff}' name='position'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCNode'>
<method selector='actionManager'>
<retval declared_type='CCActionManager*' type='@'/>
</method>
<method selector='addChild:'>
<arg index='0' declared_type='CCNode*' type='@' name='node'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addChild:z:'>
<arg index='0' declared_type='CCNode*' type='@' name='node'/>
<arg index='1' declared_type='NSInteger' type='i' name='z'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addChild:z:tag:'>
<arg index='0' declared_type='CCNode*' type='@' name='node'/>
<arg index='1' declared_type='NSInteger' type='i' name='z'/>
<arg index='2' declared_type='NSInteger' type='i' name='tag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='anchorPointInPoints'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='boundingBox'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='camera'>
<retval declared_type='CCCamera*' type='@'/>
</method>
<method selector='children'>
<retval declared_type='CCArray*' type='@'/>
</method>
<method selector='cleanup'>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='convertToNodeSpace:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='worldPoint'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='convertToNodeSpaceAR:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='worldPoint'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='convertToWorldSpace:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='nodePoint'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='convertToWorldSpaceAR:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='nodePoint'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='draw'>
<retval declared_type='void' type='v'/>
</method>
<method selector='getActionByTag:'>
<arg index='0' declared_type='NSInteger' type='i' name='tag'/>
<retval declared_type='CCAction*' type='@'/>
</method>
<method selector='getChildByTag:'>
<arg index='0' declared_type='NSInteger' type='i' name='tag'/>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='glServerState'>
<retval declared_type='ccGLServerState' type='i'/>
</method>
<method selector='grid'>
<retval declared_type='CCGridBase*' type='@'/>
</method>
<method selector='ignoreAnchorPointForPosition'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='node' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='nodeToParentTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='nodeToWorldTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='numberOfRunningActions'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='onEnter'>
<retval declared_type='void' type='v'/>
</method>
<method selector='onEnterTransitionDidFinish'>
<retval declared_type='void' type='v'/>
</method>
<method selector='onExit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='onExitTransitionDidStart'>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderOfArrival'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='parent'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='parentToNodeTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='pauseSchedulerAndActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='removeAllChildren'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllChildrenWithCleanup:'>
<arg index='0' declared_type='BOOL' type='B' name='cleanup'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChild:'>
<arg index='0' declared_type='CCNode*' type='@' name='child'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChild:cleanup:'>
<arg index='0' declared_type='CCNode*' type='@' name='node'/>
<arg index='1' declared_type='BOOL' type='B' name='cleanup'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChildByTag:'>
<arg index='0' declared_type='NSInteger' type='i' name='tag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChildByTag:cleanup:'>
<arg index='0' declared_type='NSInteger' type='i' name='tag'/>
<arg index='1' declared_type='BOOL' type='B' name='cleanup'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromParent'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromParentAndCleanup:'>
<arg index='0' declared_type='BOOL' type='B' name='cleanup'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reorderChild:z:'>
<arg index='0' declared_type='CCNode*' type='@' name='child'/>
<arg index='1' declared_type='NSInteger' type='i' name='zOrder'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeSchedulerAndActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotation'>
<retval declared_type='float' type='f'/>
</method>
<method selector='rotationX'>
<retval declared_type='float' type='f'/>
</method>
<method selector='rotationY'>
<retval declared_type='float' type='f'/>
</method>
<method selector='runAction:'>
<arg index='0' declared_type='CCAction*' type='@' name='action'/>
<retval declared_type='CCAction*' type='@'/>
</method>
<method selector='scale'>
<retval declared_type='float' type='f'/>
</method>
<method selector='scaleX'>
<retval declared_type='float' type='f'/>
</method>
<method selector='scaleY'>
<retval declared_type='float' type='f'/>
</method>
<method selector='schedule:'>
<arg index='0' declared_type='SEL' type=':' name='s'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='schedule:interval:'>
<arg index='0' declared_type='SEL' type=':' name='s'/>
<arg index='1' declared_type='ccTime' type='f' name='seconds'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='schedule:interval:repeat:delay:'>
<arg index='0' declared_type='SEL' type=':' name='selector'/>
<arg index='1' declared_type='ccTime' type='f' name='interval'/>
<arg index='2' declared_type='uint' type='I' name='repeat'/>
<arg index='3' declared_type='ccTime' type='f' name='delay'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleOnce:delay:'>
<arg index='0' declared_type='SEL' type=':' name='selector'/>
<arg index='1' declared_type='ccTime' type='f' name='delay'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleUpdate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleUpdateWithPriority:'>
<arg index='0' declared_type='NSInteger' type='i' name='priority'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduler'>
<retval declared_type='CCScheduler*' type='@'/>
</method>
<method selector='setActionManager:'>
<arg index='0' declared_type='CCActionManager*' type='@' name='actionManager'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorPoint:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='anchorPoint'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentSize:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='contentSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGlServerState:'>
<arg index='0' declared_type='ccGLServerState' type='i' name='glServerState'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGrid:'>
<arg index='0' declared_type='CCGridBase*' type='@' name='grid'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIgnoreAnchorPointForPosition:'>
<arg index='0' declared_type='BOOL' type='B' name='ignoreAnchorPointForPosition'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrderOfArrival:'>
<arg index='0' declared_type='NSUInteger' type='I' name='orderOfArrival'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParent:'>
<arg index='0' declared_type='CCNode*' type='@' name='parent'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='position'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg index='0' declared_type='float' type='f' name='rotation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotationX:'>
<arg index='0' declared_type='float' type='f' name='rotationX'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotationY:'>
<arg index='0' declared_type='float' type='f' name='rotationY'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScale:'>
<arg index='0' declared_type='float' type='f' name='scale'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleX:'>
<arg index='0' declared_type='float' type='f' name='scaleX'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleY:'>
<arg index='0' declared_type='float' type='f' name='scaleY'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScheduler:'>
<arg index='0' declared_type='CCScheduler*' type='@' name='scheduler'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShaderProgram:'>
<arg index='0' declared_type='CCGLProgram*' type='@' name='shaderProgram'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSkewX:'>
<arg index='0' declared_type='float' type='f' name='skewX'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSkewY:'>
<arg index='0' declared_type='float' type='f' name='skewY'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg index='0' declared_type='NSInteger' type='i' name='tag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserData:'>
<arg index='0' declared_type='void*' type='^v' name='userData'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserObject:'>
<arg index='0' declared_type='id' type='@' name='userObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexZ:'>
<arg index='0' declared_type='float' type='f' name='vertexZ'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg index='0' declared_type='BOOL' type='B' name='visible'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZOrder:'>
<arg index='0' declared_type='NSUInteger' type='I' name='z'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderProgram'>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='skewX'>
<retval declared_type='float' type='f'/>
</method>
<method selector='skewY'>
<retval declared_type='float' type='f'/>
</method>
<method selector='sortAllChildren'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAction:'>
<arg index='0' declared_type='CCAction*' type='@' name='action'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopActionByTag:'>
<arg index='0' declared_type='NSInteger' type='i' name='tag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAllActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='transform'>
<retval declared_type='void' type='v'/>
</method>
<method selector='transformAncestors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unschedule:'>
<arg index='0' declared_type='SEL' type=':' name='s'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleUpdate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='delta'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userData'>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='userObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='vertexZ'>
<retval declared_type='float' type='f'/>
</method>
<method selector='visible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='visit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='worldToNodeTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='zOrder'>
<retval declared_type='NSInteger' type='i'/>
</method>
</class>
<class name='CCOrbitCamera'>
<method selector='actionWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:' class_method='true'>
<arg index='0' declared_type='float' type='f' name='t'/>
<arg index='1' declared_type='float' type='f' name='r'/>
<arg index='2' declared_type='float' type='f' name='dr'/>
<arg index='3' declared_type='float' type='f' name='z'/>
<arg index='4' declared_type='float' type='f' name='dz'/>
<arg index='5' declared_type='float' type='f' name='x'/>
<arg index='6' declared_type='float' type='f' name='dx'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:'>
<arg index='0' declared_type='float' type='f' name='t'/>
<arg index='1' declared_type='float' type='f' name='r'/>
<arg index='2' declared_type='float' type='f' name='dr'/>
<arg index='3' declared_type='float' type='f' name='z'/>
<arg index='4' declared_type='float' type='f' name='dz'/>
<arg index='5' declared_type='float' type='f' name='x'/>
<arg index='6' declared_type='float' type='f' name='dx'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='sphericalRadius:zenith:azimuth:'>
<arg index='0' declared_type='float*' type='^f' name='r'/>
<arg index='1' declared_type='float*' type='^f' name='zenith'/>
<arg index='2' declared_type='float*' type='^f' name='azimuth'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCParallaxNode'>
<method selector='addChild:z:parallaxRatio:positionOffset:'>
<arg index='0' declared_type='CCNode*' type='@' name='node'/>
<arg index='1' declared_type='NSInteger' type='i' name='z'/>
<arg index='2' declared_type='CGPoint' type='{CGPoint=ff}' name='c'/>
<arg index='3' declared_type='CGPoint' type='{CGPoint=ff}' name='positionOffset'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parallaxArray'>
<retval declared_type='ccArray*' type='^{ccArray=II^@}'/>
</method>
<method selector='setParallaxArray:'>
<arg index='0' declared_type='ccArray*' type='^{ccArray=II^@}' name='parallaxArray'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCParticleBatchNode'>
<method selector='addChild:z:tag:'>
<arg index='0' declared_type='CCParticleSystem*' type='@' name='child'/>
<arg index='1' declared_type='NSInteger' type='i' name='z'/>
<arg index='2' declared_type='NSInteger' type='i' name='aTag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='batchNodeWithFile:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='imageFile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithFile:capacity:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='fileImage'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:' class_method='true'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='tex'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:capacity:' class_method='true'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='tex'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='disableParticle:'>
<arg index='0' declared_type='NSUInteger' type='I' name='particleIndex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithFile:capacity:'>
<arg index='0' declared_type='NSString*' type='@' name='fileImage'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='tex'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg index='0' declared_type='CCParticleSystem*' type='@' name='pSystem'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChild:cleanup:'>
<arg index='0' declared_type='CCParticleSystem*' type='@' name='pSystem'/>
<arg index='1' declared_type='BOOL' type='B' name='doCleanUp'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' name='blendFunc'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' declared_type='CCTextureAtlas*' type='@' name='textureAtlas'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
</class>
<class name='CCParticleExplosion'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCParticleFire'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCParticleFireworks'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCParticleFlower'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCParticleGalaxy'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCParticleMeteor'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCParticleRain'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCParticleSmoke'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCParticleSnow'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCParticleSpiral'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCParticleSun'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCParticleSystem'>
<method selector='active'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='angle'>
<retval declared_type='float' type='f'/>
</method>
<method selector='angleVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='atlasIndex'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='autoRemoveOnFinish'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='batchNode'>
<retval declared_type='CCParticleBatchNode*' type='@'/>
</method>
<method selector='blendAdditive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='duration'>
<retval declared_type='float' type='f'/>
</method>
<method selector='emissionRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='emitterMode'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='endColor'>
<retval declared_type='ccColor4F' type='{_ccColor4F=ffff}'/>
</method>
<method selector='endColorVar'>
<retval declared_type='ccColor4F' type='{_ccColor4F=ffff}'/>
</method>
<method selector='endRadius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endRadiusVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSize'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSizeVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSpin'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSpinVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='gravity'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='initWithDictionary:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='dictionary'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDictionary:path:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='dictionary'/>
<arg index='1' declared_type='NSString*' type='@' name='dirname'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFile:'>
<arg index='0' declared_type='NSString*' type='@' name='plistFile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTotalParticles:'>
<arg index='0' declared_type='NSUInteger' type='I' name='numberOfParticles'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFull'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='life'>
<retval declared_type='float' type='f'/>
</method>
<method selector='lifeVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='particleCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='particleWithFile:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='plistFile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='particleWithTotalParticles:' class_method='true'>
<arg index='0' declared_type='NSUInteger' type='I' name='numberOfParticles'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='posVar'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='positionType'>
<retval declared_type='tCCPositionType' type='i'/>
</method>
<method selector='postStep'>
<retval declared_type='void' type='v'/>
</method>
<method selector='radialAccel'>
<retval declared_type='float' type='f'/>
</method>
<method selector='radialAccelVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='resetSystem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotatePerSecond'>
<retval declared_type='float' type='f'/>
</method>
<method selector='rotatePerSecondVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setAngle:'>
<arg index='0' declared_type='float' type='f' name='angle'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngleVar:'>
<arg index='0' declared_type='float' type='f' name='angleVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAtlasIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='atlasIndex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoRemoveOnFinish:'>
<arg index='0' declared_type='BOOL' type='B' name='autoRemoveOnFinish'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBatchNode:'>
<arg index='0' declared_type='CCParticleBatchNode*' type='@' name='batchNode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendAdditive:'>
<arg index='0' declared_type='BOOL' type='B' name='blendAdditive'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' name='blendFunc'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDuration:'>
<arg index='0' declared_type='float' type='f' name='duration'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmissionRate:'>
<arg index='0' declared_type='float' type='f' name='emissionRate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmitterMode:'>
<arg index='0' declared_type='NSInteger' type='i' name='emitterMode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndColor:'>
<arg index='0' declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='endColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndColorVar:'>
<arg index='0' declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='endColorVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndRadius:'>
<arg index='0' declared_type='float' type='f' name='endRadius'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndRadiusVar:'>
<arg index='0' declared_type='float' type='f' name='endRadiusVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSize:'>
<arg index='0' declared_type='float' type='f' name='endSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSizeVar:'>
<arg index='0' declared_type='float' type='f' name='endSizeVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSpin:'>
<arg index='0' declared_type='float' type='f' name='endSpin'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSpinVar:'>
<arg index='0' declared_type='float' type='f' name='endSpinVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGravity:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='gravity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLife:'>
<arg index='0' declared_type='float' type='f' name='life'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLifeVar:'>
<arg index='0' declared_type='float' type='f' name='lifeVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg index='0' declared_type='BOOL' type='B' name='opacityModifyRGB'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosVar:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='posVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositionType:'>
<arg index='0' declared_type='tCCPositionType' type='i' name='positionType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadialAccel:'>
<arg index='0' declared_type='float' type='f' name='radialAccel'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadialAccelVar:'>
<arg index='0' declared_type='float' type='f' name='radialAccelVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotatePerSecond:'>
<arg index='0' declared_type='float' type='f' name='rotatePerSecond'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotatePerSecondVar:'>
<arg index='0' declared_type='float' type='f' name='rotatePerSecondVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourcePosition:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='sourcePosition'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg index='0' declared_type='float' type='f' name='speed'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeedVar:'>
<arg index='0' declared_type='float' type='f' name='speedVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartColor:'>
<arg index='0' declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='startColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartColorVar:'>
<arg index='0' declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='startColorVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartRadius:'>
<arg index='0' declared_type='float' type='f' name='startRadius'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartRadiusVar:'>
<arg index='0' declared_type='float' type='f' name='startRadiusVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSize:'>
<arg index='0' declared_type='float' type='f' name='startSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSizeVar:'>
<arg index='0' declared_type='float' type='f' name='startSizeVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSpin:'>
<arg index='0' declared_type='float' type='f' name='startSpin'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSpinVar:'>
<arg index='0' declared_type='float' type='f' name='startSpinVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTangentialAccel:'>
<arg index='0' declared_type='float' type='f' name='tangentialAccel'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTangentialAccelVar:'>
<arg index='0' declared_type='float' type='f' name='tangentialAccelVar'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTotalParticles:'>
<arg index='0' declared_type='NSUInteger' type='I' name='totalParticles'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourcePosition'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='speed'>
<retval declared_type='float' type='f'/>
</method>
<method selector='speedVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startColor'>
<retval declared_type='ccColor4F' type='{_ccColor4F=ffff}'/>
</method>
<method selector='startColorVar'>
<retval declared_type='ccColor4F' type='{_ccColor4F=ffff}'/>
</method>
<method selector='startRadius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startRadiusVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSize'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSizeVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSpin'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSpinVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='stopSystem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tangentialAccel'>
<retval declared_type='float' type='f'/>
</method>
<method selector='tangentialAccelVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='totalParticles'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='dt'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateQuadWithParticle:newPosition:'>
<arg index='0' declared_type='tCCParticle*' type='^{sCCParticle={CGPoint=ff}{CGPoint=ff}{_ccColor4F=ffff}{_ccColor4F=ffff}fffffI(?={?={CGPoint=ff}ff}{?=ffff})}' name='particle'/>
<arg index='1' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWithNoTime'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCParticleSystemQuad'>
<method selector='initIndices'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initTexCoordsWithRect:'>
<arg index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayFrame:'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='spriteFrame'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:withRect:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCPhysicsDebugNode'>
<method selector='debugNodeForCPSpace:' class_method='true'>
<arg index='0' declared_type='cpSpace*' type='^{cpSpace=i{CGPoint=ff}fffffIi^v^{cpBody}If^{cpArray}^{cpArray}^{cpArray}^{cpSpatialIndex}^{cpSpatialIndex}^{cpArray}^{cpContactBufferHeader}^{cpHashSet}^{cpArray}^{cpArray}^{cpArray}i^{cpHashSet}{cpCollisionHandler=II^?^?^?^?^v}i^{cpArray}{cpBody=^?^?ffff{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}fff{CGPoint=ff}^vff{CGPoint=ff}f^{cpSpace}^{cpShape}^{cpArbiter}^{cpConstraint}{cpComponentNode=^{cpBody}^{cpBody}f}}}' name='space'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='debugNodeForChipmunkSpace:' class_method='true'>
<arg index='0' declared_type='ChipmunkSpace*' type='@' name='space'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setSpace:'>
<arg index='0' declared_type='cpSpace*' type='^{cpSpace=i{CGPoint=ff}fffffIi^v^{cpBody}If^{cpArray}^{cpArray}^{cpArray}^{cpSpatialIndex}^{cpSpatialIndex}^{cpArray}^{cpContactBufferHeader}^{cpHashSet}^{cpArray}^{cpArray}^{cpArray}i^{cpHashSet}{cpCollisionHandler=II^?^?^?^?^v}i^{cpArray}{cpBody=^?^?ffff{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}fff{CGPoint=ff}^vff{CGPoint=ff}f^{cpSpace}^{cpShape}^{cpArbiter}^{cpConstraint}{cpComponentNode=^{cpBody}^{cpBody}f}}}' name='space'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='space'>
<retval declared_type='cpSpace*' type='^{cpSpace=i{CGPoint=ff}fffffIi^v^{cpBody}If^{cpArray}^{cpArray}^{cpArray}^{cpSpatialIndex}^{cpSpatialIndex}^{cpArray}^{cpContactBufferHeader}^{cpHashSet}^{cpArray}^{cpArray}^{cpArray}i^{cpHashSet}{cpCollisionHandler=II^?^?^?^?^v}i^{cpArray}{cpBody=^?^?ffff{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}fff{CGPoint=ff}^vff{CGPoint=ff}f^{cpSpace}^{cpShape}^{cpArbiter}^{cpConstraint}{cpComponentNode=^{cpBody}^{cpBody}f}}}'/>
</method>
</class>
<class name='CCPhysicsSprite'>
<method selector='body'>
<retval declared_type='cpBody*' type='^{cpBody=^?^?ffff{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}fff{CGPoint=ff}^vff{CGPoint=ff}f^{cpSpace}^{cpShape}^{cpArbiter}^{cpConstraint}{cpComponentNode=^{cpBody}^{cpBody}f}}'/>
</method>
<method selector='chipmunkBody'>
<retval declared_type='ChipmunkBody*' type='@'/>
</method>
<method selector='ignoreBodyRotation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBody:'>
<arg index='0' declared_type='cpBody*' type='^{cpBody=^?^?ffff{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}fff{CGPoint=ff}^vff{CGPoint=ff}f^{cpSpace}^{cpShape}^{cpArbiter}^{cpConstraint}{cpComponentNode=^{cpBody}^{cpBody}f}}' name='body'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChipmunkBody:'>
<arg index='0' declared_type='ChipmunkBody*' type='@' name='chipmunkBody'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIgnoreBodyRotation:'>
<arg index='0' declared_type='BOOL' type='B' name='ignoreBodyRotation'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCPlace'>
<method selector='actionWithPosition:' class_method='true'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPosition:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCPointArray'>
<method selector='addControlPoint:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='controlPoint'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='arrayWithCapacity:' class_method='true'>
<arg index='0' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='controlPoints'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='getControlPointAtIndex:'>
<arg index='0' declared_type='NSInteger' type='i' name='index'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertControlPoint:atIndex:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='controlPoint'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeControlPointAtIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceControlPoint:atIndex:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='controlPoint'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverse'>
<retval declared_type='CCPointArray*' type='@'/>
</method>
<method selector='reverseInline'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlPoints:'>
<arg index='0' declared_type='NSMutableArray*' type='@' name='controlPoints'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCProfiler'>
<method selector='createAndAddTimerWithName:'>
<arg index='0' declared_type='NSString*' type='@' name='timerName'/>
<retval declared_type='CCProfilingTimer*' type='@'/>
</method>
<method selector='displayTimers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='releaseAllTimers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='releaseTimer:'>
<arg index='0' declared_type='NSString*' type='@' name='timerName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedProfiler' class_method='true'>
<retval declared_type='CCProfiler*' type='@'/>
</method>
</class>
<class name='CCProfilingTimer'>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCProgressFromTo'>
<method selector='actionWithDuration:from:to:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='fromPercentage'/>
<arg index='2' declared_type='float' type='f' name='toPercentage'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:from:to:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='fromPercentage'/>
<arg index='2' declared_type='float' type='f' name='toPercentage'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCProgressTimer'>
<method selector='barChangeRate'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithSprite:'>
<arg index='0' declared_type='CCSprite*' type='@' name='sprite'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='midpoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='percentage'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progressWithSprite:' class_method='true'>
<arg index='0' declared_type='CCSprite*' type='@' name='sprite'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='reverseDirection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBarChangeRate:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='barChangeRate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg index='0' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMidpoint:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='midpoint'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg index='0' declared_type='GLubyte' type='C' name='opacity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPercentage:'>
<arg index='0' declared_type='float' type='f' name='percentage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReverseDirection:'>
<arg index='0' declared_type='BOOL' type='B' name='reverseDirection'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSprite:'>
<arg index='0' declared_type='CCSprite*' type='@' name='sprite'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg index='0' declared_type='CCProgressTimerType' type='i' name='type'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sprite'>
<retval declared_type='CCSprite*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='CCProgressTimerType' type='i'/>
</method>
<method selector='vertexData'>
<retval declared_type='ccV2F_C4B_T2F*' type='^{_ccV2F_C4B_T2F={_ccVertex2F=ff}{_ccColor4B=CCCC}{_ccTex2F=ff}}'/>
</method>
<method selector='vertexDataCount'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='CCProgressTo'>
<method selector='actionWithDuration:percent:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='percent'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:percent:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='percent'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCRenderTexture'>
<method selector='autoDraw'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='begin'>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginWithClear:g:b:a:'>
<arg index='0' declared_type='float' type='f' name='r'/>
<arg index='1' declared_type='float' type='f' name='g'/>
<arg index='2' declared_type='float' type='f' name='b'/>
<arg index='3' declared_type='float' type='f' name='a'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginWithClear:g:b:a:depth:'>
<arg index='0' declared_type='float' type='f' name='r'/>
<arg index='1' declared_type='float' type='f' name='g'/>
<arg index='2' declared_type='float' type='f' name='b'/>
<arg index='3' declared_type='float' type='f' name='a'/>
<arg index='4' declared_type='float' type='f' name='depthValue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginWithClear:g:b:a:depth:stencil:'>
<arg index='0' declared_type='float' type='f' name='r'/>
<arg index='1' declared_type='float' type='f' name='g'/>
<arg index='2' declared_type='float' type='f' name='b'/>
<arg index='3' declared_type='float' type='f' name='a'/>
<arg index='4' declared_type='float' type='f' name='depthValue'/>
<arg index='5' declared_type='int' type='i' name='stencilValue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clear:g:b:a:'>
<arg index='0' declared_type='float' type='f' name='r'/>
<arg index='1' declared_type='float' type='f' name='g'/>
<arg index='2' declared_type='float' type='f' name='b'/>
<arg index='3' declared_type='float' type='f' name='a'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColor'>
<retval declared_type='ccColor4F' type='{_ccColor4F=ffff}'/>
</method>
<method selector='clearDepth'>
<retval declared_type='GLclampf' type='f'/>
</method>
<method selector='clearDepth:'>
<arg index='0' declared_type='float' type='f' name='depthValue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearFlags'>
<retval declared_type='GLbitfield' type='I'/>
</method>
<method selector='clearStencil'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='clearStencil:'>
<arg index='0' declared_type='int' type='i' name='stencilValue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='end'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithWidth:height:pixelFormat:'>
<arg index='0' declared_type='int' type='i' name='w'/>
<arg index='1' declared_type='int' type='i' name='h'/>
<arg index='2' declared_type='CCTexture2DPixelFormat' type='i' name='format'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithWidth:height:pixelFormat:depthStencilFormat:'>
<arg index='0' declared_type='int' type='i' name='w'/>
<arg index='1' declared_type='int' type='i' name='h'/>
<arg index='2' declared_type='CCTexture2DPixelFormat' type='i' name='format'/>
<arg index='3' declared_type='GLuint' type='I' name='depthStencilFormat'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='newCGImage'>
<retval declared_type='CGImageRef' type='^{CGImage=}'/>
</method>
<method selector='renderTextureWithWidth:height:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='w'/>
<arg index='1' declared_type='int' type='i' name='h'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='renderTextureWithWidth:height:pixelFormat:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='w'/>
<arg index='1' declared_type='int' type='i' name='h'/>
<arg index='2' declared_type='CCTexture2DPixelFormat' type='i' name='format'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='renderTextureWithWidth:height:pixelFormat:depthStencilFormat:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='w'/>
<arg index='1' declared_type='int' type='i' name='h'/>
<arg index='2' declared_type='CCTexture2DPixelFormat' type='i' name='format'/>
<arg index='3' declared_type='GLuint' type='I' name='depthStencilFormat'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='saveToFile:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveToFile:format:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<arg index='1' declared_type='tCCImageFormat' type='i' name='format'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAutoDraw:'>
<arg index='0' declared_type='BOOL' type='B' name='autoDraw'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClearColor:'>
<arg index='0' declared_type='ccColor4F' type='{_ccColor4F=ffff}' name='clearColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClearDepth:'>
<arg index='0' declared_type='GLclampf' type='f' name='clearDepth'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClearFlags:'>
<arg index='0' declared_type='GLbitfield' type='I' name='clearFlags'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClearStencil:'>
<arg index='0' declared_type='GLint' type='i' name='clearStencil'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSprite:'>
<arg index='0' declared_type='CCSprite*' type='@' name='sprite'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sprite'>
<retval declared_type='CCSprite*' type='@'/>
</method>
</class>
<class name='CCRepeat'>
<method selector='actionWithAction:times:' class_method='true'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='action'/>
<arg index='1' declared_type='NSUInteger' type='I' name='times'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:times:'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='action'/>
<arg index='1' declared_type='NSUInteger' type='I' name='times'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='innerAction'>
<retval declared_type='CCFiniteTimeAction*' type='@'/>
</method>
<method selector='setInnerAction:'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='innerAction'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCRepeatForever'>
<method selector='actionWithAction:' class_method='true'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='innerAction'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='setInnerAction:'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='innerAction'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCReuseGrid'>
<method selector='actionWithTimes:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='times'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTimes:'>
<arg index='0' declared_type='int' type='i' name='times'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCReverseTime'>
<method selector='actionWithAction:' class_method='true'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='action'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='action'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCRipple3D'>
<method selector='actionWithPosition:radius:waves:amplitude:grid:duration:' class_method='true'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<arg index='1' declared_type='float' type='f' name='r'/>
<arg index='2' declared_type='int' type='i' name='wav'/>
<arg index='3' declared_type='float' type='f' name='amp'/>
<arg index='4' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='5' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithPosition:radius:waves:amplitude:grid:duration:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<arg index='1' declared_type='float' type='f' name='r'/>
<arg index='2' declared_type='int' type='i' name='wav'/>
<arg index='3' declared_type='float' type='f' name='amp'/>
<arg index='4' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='5' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' declared_type='float' type='f' name='amplitude'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' declared_type='float' type='f' name='amplitudeRate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='position'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCRotateBy'>
<method selector='actionWithDuration:angle:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='deltaAngle'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithDuration:angleX:angleY:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='float' type='f' name='aX'/>
<arg index='2' declared_type='float' type='f' name='aY'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:angle:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='deltaAngle'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:angleX:angleY:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='float' type='f' name='aX'/>
<arg index='2' declared_type='float' type='f' name='aY'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCRotateTo'>
<method selector='actionWithDuration:angle:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='angle'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithDuration:angleX:angleY:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='float' type='f' name='aX'/>
<arg index='2' declared_type='float' type='f' name='aY'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:angle:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='angle'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:angleX:angleY:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='float' type='f' name='aX'/>
<arg index='2' declared_type='float' type='f' name='aY'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCScaleBy'>
<method selector='startWithTarget:'>
<arg index='0' declared_type='CCNode*' type='@' name='aTarget'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCScaleTo'>
<method selector='actionWithDuration:scale:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithDuration:scaleX:scaleY:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='sx'/>
<arg index='2' declared_type='float' type='f' name='sy'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:scale:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:scaleX:scaleY:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='float' type='f' name='sx'/>
<arg index='2' declared_type='float' type='f' name='sy'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCScene'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCScheduler'>
<method selector='isTargetPaused:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pauseAllTargets'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='pauseAllTargetsWithMinPriority:'>
<arg index='0' declared_type='NSInteger' type='i' name='minPriority'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='pauseTarget:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTarget:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTargets:'>
<arg index='0' declared_type='NSSet*' type='@' name='targetsToResume'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleBlockForKey:target:interval:repeat:delay:paused:block:'>
<arg index='0' declared_type='NSString*' type='@' name='key'/>
<arg index='1' declared_type='id' type='@' name='target'/>
<arg index='2' declared_type='ccTime' type='f' name='interval'/>
<arg index='3' declared_type='uint' type='I' name='repeat'/>
<arg index='4' declared_type='ccTime' type='f' name='delay'/>
<arg index='5' declared_type='BOOL' type='B' name='paused'/>
<arg index='6' declared_type='void (^)(ccTime)' type='@?' name='block' function_pointer='true'>
<arg declared_type='ccTime' type='f'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:'>
<arg index='0' declared_type='SEL' type=':' name='selector'/>
<arg index='1' declared_type='id' type='@' name='target'/>
<arg index='2' declared_type='ccTime' type='f' name='interval'/>
<arg index='3' declared_type='BOOL' type='B' name='paused'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleSelector:forTarget:interval:repeat:delay:paused:'>
<arg index='0' declared_type='SEL' type=':' name='selector'/>
<arg index='1' declared_type='id' type='@' name='target'/>
<arg index='2' declared_type='ccTime' type='f' name='interval'/>
<arg index='3' declared_type='uint' type='I' name='repeat'/>
<arg index='4' declared_type='ccTime' type='f' name='delay'/>
<arg index='5' declared_type='BOOL' type='B' name='paused'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleUpdateForTarget:priority:paused:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<arg index='1' declared_type='NSInteger' type='i' name='priority'/>
<arg index='2' declared_type='BOOL' type='B' name='paused'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeScale:'>
<arg index='0' declared_type='ccTime' type='f' name='timeScale'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeScale'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='unscheduleAll'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleAllForTarget:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleAllWithMinPriority:'>
<arg index='0' declared_type='NSInteger' type='i' name='minPriority'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleBlockForKey:target:'>
<arg index='0' declared_type='NSString*' type='@' name='key'/>
<arg index='1' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleSelector:forTarget:'>
<arg index='0' declared_type='SEL' type=':' name='selector'/>
<arg index='1' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleUpdateForTarget:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='dt'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCSequence'>
<method selector='actionOne:two:' class_method='true'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='actionOne'/>
<arg index='1' declared_type='CCFiniteTimeAction*' type='@' name='actionTwo'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithArray:' class_method='true'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfActions'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actions:' sentinel='0' variadic='true' class_method='true'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='action1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actions:vaList:' class_method='true'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='action1'/>
<arg index='1' declared_type='va_list' type='*' name='args'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initOne:two:'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='actionOne'/>
<arg index='1' declared_type='CCFiniteTimeAction*' type='@' name='actionTwo'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShaderCache'>
<method selector='addProgram:forKey:'>
<arg index='0' declared_type='CCGLProgram*' type='@' name='program'/>
<arg index='1' declared_type='NSString*' type='@' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadDefaultShaders'>
<retval declared_type='void' type='v'/>
</method>
<method selector='programForKey:'>
<arg index='0' declared_type='NSString*' type='@' name='key'/>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='purgeSharedShaderCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedShaderCache' class_method='true'>
<retval declared_type='CCShaderCache*' type='@'/>
</method>
</class>
<class name='CCShaky3D'>
<method selector='actionWithRange:shakeZ:grid:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='range'/>
<arg index='1' declared_type='BOOL' type='B' name='shakeZ'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg index='0' declared_type='int' type='i' name='range'/>
<arg index='1' declared_type='BOOL' type='B' name='shakeZ'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShakyTiles3D'>
<method selector='actionWithRange:shakeZ:grid:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='range'/>
<arg index='1' declared_type='BOOL' type='B' name='shakeZ'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg index='0' declared_type='int' type='i' name='range'/>
<arg index='1' declared_type='BOOL' type='B' name='shakeZ'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShatteredTiles3D'>
<method selector='actionWithRange:shatterZ:grid:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='range'/>
<arg index='1' declared_type='BOOL' type='B' name='shatterZ'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRange:shatterZ:grid:duration:'>
<arg index='0' declared_type='int' type='i' name='range'/>
<arg index='1' declared_type='BOOL' type='B' name='shatterZ'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShow'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='time'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCShuffleTiles'>
<method selector='actionWithSeed:grid:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='s'/>
<arg index='1' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='2' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg index='0' declared_type='int' type='i' name='s'/>
<arg index='1' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='2' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSkewBy'>
<method selector='initWithDuration:skewX:skewY:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='float' type='f' name='sx'/>
<arg index='2' declared_type='float' type='f' name='sy'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSkewTo'>
<method selector='actionWithDuration:skewX:skewY:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='float' type='f' name='sx'/>
<arg index='2' declared_type='float' type='f' name='sy'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:skewX:skewY:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='float' type='f' name='sx'/>
<arg index='2' declared_type='float' type='f' name='sy'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSpawn'>
<method selector='actionOne:two:' class_method='true'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='one'/>
<arg index='1' declared_type='CCFiniteTimeAction*' type='@' name='two'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithArray:' class_method='true'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfActions'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actions:' sentinel='0' variadic='true' class_method='true'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='action1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actions:vaList:' class_method='true'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='action1'/>
<arg index='1' declared_type='va_list' type='*' name='args'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initOne:two:'>
<arg index='0' declared_type='CCFiniteTimeAction*' type='@' name='one'/>
<arg index='1' declared_type='CCFiniteTimeAction*' type='@' name='two'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSpeed'>
<method selector='actionWithAction:speed:' class_method='true'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<arg index='1' declared_type='float' type='f' name='value'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:speed:'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<arg index='1' declared_type='float' type='f' name='value'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='innerAction'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='setInnerAction:'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='innerAction'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg index='0' declared_type='float' type='f' name='speed'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speed'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='CCSplitCols'>
<method selector='actionWithCols:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='cols'/>
<arg index='1' declared_type='ccTime' type='f' name='duration'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCols:duration:'>
<arg index='0' declared_type='int' type='i' name='cols'/>
<arg index='1' declared_type='ccTime' type='f' name='duration'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSplitRows'>
<method selector='actionWithRows:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='rows'/>
<arg index='1' declared_type='ccTime' type='f' name='duration'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRows:duration:'>
<arg index='0' declared_type='int' type='i' name='rows'/>
<arg index='1' declared_type='ccTime' type='f' name='duration'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSprite'>
<method selector='atlasIndex'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='batchNode'>
<retval declared_type='CCSpriteBatchNode*' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='dirty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displayFrame'>
<retval declared_type='CCSpriteFrame*' type='@'/>
</method>
<method selector='flipX'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='flipY'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCGImage:key:'>
<arg index='0' declared_type='CGImageRef' type='^{CGImage=}' name='image'/>
<arg index='1' declared_type='NSString*' type='@' name='key'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFile:'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFile:rect:'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrame:'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='spriteFrame'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrameName:'>
<arg index='0' declared_type='NSString*' type='@' name='spriteFrameName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rect:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rect:rotated:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<arg index='2' declared_type='BOOL' type='B' name='rotated'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFrameDisplayed:'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='frame'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='offsetPosition'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='quad'>
<retval declared_type='ccV3F_C4B_T2F_Quad' type='{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}'/>
</method>
<method selector='setAtlasIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='atlasIndex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBatchNode:'>
<arg index='0' declared_type='CCSpriteBatchNode*' type='@' name='batchNode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' name='blendFunc'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg index='0' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirty:'>
<arg index='0' declared_type='BOOL' type='B' name='dirty'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayFrame:'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='newFrame'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayFrameWithAnimationName:index:'>
<arg index='0' declared_type='NSString*' type='@' name='animationName'/>
<arg index='1' declared_type='int' type='i' name='frameIndex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlipX:'>
<arg index='0' declared_type='BOOL' type='B' name='flipX'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlipY:'>
<arg index='0' declared_type='BOOL' type='B' name='flipY'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg index='0' declared_type='GLubyte' type='C' name='opacity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' declared_type='CCTextureAtlas*' type='@' name='textureAtlas'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureRect:'>
<arg index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureRect:rotated:untrimmedSize:'>
<arg index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<arg index='1' declared_type='BOOL' type='B' name='rotated'/>
<arg index='2' declared_type='CGSize' type='{CGSize=ff}' name='size'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexRect:'>
<arg index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spriteWithCGImage:key:' class_method='true'>
<arg index='0' declared_type='CGImageRef' type='^{CGImage=}' name='image'/>
<arg index='1' declared_type='NSString*' type='@' name='key'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithFile:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithFile:rect:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithSpriteFrame:' class_method='true'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='spriteFrame'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithSpriteFrameName:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='spriteFrameName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithTexture:' class_method='true'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithTexture:rect:' class_method='true'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
<method selector='textureRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='textureRectRotated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateTransform'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCSpriteBatchNode'>
<method selector='addSpriteWithoutQuad:z:tag:'>
<arg index='0' declared_type='CCSprite*' type='@' name='child'/>
<arg index='1' declared_type='NSUInteger' type='I' name='z'/>
<arg index='2' declared_type='NSInteger' type='i' name='aTag'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='appendChild:'>
<arg index='0' declared_type='CCSprite*' type='@' name='sprite'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='atlasIndexForChild:atZ:'>
<arg index='0' declared_type='CCSprite*' type='@' name='sprite'/>
<arg index='1' declared_type='NSInteger' type='i' name='z'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='batchNodeWithFile:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='fileImage'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithFile:capacity:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='fileImage'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:' class_method='true'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='tex'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:capacity:' class_method='true'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='tex'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='descendants'>
<retval declared_type='CCArray*' type='@'/>
</method>
<method selector='increaseAtlasCapacity'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithFile:capacity:'>
<arg index='0' declared_type='NSString*' type='@' name='fileImage'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='tex'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg index='0' declared_type='CCSprite*' type='@' name='child'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertQuadFromSprite:quadIndex:'>
<arg index='0' declared_type='CCSprite*' type='@' name='sprite'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rebuildIndexInOrder:atlasIndex:'>
<arg index='0' declared_type='CCSprite*' type='@' name='parent'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='removeChild:cleanup:'>
<arg index='0' declared_type='CCSprite*' type='@' name='sprite'/>
<arg index='1' declared_type='BOOL' type='B' name='doCleanup'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChildAtIndex:cleanup:'>
<arg index='0' declared_type='NSUInteger' type='I' name='index'/>
<arg index='1' declared_type='BOOL' type='B' name='doCleanup'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFromAtlas:'>
<arg index='0' declared_type='CCSprite*' type='@' name='sprite'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reorderBatch:'>
<arg index='0' declared_type='BOOL' type='B' name='reorder'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' name='blendFunc'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' declared_type='CCTextureAtlas*' type='@' name='textureAtlas'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
<method selector='updateQuadFromSprite:quadIndex:'>
<arg index='0' declared_type='CCSprite*' type='@' name='sprite'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCSpriteFrame'>
<method selector='frameWithTexture:rect:' class_method='true'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='frameWithTexture:rectInPixels:rotated:offset:originalSize:' class_method='true'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<arg index='2' declared_type='BOOL' type='B' name='rotated'/>
<arg index='3' declared_type='CGPoint' type='{CGPoint=ff}' name='offset'/>
<arg index='4' declared_type='CGSize' type='{CGSize=ff}' name='originalSize'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='frameWithTextureFilename:rect:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='frameWithTextureFilename:rectInPixels:rotated:offset:originalSize:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<arg index='2' declared_type='BOOL' type='B' name='rotated'/>
<arg index='3' declared_type='CGPoint' type='{CGPoint=ff}' name='offset'/>
<arg index='4' declared_type='CGSize' type='{CGSize=ff}' name='originalSize'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rect:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rectInPixels:rotated:offset:originalSize:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<arg index='2' declared_type='BOOL' type='B' name='rotated'/>
<arg index='3' declared_type='CGPoint' type='{CGPoint=ff}' name='offset'/>
<arg index='4' declared_type='CGSize' type='{CGSize=ff}' name='originalSize'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTextureFilename:rect:'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTextureFilename:rectInPixels:rotated:offset:originalSize:'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<arg index='1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<arg index='2' declared_type='BOOL' type='B' name='rotated'/>
<arg index='3' declared_type='CGPoint' type='{CGPoint=ff}' name='offset'/>
<arg index='4' declared_type='CGSize' type='{CGSize=ff}' name='originalSize'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='offsetInPixels'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='originalSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='originalSizeInPixels'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='rect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='rectInPixels'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='rotated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setOffset:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='offset'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffsetInPixels:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='offsetInPixels'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOriginalSize:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='originalSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOriginalSizeInPixels:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='originalSizeInPixels'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRect:'>
<arg index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRectInPixels:'>
<arg index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rectInPixels'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotated:'>
<arg index='0' declared_type='BOOL' type='B' name='rotated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='textureFilename'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CCSpriteFrameCache'>
<method selector='addSpriteFrame:name:'>
<arg index='0' declared_type='CCSpriteFrame*' type='@' name='frame'/>
<arg index='1' declared_type='NSString*' type='@' name='frameName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFramesWithFile:'>
<arg index='0' declared_type='NSString*' type='@' name='plist'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFramesWithFile:texture:'>
<arg index='0' declared_type='NSString*' type='@' name='plist'/>
<arg index='1' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFramesWithFile:textureFilename:'>
<arg index='0' declared_type='NSString*' type='@' name='plist'/>
<arg index='1' declared_type='NSString*' type='@' name='filename'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='purgeSharedSpriteFrameCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFrameByName:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFrames'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFramesFromFile:'>
<arg index='0' declared_type='NSString*' type='@' name='plist'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFramesFromTexture:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeUnusedSpriteFrames'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedSpriteFrameCache' class_method='true'>
<retval declared_type='CCSpriteFrameCache*' type='@'/>
</method>
<method selector='spriteFrameByName:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='CCSpriteFrame*' type='@'/>
</method>
</class>
<class name='CCTMXLayer'>
<method selector='addChild:z:tag:'>
<arg index='0' declared_type='CCNode*' type='@' name='node'/>
<arg index='1' declared_type='NSInteger' type='i' name='z'/>
<arg index='2' declared_type='NSInteger' type='i' name='tag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTilesetInfo:layerInfo:mapInfo:'>
<arg index='0' declared_type='CCTMXTilesetInfo*' type='@' name='tilesetInfo'/>
<arg index='1' declared_type='CCTMXLayerInfo*' type='@' name='layerInfo'/>
<arg index='2' declared_type='CCTMXMapInfo*' type='@' name='mapInfo'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='layerOrientation'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='layerSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='layerWithTilesetInfo:layerInfo:mapInfo:' class_method='true'>
<arg index='0' declared_type='CCTMXTilesetInfo*' type='@' name='tilesetInfo'/>
<arg index='1' declared_type='CCTMXLayerInfo*' type='@' name='layerInfo'/>
<arg index='2' declared_type='CCTMXMapInfo*' type='@' name='mapInfo'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapTileSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='positionAt:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='tileCoordinate'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='propertyNamed:'>
<arg index='0' declared_type='NSString*' type='@' name='propertyName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='releaseMap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTileAt:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='tileCoordinate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerName:'>
<arg index='0' declared_type='NSString*' type='@' name='layerName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerOrientation:'>
<arg index='0' declared_type='NSUInteger' type='I' name='layerOrientation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerSize:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='layerSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapTileSize:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='mapTileSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg index='0' declared_type='NSMutableArray*' type='@' name='properties'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileGID:at:'>
<arg index='0' declared_type='uint32_t' type='I' name='gid'/>
<arg index='1' declared_type='CGPoint' type='{CGPoint=ff}' name='tileCoordinate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileGID:at:withFlags:'>
<arg index='0' declared_type='uint32_t' type='I' name='gid'/>
<arg index='1' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<arg index='2' declared_type='ccTMXTileFlags' type='i' name='flags'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTiles:'>
<arg index='0' declared_type='uint32_t*' type='^I' name='tiles'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileset:'>
<arg index='0' declared_type='CCTMXTilesetInfo*' type='@' name='tileset'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setupTiles'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileAt:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='tileCoordinate'/>
<retval declared_type='CCSprite*' type='@'/>
</method>
<method selector='tileGIDAt:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='tileCoordinate'/>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='tileGIDAt:withFlags:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<arg index='1' declared_type='ccTMXTileFlags*' type='^i' name='flags'/>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='tiles'>
<retval declared_type='uint32_t*' type='^I'/>
</method>
<method selector='tileset'>
<retval declared_type='CCTMXTilesetInfo*' type='@'/>
</method>
</class>
<class name='CCTMXLayerInfo'>
<method selector='layerSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='maxGID'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='minGID'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='opacity'>
<retval declared_type='unsigned char' type='C'/>
</method>
<method selector='ownTiles'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='setLayerSize:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='layerSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxGID:'>
<arg index='0' declared_type='unsigned int' type='I' name='maxGID'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinGID:'>
<arg index='0' declared_type='unsigned int' type='I' name='minGID'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='offset'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg index='0' declared_type='unsigned char' type='C' name='opacity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOwnTiles:'>
<arg index='0' declared_type='BOOL' type='B' name='ownTiles'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg index='0' declared_type='NSMutableDictionary*' type='@' name='properties'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTiles:'>
<arg index='0' declared_type='unsigned int*' type='^I' name='tiles'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg index='0' declared_type='BOOL' type='B' name='visible'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tiles'>
<retval declared_type='unsigned int*' type='^I'/>
</method>
<method selector='visible'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CCTMXMapInfo'>
<method selector='filename'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formatWithTMXFile:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='tmxFile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='formatWithXML:resourcePath:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='tmxString'/>
<arg index='1' declared_type='NSString*' type='@' name='resourcePath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTMXFile:'>
<arg index='0' declared_type='NSString*' type='@' name='tmxFile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg index='0' declared_type='NSString*' type='@' name='tmxString'/>
<arg index='1' declared_type='NSString*' type='@' name='resourcePath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layers'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='mapSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='objectGroups'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='orientation'>
<retval declared_type='int' type='i'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='resources'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setFilename:'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayers:'>
<arg index='0' declared_type='NSMutableArray*' type='@' name='layers'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapSize:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='mapSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectGroups:'>
<arg index='0' declared_type='NSMutableArray*' type='@' name='objectGroups'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientation:'>
<arg index='0' declared_type='int' type='i' name='orientation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg index='0' declared_type='NSMutableDictionary*' type='@' name='properties'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResources:'>
<arg index='0' declared_type='NSString*' type='@' name='resources'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileProperties:'>
<arg index='0' declared_type='NSMutableDictionary*' type='@' name='tileProperties'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSize:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='tileSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTilesets:'>
<arg index='0' declared_type='NSMutableArray*' type='@' name='tilesets'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileProperties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='tileSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='tilesets'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
</class>
<class name='CCTMXObjectGroup'>
<method selector='groupName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='objectNamed:'>
<arg index='0' declared_type='NSString*' type='@' name='objectName'/>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='objects'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='positionOffset'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='propertyNamed:'>
<arg index='0' declared_type='NSString*' type='@' name='propertyName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setGroupName:'>
<arg index='0' declared_type='NSString*' type='@' name='groupName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjects:'>
<arg index='0' declared_type='NSMutableArray*' type='@' name='objects'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositionOffset:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='positionOffset'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg index='0' declared_type='NSMutableDictionary*' type='@' name='properties'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTMXTiledMap'>
<method selector='initWithTMXFile:'>
<arg index='0' declared_type='NSString*' type='@' name='tmxFile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg index='0' declared_type='NSString*' type='@' name='tmxString'/>
<arg index='1' declared_type='NSString*' type='@' name='resourcePath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerNamed:'>
<arg index='0' declared_type='NSString*' type='@' name='layerName'/>
<retval declared_type='CCTMXLayer*' type='@'/>
</method>
<method selector='mapOrientation'>
<retval declared_type='int' type='i'/>
</method>
<method selector='mapSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='objectGroupNamed:'>
<arg index='0' declared_type='NSString*' type='@' name='groupName'/>
<retval declared_type='CCTMXObjectGroup*' type='@'/>
</method>
<method selector='objectGroups'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='propertiesForGID:'>
<arg index='0' declared_type='unsigned int' type='I' name='GID'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyNamed:'>
<arg index='0' declared_type='NSString*' type='@' name='propertyName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setObjectGroups:'>
<arg index='0' declared_type='NSMutableArray*' type='@' name='objectGroups'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg index='0' declared_type='NSMutableDictionary*' type='@' name='properties'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='tiledMapWithTMXFile:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='tmxFile'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='tiledMapWithXML:resourcePath:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='tmxString'/>
<arg index='1' declared_type='NSString*' type='@' name='resourcePath'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTMXTilesetInfo'>
<method selector='firstGid'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='imageSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='margin'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rectForGID:'>
<arg index='0' declared_type='unsigned int' type='I' name='gid'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='setFirstGid:'>
<arg index='0' declared_type='unsigned int' type='I' name='firstGid'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageSize:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='imageSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMargin:'>
<arg index='0' declared_type='unsigned int' type='I' name='margin'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceImage:'>
<arg index='0' declared_type='NSString*' type='@' name='sourceImage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpacing:'>
<arg index='0' declared_type='unsigned int' type='I' name='spacing'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSize:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='tileSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceImage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='spacing'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='tileSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
</class>
<class name='CCTargetedAction'>
<method selector='actionWithTarget:action:' class_method='true'>
<arg index='0' declared_type='id' type='@' name='target'/>
<arg index='1' declared_type='CCFiniteTimeAction*' type='@' name='action'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='forcedTarget'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:action:'>
<arg index='0' declared_type='id' type='@' name='target'/>
<arg index='1' declared_type='CCFiniteTimeAction*' type='@' name='action'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setForcedTarget:'>
<arg index='0' declared_type='id' type='@' name='forcedTarget'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTexture2D'>
<method selector='PVRImagesHavePremultipliedAlpha:' class_method='true'>
<arg index='0' declared_type='BOOL' type='B' name='haveAlphaPremultiplied'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bitsPerPixelForFormat'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='bitsPerPixelForFormat:' class_method='true'>
<arg index='0' declared_type='CCTexture2DPixelFormat' type='i' name='format'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='contentSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='contentSizeInPixels'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='defaultAlphaPixelFormat' class_method='true'>
<retval declared_type='CCTexture2DPixelFormat' type='i'/>
</method>
<method selector='drawAtPoint:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='point'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:'>
<arg index='0' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='generateMipmap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasPremultipliedAlpha'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCGImage:resolutionType:'>
<arg index='0' declared_type='CGImageRef' type='^{CGImage=}' name='cgImage'/>
<arg index='1' declared_type='ccResolutionType' type='i' name='resolution'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:pixelFormat:pixelsWide:pixelsHigh:contentSize:'>
<arg index='0' declared_type='void*' type='^v' name='data' const='true'/>
<arg index='1' declared_type='CCTexture2DPixelFormat' type='i' name='pixelFormat'/>
<arg index='2' declared_type='NSUInteger' type='I' name='width'/>
<arg index='3' declared_type='NSUInteger' type='I' name='height'/>
<arg index='4' declared_type='CGSize' type='{CGSize=ff}' name='size'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPVRFile:'>
<arg index='0' declared_type='NSString*' type='@' name='file'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<arg index='3' declared_type='CGSize' type='{CGSize=ff}' name='dimensions'/>
<arg index='4' declared_type='CCTextAlignment' type='i' name='alignment'/>
<arg index='5' declared_type='CCVerticalTextAlignment' type='i' name='vertAlignment'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:lineBreakMode:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='CGFloat' type='f' name='size'/>
<arg index='3' declared_type='CGSize' type='{CGSize=ff}' name='dimensions'/>
<arg index='4' declared_type='CCTextAlignment' type='i' name='alignment'/>
<arg index='5' declared_type='CCVerticalTextAlignment' type='i' name='vertAlignment'/>
<arg index='6' declared_type='CCLineBreakMode' type='i' name='lineBreakMode'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='keepData:length:'>
<arg index='0' declared_type='void*' type='^v' name='data'/>
<arg index='1' declared_type='NSUInteger' type='I' name='length'/>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='maxS'>
<retval declared_type='GLfloat' type='f'/>
</method>
<method selector='maxT'>
<retval declared_type='GLfloat' type='f'/>
</method>
<method selector='name'>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='pixelFormat'>
<retval declared_type='CCTexture2DPixelFormat' type='i'/>
</method>
<method selector='pixelsHigh'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='pixelsWide'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='releaseData:'>
<arg index='0' declared_type='void*' type='^v' name='data'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resolutionType'>
<retval declared_type='ccResolutionType' type='i'/>
</method>
<method selector='setAliasTexParameters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAntiAliasTexParameters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultAlphaPixelFormat:' class_method='true'>
<arg index='0' declared_type='CCTexture2DPixelFormat' type='i' name='format'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxS:'>
<arg index='0' declared_type='GLfloat' type='f' name='maxS'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxT:'>
<arg index='0' declared_type='GLfloat' type='f' name='maxT'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResolutionType:'>
<arg index='0' declared_type='ccResolutionType' type='i' name='resolutionType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShaderProgram:'>
<arg index='0' declared_type='CCGLProgram*' type='@' name='shaderProgram'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexParameters:'>
<arg index='0' declared_type='ccTexParams*' type='^{_ccTexParams=IIII}' name='texParams'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderProgram'>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='stringForFormat'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CCTextureAtlas'>
<method selector='capacity'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='drawNumberOfQuads:'>
<arg index='0' declared_type='NSUInteger' type='I' name='n'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawNumberOfQuads:fromIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='n'/>
<arg index='1' declared_type='NSUInteger' type='I' name='start'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawQuads'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillWithEmptyQuadsFromIndex:amount:'>
<arg index='0' declared_type='NSUInteger' type='I' name='index'/>
<arg index='1' declared_type='NSUInteger' type='I' name='amount'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='increaseTotalQuadsWith:'>
<arg index='0' declared_type='NSUInteger' type='I' name='amount'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithFile:capacity:'>
<arg index='0' declared_type='NSString*' type='@' name='file'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='tex'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertQuad:atIndex:'>
<arg index='0' declared_type='ccV3F_C4B_T2F_Quad*' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' name='quad'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertQuadFromIndex:atIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='fromIndex'/>
<arg index='1' declared_type='NSUInteger' type='I' name='newIndex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertQuads:atIndex:amount:'>
<arg index='0' declared_type='ccV3F_C4B_T2F_Quad*' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' name='quads'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index'/>
<arg index='2' declared_type='NSUInteger' type='I' name='amount'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveQuadsFromIndex:amount:atIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='oldIndex'/>
<arg index='1' declared_type='NSUInteger' type='I' name='amount'/>
<arg index='2' declared_type='NSUInteger' type='I' name='newIndex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveQuadsFromIndex:to:'>
<arg index='0' declared_type='NSUInteger' type='I' name='index'/>
<arg index='1' declared_type='NSUInteger' type='I' name='newIndex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quads'>
<retval declared_type='ccV3F_C4B_T2F_Quad*' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}'/>
</method>
<method selector='removeAllQuads'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeQuadAtIndex:'>
<arg index='0' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeQuadsAtIndex:amount:'>
<arg index='0' declared_type='NSUInteger' type='I' name='index'/>
<arg index='1' declared_type='NSUInteger' type='I' name='amount'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resizeCapacity:'>
<arg index='0' declared_type='NSUInteger' type='I' name='n'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setQuads:'>
<arg index='0' declared_type='ccV3F_C4B_T2F_Quad*' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' name='quads'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='textureAtlasWithFile:capacity:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='file'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='textureAtlasWithTexture:capacity:' class_method='true'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='tex'/>
<arg index='1' declared_type='NSUInteger' type='I' name='capacity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='totalQuads'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='updateQuad:atIndex:'>
<arg index='0' declared_type='ccV3F_C4B_T2F_Quad*' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' name='quad'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTextureCache'>
<method selector='addCGImage:forKey:'>
<arg index='0' declared_type='CGImageRef' type='^{CGImage=}' name='image'/>
<arg index='1' declared_type='NSString*' type='@' name='key'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='addImage:'>
<arg index='0' declared_type='NSString*' type='@' name='fileimage'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='addImageAsync:target:selector:'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<arg index='1' declared_type='id' type='@' name='target'/>
<arg index='2' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addImageAsync:withBlock:'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<arg index='1' declared_type='void (^)(CCTexture2D *)' type='@?' name='block' function_pointer='true'>
<arg declared_type='CCTexture2D*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPVRImage:'>
<arg index='0' declared_type='NSString*' type='@' name='filename'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='dumpCachedTextureInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='purgeSharedTextureCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllTextures'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTexture:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='tex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTextureForKey:'>
<arg index='0' declared_type='NSString*' type='@' name='textureKeyName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeUnusedTextures'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedTextureCache' class_method='true'>
<retval declared_type='CCTextureCache*' type='@'/>
</method>
<method selector='textureForKey:'>
<arg index='0' declared_type='NSString*' type='@' name='key'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
</class>
<class name='CCTexturePVR'>
<method selector='format'>
<retval declared_type='CCTexture2DPixelFormat' type='i'/>
</method>
<method selector='hasAlpha'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='height'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg index='0' declared_type='NSString*' type='@' name='path'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg index='0' declared_type='NSURL*' type='@' name='url'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='numberOfMipmaps'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='pvrTextureWithContentsOfFile:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='path'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pvrTextureWithContentsOfURL:' class_method='true'>
<arg index='0' declared_type='NSURL*' type='@' name='url'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='retainName'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setRetainName:'>
<arg index='0' declared_type='BOOL' type='B' name='retainName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='width'>
<retval declared_type='uint32_t' type='I'/>
</method>
</class>
<class name='CCTileMapAtlas'>
<method selector='initWithTileFile:mapFile:tileWidth:tileHeight:'>
<arg index='0' declared_type='NSString*' type='@' name='tile'/>
<arg index='1' declared_type='NSString*' type='@' name='map'/>
<arg index='2' declared_type='int' type='i' name='w'/>
<arg index='3' declared_type='int' type='i' name='h'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='releaseMap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTile:at:'>
<arg index='0' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='tile'/>
<arg index='1' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='position'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tgaInfo'>
<retval declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}'/>
</method>
<method selector='tileAt:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='position'/>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='tileMapAtlasWithTileFile:mapFile:tileWidth:tileHeight:' class_method='true'>
<arg index='0' declared_type='NSString*' type='@' name='tile'/>
<arg index='1' declared_type='NSString*' type='@' name='map'/>
<arg index='2' declared_type='int' type='i' name='w'/>
<arg index='3' declared_type='int' type='i' name='h'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTiledGrid3D'>
<method selector='originalTile:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
<method selector='setTile:coords:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<arg index='1' declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' name='coords'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tile:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
</class>
<class name='CCTiledGrid3DAction'>
<method selector='originalTile:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
<method selector='setTile:coords:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<arg index='1' declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' name='coords'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tile:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='pos'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
</class>
<class name='CCTimer'>
<method selector='interval'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='setInterval:'>
<arg index='0' declared_type='ccTime' type='f' name='interval'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='dt'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTimerBlock'>
<method selector='initWithTarget:interval:repeat:delay:key:block:'>
<arg index='0' declared_type='id' type='@' name='owner'/>
<arg index='1' declared_type='ccTime' type='f' name='seconds'/>
<arg index='2' declared_type='uint' type='I' name='r'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<arg index='4' declared_type='NSString*' type='@' name='key'/>
<arg index='5' declared_type='void (^)(ccTime)' type='@?' name='block' function_pointer='true'>
<arg declared_type='ccTime' type='f'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='target'>
<retval declared_type='id' type='@'/>
</method>
<method selector='timerWithTarget:interval:key:block:' class_method='true'>
<arg index='0' declared_type='id' type='@' name='owner'/>
<arg index='1' declared_type='ccTime' type='f' name='seconds'/>
<arg index='2' declared_type='NSString*' type='@' name='key'/>
<arg index='3' declared_type='void (^)(ccTime)' type='@?' name='block' function_pointer='true'>
<arg declared_type='ccTime' type='f'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTimerTargetSelector'>
<method selector='initWithTarget:selector:'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='SEL' type=':' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:interval:repeat:delay:'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='SEL' type=':' name='s'/>
<arg index='2' declared_type='ccTime' type='f' name='seconds'/>
<arg index='3' declared_type='uint' type='I' name='r'/>
<arg index='4' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='selector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='timerWithTarget:selector:' class_method='true'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='SEL' type=':' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='timerWithTarget:selector:interval:' class_method='true'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='SEL' type=':' name='s'/>
<arg index='2' declared_type='ccTime' type='f' name='seconds'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTintBy'>
<method selector='actionWithDuration:red:green:blue:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='GLshort' type='s' name='deltaRed'/>
<arg index='2' declared_type='GLshort' type='s' name='deltaGreen'/>
<arg index='3' declared_type='GLshort' type='s' name='deltaBlue'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='GLshort' type='s' name='deltaRed'/>
<arg index='2' declared_type='GLshort' type='s' name='deltaGreen'/>
<arg index='3' declared_type='GLshort' type='s' name='deltaBlue'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTintTo'>
<method selector='actionWithDuration:red:green:blue:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='GLubyte' type='C' name='red'/>
<arg index='2' declared_type='GLubyte' type='C' name='green'/>
<arg index='3' declared_type='GLubyte' type='C' name='blue'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='GLubyte' type='C' name='red'/>
<arg index='2' declared_type='GLubyte' type='C' name='green'/>
<arg index='3' declared_type='GLubyte' type='C' name='blue'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCToggleVisibility'>
<method selector='update:'>
<arg index='0' declared_type='ccTime' type='f' name='time'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionCrossFade'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionFade'>
<method selector='initWithDuration:scene:withColor:'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='CCScene*' type='@' name='scene'/>
<arg index='2' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:withColor:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='duration'/>
<arg index='1' declared_type='CCScene*' type='@' name='scene'/>
<arg index='2' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionFadeBL'>
<method selector='actionWithSize:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='vector'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCTransitionFadeDown'>
<method selector='actionWithSize:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='v'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCTransitionFadeTR'>
<method selector='actionWithSize:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='vector'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCTransitionFadeUp'>
<method selector='actionWithSize:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='v'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCTransitionFlipAngular'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionFlipX'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionFlipY'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionJumpZoom'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionMoveInB'>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionMoveInL'>
<method selector='action'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionMoveInR'>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionMoveInT'>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionPageTurn'>
<method selector='actionWithSize:'>
<arg index='0' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='vector'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='initWithDuration:scene:backwards:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='CCScene*' type='@' name='s'/>
<arg index='2' declared_type='BOOL' type='B' name='back'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:backwards:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='CCScene*' type='@' name='s'/>
<arg index='2' declared_type='BOOL' type='B' name='back'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionProgress'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' declared_type='CCRenderTexture*' type='@' name='texture'/>
<retval declared_type='CCProgressTimer*' type='@'/>
</method>
</class>
<class name='CCTransitionProgressHorizontal'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' declared_type='CCRenderTexture*' type='@' name='texture'/>
<retval declared_type='CCProgressTimer*' type='@'/>
</method>
</class>
<class name='CCTransitionProgressInOut'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' declared_type='CCRenderTexture*' type='@' name='texture'/>
<retval declared_type='CCProgressTimer*' type='@'/>
</method>
</class>
<class name='CCTransitionProgressOutIn'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' declared_type='CCRenderTexture*' type='@' name='texture'/>
<retval declared_type='CCProgressTimer*' type='@'/>
</method>
</class>
<class name='CCTransitionProgressRadialCCW'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' declared_type='CCRenderTexture*' type='@' name='texture'/>
<retval declared_type='CCProgressTimer*' type='@'/>
</method>
</class>
<class name='CCTransitionProgressRadialCW'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' declared_type='CCRenderTexture*' type='@' name='texture'/>
<retval declared_type='CCProgressTimer*' type='@'/>
</method>
</class>
<class name='CCTransitionProgressVertical'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' declared_type='CCRenderTexture*' type='@' name='texture'/>
<retval declared_type='CCProgressTimer*' type='@'/>
</method>
</class>
<class name='CCTransitionRotoZoom'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionScene'>
<method selector='finish'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hideOutShowIn'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithDuration:scene:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='CCScene*' type='@' name='s'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='CCScene*' type='@' name='s'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionSceneOriented'>
<method selector='initWithDuration:scene:orientation:'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='CCScene*' type='@' name='s'/>
<arg index='2' declared_type='tOrientation' type='i' name='o'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:orientation:' class_method='true'>
<arg index='0' declared_type='ccTime' type='f' name='t'/>
<arg index='1' declared_type='CCScene*' type='@' name='s'/>
<arg index='2' declared_type='tOrientation' type='i' name='o'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionShrinkGrow'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionSlideInB'>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionSlideInL'>
<method selector='action'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionSlideInR'>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionSlideInT'>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionSplitCols'>
<method selector='action'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCTransitionSplitRows'>
<method selector='action'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCTransitionTurnOffTiles'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionZoomFlipAngular'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionZoomFlipX'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionZoomFlipY'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTurnOffTiles'>
<method selector='actionWithSeed:grid:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='s'/>
<arg index='1' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='2' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg index='0' declared_type='int' type='i' name='s'/>
<arg index='1' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='2' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTwirl'>
<method selector='actionWithPosition:twirls:amplitude:grid:duration:' class_method='true'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<arg index='1' declared_type='int' type='i' name='t'/>
<arg index='2' declared_type='float' type='f' name='amp'/>
<arg index='3' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='4' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithPosition:twirls:amplitude:grid:duration:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='pos'/>
<arg index='1' declared_type='int' type='i' name='t'/>
<arg index='2' declared_type='float' type='f' name='amp'/>
<arg index='3' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='4' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' declared_type='float' type='f' name='amplitude'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' declared_type='float' type='f' name='amplitudeRate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg index='0' declared_type='CGPoint' type='{CGPoint=ff}' name='position'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCWaves'>
<method selector='actionWithWaves:amplitude:horizontal:vertical:grid:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='wav'/>
<arg index='1' declared_type='float' type='f' name='amp'/>
<arg index='2' declared_type='BOOL' type='B' name='h'/>
<arg index='3' declared_type='BOOL' type='B' name='v'/>
<arg index='4' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='5' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:horizontal:vertical:grid:duration:'>
<arg index='0' declared_type='int' type='i' name='wav'/>
<arg index='1' declared_type='float' type='f' name='amp'/>
<arg index='2' declared_type='BOOL' type='B' name='h'/>
<arg index='3' declared_type='BOOL' type='B' name='v'/>
<arg index='4' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='5' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' declared_type='float' type='f' name='amplitude'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' declared_type='float' type='f' name='amplitudeRate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCWaves3D'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='wav'/>
<arg index='1' declared_type='float' type='f' name='amp'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg index='0' declared_type='int' type='i' name='wav'/>
<arg index='1' declared_type='float' type='f' name='amp'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' declared_type='float' type='f' name='amplitude'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' declared_type='float' type='f' name='amplitudeRate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCWavesTiles3D'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg index='0' declared_type='int' type='i' name='wav'/>
<arg index='1' declared_type='float' type='f' name='amp'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg index='0' declared_type='int' type='i' name='wav'/>
<arg index='1' declared_type='float' type='f' name='amp'/>
<arg index='2' declared_type='ccGridSize' type='{_ccGridSize=ii}' name='gridSize'/>
<arg index='3' declared_type='ccTime' type='f' name='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' declared_type='float' type='f' name='amplitude'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' declared_type='float' type='f' name='amplitudeRate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='easeActionWithAction:'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' name='blendFunc'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCString:'>
<arg index='0' declared_type='char*' type='*' name='label'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg index='0' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg index='0' declared_type='GLubyte' type='C' name='opacity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg index='0' declared_type='BOOL' type='B' name='boolean'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg index='0' declared_type='NSString*' type='@' name='label'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='updateProjection'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSThread'>
<method selector='performBlock:'>
<arg index='0' declared_type='void (^)(void)' type='@?' name='block' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='performBlock:waitUntilDone:'>
<arg index='0' declared_type='void (^)(void)' type='@?' name='block' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' declared_type='BOOL' type='B' name='wait'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performBlock:withObject:waitUntilDone:'>
<arg index='0' declared_type='void (^)(id)' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' declared_type='id' type='@' name='object'/>
<arg index='2' declared_type='BOOL' type='B' name='wait'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='CCBlendProtocol'>
<method selector='blendFunc' type='{_ccBlendFunc=II}8@0:4'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='setBlendFunc:' type='v16@0:4{_ccBlendFunc=II}8'>
<arg index='0' declared_type='ccBlendFunc' type='{_ccBlendFunc=II}' name='blendFunc'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CCDirectorDelegate'>
<method selector='updateProjection' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CCLabelProtocol'>
<method selector='setCString:' type='v12@0:4*8'>
<arg index='0' declared_type='char*' type='*' name='label'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:' type='v12@0:4@8'>
<arg index='0' declared_type='NSString*' type='@' name='label'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CCRGBAProtocol'>
<method selector='color' type='{_ccColor3B=CCC}8@0:4'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='doesOpacityModifyRGB' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='opacity' type='C8@0:4'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='setColor:' type='v11@0:4{_ccColor3B=CCC}8'>
<arg index='0' declared_type='ccColor3B' type='{_ccColor3B=CCC}' name='color'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:' type='v12@0:4C8'>
<arg index='0' declared_type='GLubyte' type='C' name='opacity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacityModifyRGB:' type='v12@0:4B8'>
<arg index='0' declared_type='BOOL' type='B' name='boolean'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CCTextureProtocol'>
<method selector='setTexture:' type='v12@0:4@8'>
<arg index='0' declared_type='CCTexture2D*' type='@' name='texture'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='texture' type='@8@0:4'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CCTransitionEaseScene'>
<method selector='easeActionWithAction:' type='@12@0:4@8'>
<arg index='0' declared_type='CCActionInterval*' type='@' name='action'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</informal_protocol>
</signatures>
