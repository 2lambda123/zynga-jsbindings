<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='CCPVRMipmap' type='{CCPVRMipmap=&quot;address&quot;*&quot;len&quot;I}'>
<field name='address' type='*' declared_type='unsigned char*'/>
<field name='len' type='I' declared_type='unsigned int'/>
</struct>
<struct name='ccBMFontDef' type='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}' type64='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}'>
<field name='charID' type='S' declared_type='unichar'/>
<field name='rect' type='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}' type64='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}' declared_type='CGRect'/>
<field name='xOffset' type='s' declared_type='short'/>
<field name='yOffset' type='s' declared_type='short'/>
<field name='xAdvance' type='s' declared_type='short'/>
</struct>
<struct name='ccBMFontPadding' type='{_BMFontPadding=&quot;left&quot;i&quot;top&quot;i&quot;right&quot;i&quot;bottom&quot;i}'>
<field name='left' type='i' declared_type='int'/>
<field name='top' type='i' declared_type='int'/>
<field name='right' type='i' declared_type='int'/>
<field name='bottom' type='i' declared_type='int'/>
</struct>
<struct name='ccBezierConfig' type='{_ccBezierConfig=&quot;endPosition&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_1&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_2&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}}' type64='{_ccBezierConfig=&quot;endPosition&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;controlPoint_1&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;controlPoint_2&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}}'>
<field name='endPosition' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='controlPoint_1' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='controlPoint_2' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
</struct>
<struct name='ccBlendFunc' type='{_ccBlendFunc=&quot;src&quot;I&quot;dst&quot;I}'>
<field name='src' type='I' declared_type='GLenum'/>
<field name='dst' type='I' declared_type='GLenum'/>
</struct>
<struct name='ccColor3B' type='{_ccColor3B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C}'>
<field name='r' type='C' declared_type='GLubyte'/>
<field name='g' type='C' declared_type='GLubyte'/>
<field name='b' type='C' declared_type='GLubyte'/>
</struct>
<struct name='ccColor4B' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}'>
<field name='r' type='C' declared_type='GLubyte'/>
<field name='g' type='C' declared_type='GLubyte'/>
<field name='b' type='C' declared_type='GLubyte'/>
<field name='a' type='C' declared_type='GLubyte'/>
</struct>
<struct name='ccColor4F' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'>
<field name='r' type='f' declared_type='GLfloat'/>
<field name='g' type='f' declared_type='GLfloat'/>
<field name='b' type='f' declared_type='GLfloat'/>
<field name='a' type='f' declared_type='GLfloat'/>
</struct>
<struct name='ccGridSize' type='{_ccGridSize=&quot;x&quot;i&quot;y&quot;i}' type64='{_ccGridSize=&quot;x&quot;q&quot;y&quot;q}'>
<field name='x' type='i' type64='q' declared_type='NSInteger'/>
<field name='y' type='i' type64='q' declared_type='NSInteger'/>
</struct>
<struct name='ccPVRTexturePixelFormatInfo' type='{_ccPVRTexturePixelFormatInfo=&quot;internalFormat&quot;I&quot;format&quot;I&quot;type&quot;I&quot;bpp&quot;I&quot;compressed&quot;B&quot;alpha&quot;B&quot;ccPixelFormat&quot;i}'>
<field name='internalFormat' type='I' declared_type='GLenum'/>
<field name='format' type='I' declared_type='GLenum'/>
<field name='type' type='I' declared_type='GLenum'/>
<field name='bpp' type='I' declared_type='uint32_t'/>
<field name='compressed' type='B' declared_type='BOOL'/>
<field name='alpha' type='B' declared_type='BOOL'/>
<field name='ccPixelFormat' type='i' declared_type='CCTexture2DPixelFormat'/>
</struct>
<struct name='ccPointSprite' type='{_ccPointSprite=&quot;pos&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;size&quot;f}'>
<field name='pos' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='color' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' declared_type='ccColor4B'/>
<field name='size' type='f' declared_type='GLfloat'/>
</struct>
<struct name='ccQuad2' type='{_ccQuad2=&quot;tl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;tr&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;bl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;br&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}}'>
<field name='tl' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='tr' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='bl' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='br' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
</struct>
<struct name='ccQuad3' type='{_ccQuad3=&quot;bl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;br&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tr&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}'>
<field name='bl' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
<field name='br' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
<field name='tl' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
<field name='tr' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
</struct>
<struct name='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'>
<field name='u' type='f' declared_type='GLfloat'/>
<field name='v' type='f' declared_type='GLfloat'/>
</struct>
<struct name='ccTexParams' type='{_ccTexParams=&quot;minFilter&quot;I&quot;magFilter&quot;I&quot;wrapS&quot;I&quot;wrapT&quot;I}'>
<field name='minFilter' type='I' declared_type='GLuint'/>
<field name='magFilter' type='I' declared_type='GLuint'/>
<field name='wrapS' type='I' declared_type='GLuint'/>
<field name='wrapT' type='I' declared_type='GLuint'/>
</struct>
<struct name='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='colors' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' declared_type='ccColor4B'/>
<field name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F'/>
</struct>
<struct name='ccV2F_C4B_T2F_Quad' type='{_ccV2F_C4B_T2F_Quad=&quot;bl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='bl' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F'/>
<field name='br' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F'/>
<field name='tl' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F'/>
<field name='tr' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F'/>
</struct>
<struct name='ccV2F_C4B_T2F_Triangle' type='{_ccV2F_C4B_T2F_Triangle=&quot;a&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;b&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;c&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='a' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F'/>
<field name='b' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F'/>
<field name='c' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F'/>
</struct>
<struct name='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='colors' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F'/>
</struct>
<struct name='ccV2F_C4F_T2F_Quad' type='{_ccV2F_C4F_T2F_Quad=&quot;bl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='bl' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F'/>
<field name='br' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F'/>
<field name='tl' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F'/>
<field name='tr' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F'/>
</struct>
<struct name='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
<field name='colors' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' declared_type='ccColor4B'/>
<field name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F'/>
</struct>
<struct name='ccV3F_C4B_T2F_Quad' type='{_ccV3F_C4B_T2F_Quad=&quot;tl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='tl' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F'/>
<field name='bl' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F'/>
<field name='tr' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F'/>
<field name='br' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F'/>
</struct>
<struct name='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
<field name='colors' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F'/>
</struct>
<struct name='ccV3F_C4F_T2F_Quad' type='{_ccV3F_C4F_T2F_Quad=&quot;tl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='tl' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F'/>
<field name='bl' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F'/>
<field name='tr' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F'/>
<field name='br' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F'/>
</struct>
<struct name='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'>
<field name='x' type='f' declared_type='GLfloat'/>
<field name='y' type='f' declared_type='GLfloat'/>
</struct>
<struct name='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field name='x' type='f' declared_type='GLfloat'/>
<field name='y' type='f' declared_type='GLfloat'/>
<field name='z' type='f' declared_type='GLfloat'/>
</struct>
<struct name='sCCParticle' type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' type64='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;startPos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;color&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;Q&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}'>
<field name='pos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='startPos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='color' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='deltaColor' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='size' type='f' declared_type='float'/>
<field name='deltaSize' type='f' declared_type='float'/>
<field name='rotation' type='f' declared_type='float'/>
<field name='deltaRotation' type='f' declared_type='float'/>
<field name='timeToLive' type='f' declared_type='ccTime'/>
<field name='atlasIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<field name='mode' type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' type64='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' declared_type='union sCCParticle::'/>
</struct>
<struct name='tCCFontDefHashElement' type='{_FontDefHashElement=&quot;key&quot;I&quot;fontDef&quot;{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}}' type64='{_FontDefHashElement=&quot;key&quot;Q&quot;fontDef&quot;{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}}'>
<field name='key' type='I' type64='Q' declared_type='NSUInteger'/>
<field name='fontDef' type='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}' type64='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}' declared_type='ccBMFontDef'/>
<field name='hh' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' declared_type='UT_hash_handle'/>
</struct>
<struct name='tCCKerningHashElement' type='{_KerningHashElement=&quot;key&quot;i&quot;amount&quot;i&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}}'>
<field name='key' type='i' declared_type='int'/>
<field name='amount' type='i' declared_type='int'/>
<field name='hh' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' declared_type='UT_hash_handle'/>
</struct>
<struct name='tCCParticle' type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' type64='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;startPos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;color&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;Q&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}'>
<field name='pos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='startPos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='color' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='deltaColor' type='{_ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='size' type='f' declared_type='float'/>
<field name='deltaSize' type='f' declared_type='float'/>
<field name='rotation' type='f' declared_type='float'/>
<field name='deltaRotation' type='f' declared_type='float'/>
<field name='timeToLive' type='f' declared_type='ccTime'/>
<field name='atlasIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<field name='mode' type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' type64='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' declared_type='union sCCParticle::'/>
</struct>
<struct name='tHashElement' type='{_hashElement=&quot;actions&quot;^{ccArray}&quot;actionIndex&quot;I&quot;currentActionSalvaged&quot;B&quot;paused&quot;B&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}&quot;target&quot;@&quot;currentAction&quot;@&quot;CCAction&quot;}' type64='{_hashElement=&quot;actions&quot;^{ccArray}&quot;actionIndex&quot;Q&quot;currentActionSalvaged&quot;B&quot;paused&quot;B&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}&quot;target&quot;@&quot;currentAction&quot;@&quot;CCAction&quot;}'>
<field name='actions' type='^{ccArray=II^@}' type64='^{ccArray=QQ^@}' declared_type='struct ccArray*'/>
<field name='actionIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<field name='currentActionSalvaged' type='B' declared_type='BOOL'/>
<field name='paused' type='B' declared_type='BOOL'/>
<field name='hh' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' declared_type='UT_hash_handle'/>
<field name='target' type='@' declared_type='id'/>
<field name='currentAction' type='@&quot;CCAction&quot;' declared_type='CCAction*'/>
</struct>
<constant name='ccBLACK' type='{_ccColor3B=CCC}' declared_type='ccColor3B' const='true'/>
<constant name='ccBLUE' type='{_ccColor3B=CCC}' declared_type='ccColor3B' const='true'/>
<constant name='ccGRAY' type='{_ccColor3B=CCC}' declared_type='ccColor3B' const='true'/>
<constant name='ccGREEN' type='{_ccColor3B=CCC}' declared_type='ccColor3B' const='true'/>
<constant name='ccMAGENTA' type='{_ccColor3B=CCC}' declared_type='ccColor3B' const='true'/>
<constant name='ccORANGE' type='{_ccColor3B=CCC}' declared_type='ccColor3B' const='true'/>
<constant name='ccPositionColorLengthTexture_frag' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionColorLengthTexture_vert' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionColor_frag' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionColor_vert' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionTextureA8Color_frag' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionTextureA8Color_vert' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionTextureColorAlphaTest_frag' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionTextureColor_frag' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionTextureColor_vert' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionTexture_frag' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionTexture_uColor_frag' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionTexture_uColor_vert' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPositionTexture_vert' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPosition_uColor_frag' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccPosition_uColor_vert' type='*' declared_type='GLchar*' const='true'/>
<constant name='ccRED' type='{_ccColor3B=CCC}' declared_type='ccColor3B' const='true'/>
<constant name='ccWHITE' type='{_ccColor3B=CCC}' declared_type='ccColor3B' const='true'/>
<constant name='ccYELLOW' type='{_ccColor3B=CCC}' declared_type='ccColor3B' const='true'/>
<constant name='kCCBlendFuncDisable' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc' const='true'/>
<string_constant name='CCAnimationFrameDisplayedNotification' value='CCAnimationFrameDisplayedNotification' nsstring='true'/>
<string_constant name='kCCAttributeNameColor' value='a_color' nsstring='true'/>
<string_constant name='kCCAttributeNamePosition' value='a_position' nsstring='true'/>
<string_constant name='kCCAttributeNameTexCoord' value='a_texCoord' nsstring='true'/>
<string_constant name='kCCShader_PositionColor' value='ShaderPositionColor' nsstring='true'/>
<string_constant name='kCCShader_PositionLengthTexureColor' value='ShaderPositionLengthTextureColor' nsstring='true'/>
<string_constant name='kCCShader_PositionTexture' value='ShaderPositionTexture' nsstring='true'/>
<string_constant name='kCCShader_PositionTextureA8Color' value='ShaderPositionTextureA8Color' nsstring='true'/>
<string_constant name='kCCShader_PositionTextureColor' value='ShaderPositionTextureColor' nsstring='true'/>
<string_constant name='kCCShader_PositionTextureColorAlphaTest' value='ShaderPositionTextureColorAlphaTest' nsstring='true'/>
<string_constant name='kCCShader_PositionTexture_uColor' value='ShaderPositionTexture_uColor' nsstring='true'/>
<string_constant name='kCCShader_Position_uColor' value='ShaderPosition_uColor' nsstring='true'/>
<string_constant name='kCCUniformAlphaTestValue' value='CC_alpha_value'/>
<string_constant name='kCCUniformCosTime_s' value='CC_CosTime'/>
<string_constant name='kCCUniformMVMatrix_s' value='CC_MVMatrix'/>
<string_constant name='kCCUniformMVPMatrix_s' value='CC_MVPMatrix'/>
<string_constant name='kCCUniformPMatrix_s' value='CC_PMatrix'/>
<string_constant name='kCCUniformRandom01_s' value='CC_Random01'/>
<string_constant name='kCCUniformSampler_s' value='CC_Texture0'/>
<string_constant name='kCCUniformSinTime_s' value='CC_SinTime'/>
<string_constant name='kCCUniformTime_s' value='CC_Time'/>
<enum name='CCSpriteIndexNotInitialized' value='4294967295'/>
<enum name='CCTMXOrientationHex' value='1'/>
<enum name='CCTMXOrientationIso' value='2'/>
<enum name='CCTMXOrientationOrtho' value='0'/>
<enum name='CC_BLEND_DST' value='771'/>
<enum name='CC_BLEND_SRC' value='1'/>
<enum name='CC_DIRECTOR_IOS_USE_BACKGROUND_THREAD' value='0'/>
<enum name='CC_DIRECTOR_MAC_THREAD' value='0'/>
<enum name='CC_DIRECTOR_STATS_INTERVAL' value='0.1f'/>
<enum name='CC_ENABLE_BOX2D_INTEGRATION' value='0'/>
<enum name='CC_ENABLE_CHIPMUNK_INTEGRATION' value='0'/>
<enum name='CC_ENABLE_DEPRECATED' value='1'/>
<enum name='CC_ENABLE_GL_STATE_CACHE' value='0'/>
<enum name='CC_ENABLE_PROFILERS' value='0'/>
<enum name='CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL' value='0'/>
<enum name='CC_GL_ALL' value='0'/>
<enum name='CC_LABELATLAS_DEBUG_DRAW' value='0'/>
<enum name='CC_LABELBMFONT_DEBUG_DRAW' value='0'/>
<enum name='CC_MAC_USE_DISPLAY_LINK_THREAD' value='0'/>
<enum name='CC_MAC_USE_MAIN_THREAD' value='2'/>
<enum name='CC_MAC_USE_OWN_THREAD' value='1'/>
<enum name='CC_NODE_RENDER_SUBPIXEL' value='1'/>
<enum name='CC_PVRMIPMAP_MAX' value='16'/>
<enum name='CC_SPRITEBATCHNODE_RENDER_SUBPIXEL' value='1'/>
<enum name='CC_SPRITE_DEBUG_DRAW' value='0'/>
<enum name='CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP' value='0'/>
<enum name='CC_TEXTURE_ATLAS_USE_VAO' value='1'/>
<enum name='CC_USE_LA88_LABELS' value='1'/>
<enum name='COCOS2D_VERSION' value='131328'/>
<enum name='TMXLayerAttribBase64' value='2'/>
<enum name='TMXLayerAttribGzip' value='4'/>
<enum name='TMXLayerAttribNone' value='1'/>
<enum name='TMXLayerAttribZlib' value='8'/>
<enum name='TMXPropertyLayer' value='2'/>
<enum name='TMXPropertyMap' value='1'/>
<enum name='TMXPropertyNone' value='0'/>
<enum name='TMXPropertyObject' value='4'/>
<enum name='TMXPropertyObjectGroup' value='3'/>
<enum name='TMXPropertyTile' value='5'/>
<enum name='kCCActionTagInvalid' value='-1'/>
<enum name='kCCDirectorProjection2D' value='0'/>
<enum name='kCCDirectorProjection3D' value='1'/>
<enum name='kCCDirectorProjectionCustom' value='2'/>
<enum name='kCCDirectorProjectionDefault' value='1'/>
<enum name='kCCDirectorResize_AutoScale' value='1'/>
<enum name='kCCDirectorResize_NoScale' value='0'/>
<enum name='kCCFlipedAll' value='3758096384'/>
<enum name='kCCFlippedMask' value='536870911'/>
<enum name='kCCImageFormatJPEG' value='0'/>
<enum name='kCCImageFormatPNG' value='1'/>
<enum name='kCCItemSize' value='32'/>
<enum name='kCCLabelAutomaticWidth' value='-1'/>
<enum name='kCCLineBreakModeCharacterWrap' value='1'/>
<enum name='kCCLineBreakModeClip' value='2'/>
<enum name='kCCLineBreakModeHeadTruncation' value='3'/>
<enum name='kCCLineBreakModeMiddleTruncation' value='5'/>
<enum name='kCCLineBreakModeTailTruncation' value='4'/>
<enum name='kCCLineBreakModeWordWrap' value='0'/>
<enum name='kCCMacVersion_10_6' value='168165376'/>
<enum name='kCCMacVersion_10_7' value='168230912'/>
<enum name='kCCMacVersion_10_8' value='168296448'/>
<enum name='kCCMenuHandlerPriority' value='-128'/>
<enum name='kCCMenuStateTrackingTouch' value='1'/>
<enum name='kCCMenuStateWaiting' value='0'/>
<enum name='kCCNodeTagInvalid' value='-1'/>
<enum name='kCCParticleDurationInfinity' value='-1'/>
<enum name='kCCParticleModeGravity' value='0'/>
<enum name='kCCParticleModeRadius' value='1'/>
<enum name='kCCParticleStartRadiusEqualToEndRadius' value='-1'/>
<enum name='kCCParticleStartSizeEqualToEndSize' value='-1'/>
<enum name='kCCPositionTypeFree' value='0'/>
<enum name='kCCPositionTypeGrouped' value='2'/>
<enum name='kCCPositionTypeRelative' value='1'/>
<enum name='kCCPriorityNonSystemMin' value='-2147483647'/>
<enum name='kCCPrioritySystem' value='-2147483648'/>
<enum name='kCCProgressTimerTypeBar' value='1'/>
<enum name='kCCProgressTimerTypeRadial' value='0'/>
<enum name='kCCRepeatForever' value='4294967294'/>
<enum name='kCCResolutionMac' value='1'/>
<enum name='kCCResolutionMacRetinaDisplay' value='2'/>
<enum name='kCCResolutionUnknown' value='0'/>
<enum name='kCCTMXTileDiagonalFlag' value='536870912'/>
<enum name='kCCTMXTileHorizontalFlag' value='2147483648'/>
<enum name='kCCTMXTileVerticalFlag' value='1073741824'/>
<enum name='kCCTextAlignmentCenter' value='1'/>
<enum name='kCCTextAlignmentLeft' value='0'/>
<enum name='kCCTextAlignmentRight' value='2'/>
<enum name='kCCTexture2DPixelFormat_A8' value='3'/>
<enum name='kCCTexture2DPixelFormat_AI88' value='5'/>
<enum name='kCCTexture2DPixelFormat_Default' value='0'/>
<enum name='kCCTexture2DPixelFormat_I8' value='4'/>
<enum name='kCCTexture2DPixelFormat_PVRTC2' value='9'/>
<enum name='kCCTexture2DPixelFormat_PVRTC4' value='8'/>
<enum name='kCCTexture2DPixelFormat_RGB565' value='2'/>
<enum name='kCCTexture2DPixelFormat_RGB5A1' value='7'/>
<enum name='kCCTexture2DPixelFormat_RGB888' value='1'/>
<enum name='kCCTexture2DPixelFormat_RGBA4444' value='6'/>
<enum name='kCCTexture2DPixelFormat_RGBA8888' value='0'/>
<enum name='kCCTouchesAllAtOnce' value='0'/>
<enum name='kCCTouchesOneByOne' value='1'/>
<enum name='kCCTransitionOrientationDownOver' value='1'/>
<enum name='kCCTransitionOrientationLeftOver' value='0'/>
<enum name='kCCTransitionOrientationRightOver' value='1'/>
<enum name='kCCTransitionOrientationUpOver' value='0'/>
<enum name='kCCUniformCosTime' value='5'/>
<enum name='kCCUniformMVMatrix' value='1'/>
<enum name='kCCUniformMVPMatrix' value='2'/>
<enum name='kCCUniformPMatrix' value='0'/>
<enum name='kCCUniformRandom01' value='6'/>
<enum name='kCCUniformSampler' value='7'/>
<enum name='kCCUniformSinTime' value='4'/>
<enum name='kCCUniformTime' value='3'/>
<enum name='kCCUniform_MAX' value='8'/>
<enum name='kCCVertexAttribFlag_Color' value='2'/>
<enum name='kCCVertexAttribFlag_None' value='0'/>
<enum name='kCCVertexAttribFlag_PosColorTex' value='7'/>
<enum name='kCCVertexAttribFlag_Position' value='1'/>
<enum name='kCCVertexAttribFlag_TexCoords' value='4'/>
<enum name='kCCVertexAttrib_Color' value='1'/>
<enum name='kCCVertexAttrib_MAX' value='3'/>
<enum name='kCCVertexAttrib_Position' value='0'/>
<enum name='kCCVertexAttrib_TexCoords' value='2'/>
<enum name='kCCVerticalTextAlignmentBottom' value='2'/>
<enum name='kCCVerticalTextAlignmentCenter' value='1'/>
<enum name='kCCVerticalTextAlignmentTop' value='0'/>
<enum name='kCCiOSVersion_4_0' value='67108864'/>
<enum name='kCCiOSVersion_4_0_1' value='67109120'/>
<enum name='kCCiOSVersion_4_1' value='67174400'/>
<enum name='kCCiOSVersion_4_2' value='67239936'/>
<enum name='kCCiOSVersion_4_2_1' value='67240192'/>
<enum name='kCCiOSVersion_4_3' value='67305472'/>
<enum name='kCCiOSVersion_4_3_1' value='67305728'/>
<enum name='kCCiOSVersion_4_3_2' value='67305984'/>
<enum name='kCCiOSVersion_4_3_3' value='67306240'/>
<enum name='kCCiOSVersion_4_3_4' value='67306496'/>
<enum name='kCCiOSVersion_4_3_5' value='67306752'/>
<enum name='kCCiOSVersion_5_0' value='83886080'/>
<enum name='kCCiOSVersion_5_0_1' value='83886336'/>
<enum name='kCCiOSVersion_5_1_0' value='83951616'/>
<enum name='kCCiOSVersion_6_0_0' value='100663296'/>
<enum name='kParticleDurationInfinity' value='-1'/>
<enum name='kParticleStartSizeEqualToEndSize' value='-1'/>
<enum name='kPositionTypeFree' value='0'/>
<enum name='kPositionTypeGrouped' value='2'/>
<function name='FNTConfigLoadFile'>
<arg name='file' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CCBMFontConfiguration*'/>
</function>
<function name='FNTConfigRemoveCache'>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCardinalSplineAt'>
<arg name='p0' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='p1' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='p2' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='p3' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='tension' type='f' type64='d' declared_type='CGFloat'/>
<arg name='t' type='f' declared_type='ccTime'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</function>
<function name='ccDrawCardinalSpline'>
<arg name='config' type='@' declared_type='CCPointArray*'/>
<arg name='tension' type='f' type64='d' declared_type='CGFloat'/>
<arg name='segments' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCatmullRom'>
<arg name='arrayOfControlPoints' type='@' declared_type='CCPointArray*'/>
<arg name='segments' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCircle'>
<arg name='center' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='radius' type='f' declared_type='float'/>
<arg name='angle' type='f' declared_type='float'/>
<arg name='segments' type='I' type64='Q' declared_type='NSUInteger'/>
<arg name='drawLineToCenter' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawColor4B'>
<arg name='r' type='C' declared_type='GLubyte'/>
<arg name='g' type='C' declared_type='GLubyte'/>
<arg name='b' type='C' declared_type='GLubyte'/>
<arg name='a' type='C' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawColor4F'>
<arg name='r' type='f' declared_type='GLfloat'/>
<arg name='g' type='f' declared_type='GLfloat'/>
<arg name='b' type='f' declared_type='GLfloat'/>
<arg name='a' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCubicBezier'>
<arg name='origin' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='control1' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='control2' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='destination' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='segments' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawLine'>
<arg name='origin' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='destination' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoint'>
<arg name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoints'>
<arg name='points' type='^{CGPoint=ff}' type64='^{CGPoint=dd}' declared_type='CGPoint*' const='true'/>
<arg name='numberOfPoints' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoly'>
<arg name='vertices' type='^{CGPoint=ff}' type64='^{CGPoint=dd}' declared_type='CGPoint*' const='true'/>
<arg name='numOfVertices' type='I' type64='Q' declared_type='NSUInteger'/>
<arg name='closePolygon' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawQuadBezier'>
<arg name='origin' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='control' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='destination' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='segments' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawRect'>
<arg name='origin' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='destination' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawSolidPoly'>
<arg name='poli' type='^{CGPoint=ff}' type64='^{CGPoint=dd}' declared_type='CGPoint*' const='true'/>
<arg name='numberOfPoints' type='I' type64='Q' declared_type='NSUInteger'/>
<arg name='color' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawSolidRect'>
<arg name='origin' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='destination' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='color' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLBindTexture2D'>
<arg name='textureId' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLBindTexture2DN'>
<arg name='textureUnit' type='I' declared_type='GLuint'/>
<arg name='textureId' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLBindVAO'>
<arg name='vaoId' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLBlendFunc'>
<arg name='sfactor' type='I' declared_type='GLenum'/>
<arg name='dfactor' type='I' declared_type='GLenum'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLBlendResetToCache'>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLDeleteProgram'>
<arg name='program' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLDeleteTexture'>
<arg name='textureId' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLDeleteTextureN'>
<arg name='textureUnit' type='I' declared_type='GLuint'/>
<arg name='textureId' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLEnable'>
<arg name='flags' type='i' declared_type='ccGLServerState'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLEnableVertexAttribs'>
<arg name='flags' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLInvalidateStateCache'>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLUseProgram'>
<arg name='program' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccPointSize'>
<arg name='pointSize' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccSetProjectionMatrixDirty'>
<retval type='v' declared_type='void'/>
</function>
<function name='ccc3' inline='true'>
<arg name='r' type='C' declared_type='GLubyte' const='true'/>
<arg name='g' type='C' declared_type='GLubyte' const='true'/>
<arg name='b' type='C' declared_type='GLubyte' const='true'/>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</function>
<function name='ccc4' inline='true'>
<arg name='r' type='C' declared_type='GLubyte' const='true'/>
<arg name='g' type='C' declared_type='GLubyte' const='true'/>
<arg name='b' type='C' declared_type='GLubyte' const='true'/>
<arg name='o' type='C' declared_type='GLubyte' const='true'/>
<retval type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
</function>
<function name='ccc4BFromccc4F' inline='true'>
<arg name='c' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
</function>
<function name='ccc4FEqual' inline='true'>
<arg name='a' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<arg name='b' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccc4FFromccc3B' inline='true'>
<arg name='c' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function name='ccc4FFromccc4B' inline='true'>
<arg name='c' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<retval type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function name='ccc4f' inline='true'>
<arg name='r' type='f' declared_type='GLfloat' const='true'/>
<arg name='g' type='f' declared_type='GLfloat' const='true'/>
<arg name='b' type='f' declared_type='GLfloat' const='true'/>
<arg name='a' type='f' declared_type='GLfloat' const='true'/>
<retval type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function name='ccg' inline='true'>
<arg name='x' type='i' type64='q' declared_type='NSInteger' const='true'/>
<arg name='y' type='i' type64='q' declared_type='NSInteger' const='true'/>
<retval type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
</function>
<function name='cocos2dVersion'>
<retval type='@' declared_type='NSString*'/>
</function>
<function_alias name='CCNSPointToCGPoint' original='NSPointToCGPoint'/>
<function_alias name='CCNSRectToCGRect' original='NSRectToCGRect'/>
<function_alias name='CCNSSizeToCGSize' original='NSSizeToCGSize'/>
<function_alias name='glBindVertexArray' original='glBindVertexArrayAPPLE'/>
<function_alias name='glDeleteVertexArrays' original='glDeleteVertexArraysAPPLE'/>
<function_alias name='glGenVertexArrays' original='glGenVertexArraysAPPLE'/>
<class name='CCAccelAmplitude'>
<method class_method='true' selector='actionWithAction:duration:'>
<arg index='0' name='action' type='@' declared_type='CCAction*'/>
<arg index='1' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg index='0' name='action' type='@' declared_type='CCAction*'/>
<arg index='1' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg index='0' name='rate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAccelDeccelAmplitude'>
<method class_method='true' selector='actionWithAction:duration:'>
<arg index='0' name='action' type='@' declared_type='CCAction*'/>
<arg index='1' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg index='0' name='action' type='@' declared_type='CCAction*'/>
<arg index='1' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg index='0' name='rate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAction'>
<method class_method='true' selector='action'>
<retval type='@' declared_type='id'/>
</method>
<method selector='copyWithZone:'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDone'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='originalTarget'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setTag:'>
<arg index='0' name='tag' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startWithTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='step:'>
<arg index='0' name='dt' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='update:'>
<arg index='0' name='time' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCActionCamera'>
<method selector='startWithTarget:'>
<arg index='0' name='aTarget' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCActionEase'>
<method class_method='true' selector='actionWithAction:'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCActionInstant'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCActionInterval'>
<method class_method='true' selector='actionWithDuration:'>
<arg index='0' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='elapsed'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='initWithDuration:'>
<arg index='0' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDone'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCActionManager'>
<method selector='addAction:target:paused:'>
<arg index='0' name='action' type='@' declared_type='CCAction*'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<arg index='2' name='paused' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getActionByTag:target:'>
<arg index='0' name='tag' type='i' type64='q' declared_type='NSInteger'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='numberOfRunningActionsInTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='pauseAllRunningActions'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAction:'>
<arg index='0' name='action' type='@' declared_type='CCAction*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeActionByTag:target:'>
<arg index='0' name='tag' type='i' type64='q' declared_type='NSInteger'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActionsFromTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTargets:'>
<arg index='0' name='targetsToResume' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCActionTween'>
<method class_method='true' selector='actionWithDuration:key:from:to:'>
<arg index='0' name='aDuration' type='f' declared_type='ccTime'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<arg index='2' name='from' type='f' declared_type='float'/>
<arg index='3' name='to' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:key:from:to:'>
<arg index='0' name='aDuration' type='f' declared_type='ccTime'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<arg index='2' name='from' type='f' declared_type='float'/>
<arg index='3' name='to' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCAnimate'>
<method class_method='true' selector='actionWithAnimation:'>
<arg index='0' name='animation' type='@' declared_type='CCAnimation*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='animation'>
<retval type='@' declared_type='CCAnimation*'/>
</method>
<method selector='initWithAnimation:'>
<arg index='0' name='animation' type='@' declared_type='CCAnimation*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAnimation:'>
<arg index='0' name='animation' type='@' declared_type='CCAnimation*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAnimation'>
<method selector='addSpriteFrame:'>
<arg index='0' name='frame' type='@' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFrameWithFilename:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFrameWithTexture:rect:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='animation'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='animationWithAnimationFrames:delayPerUnit:loops:'>
<arg index='0' name='arrayOfAnimationFrames' type='@' declared_type='NSArray*'/>
<arg index='1' name='delayPerUnit' type='f' declared_type='float'/>
<arg index='2' name='loops' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='animationWithSpriteFrames:'>
<arg index='0' name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='animationWithSpriteFrames:delay:'>
<arg index='0' name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*'/>
<arg index='1' name='delay' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='delayPerUnit'>
<retval type='f' declared_type='float'/>
</method>
<method selector='duration'>
<retval type='f' declared_type='float'/>
</method>
<method selector='frames'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='initWithAnimationFrames:delayPerUnit:loops:'>
<arg index='0' name='arrayOfAnimationFrames' type='@' declared_type='NSArray*'/>
<arg index='1' name='delayPerUnit' type='f' declared_type='float'/>
<arg index='2' name='loops' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrames:'>
<arg index='0' name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrames:delay:'>
<arg index='0' name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*'/>
<arg index='1' name='delay' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='loops'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='restoreOriginalFrame'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelayPerUnit:'>
<arg index='0' name='delayPerUnit' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrames:'>
<arg index='0' name='frames' type='@' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLoops:'>
<arg index='0' name='loops' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRestoreOriginalFrame:'>
<arg index='0' name='restoreOriginalFrame' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='totalDelayUnits'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CCAnimationCache'>
<method selector='addAnimation:name:'>
<arg index='0' name='animation' type='@' declared_type='CCAnimation*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAnimationsWithDictionary:'>
<arg index='0' name='dictionary' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAnimationsWithFile:'>
<arg index='0' name='plist' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animationByName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CCAnimation*'/>
</method>
<method class_method='true' selector='purgeSharedAnimationCache'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAnimationByName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedAnimationCache'>
<retval type='@' declared_type='CCAnimationCache*'/>
</method>
</class>
<class name='CCAnimationFrame'>
<method selector='delayUnits'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithSpriteFrame:delayUnits:userInfo:'>
<arg index='0' name='spriteFrame' type='@' declared_type='CCSpriteFrame*'/>
<arg index='1' name='delayUnits' type='f' declared_type='float'/>
<arg index='2' name='userInfo' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelayUnits:'>
<arg index='0' name='delayUnits' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpriteFrame:'>
<arg index='0' name='spriteFrame' type='@' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' name='userInfo' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spriteFrame'>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='CCAtlasNode'>
<method class_method='true' selector='atlasWithTileFile:tileWidth:tileHeight:itemsToRender:'>
<arg index='0' name='tile' type='@' declared_type='NSString*'/>
<arg index='1' name='w' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='2' name='h' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='3' name='c' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithTileFile:tileWidth:tileHeight:itemsToRender:'>
<arg index='0' name='tile' type='@' declared_type='NSString*'/>
<arg index='1' name='w' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='2' name='h' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='3' name='c' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='quadsToDraw'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' name='opacity' type='C' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQuadsToDraw:'>
<arg index='0' name='quadsToDraw' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' name='textureAtlas' type='@' declared_type='CCTextureAtlas*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
<method selector='updateAtlasValues'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCBMFontConfiguration'>
<method selector='atlasName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='characterSet'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method class_method='true' selector='configurationWithFNTFile:'>
<arg index='0' name='FNTfile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFNTfile:'>
<arg index='0' name='FNTfile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAtlasName:'>
<arg index='0' name='atlasName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCBezierBy'>
<method class_method='true' selector='actionWithDuration:bezier:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='c' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' type64='{_ccBezierConfig={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}}' declared_type='ccBezierConfig'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:bezier:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='c' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' type64='{_ccBezierConfig={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}}' declared_type='ccBezierConfig'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCBezierTo'>
<method selector='startWithTarget:'>
<arg index='0' name='aTarget' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCBlink'>
<method class_method='true' selector='actionWithDuration:blinks:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='blinks' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:blinks:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='blinks' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlock'>
<method class_method='true' selector='actionWithBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)()'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)()'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlockN'>
<method class_method='true' selector='actionWithBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)(CCNode *)'>
<arg type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)(CCNode *)'>
<arg type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlockO'>
<method class_method='true' selector='actionWithBlock:object:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:object:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='object'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCallFunc'>
<method class_method='true' selector='actionWithTarget:selector:'>
<arg index='0' name='t' type='@' declared_type='id'/>
<arg index='1' name='s' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTarget:selector:'>
<arg index='0' name='t' type='@' declared_type='id'/>
<arg index='1' name='s' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setTargetCallback:'>
<arg index='0' name='targetCallback' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetCallback'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallFuncN'>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCallFuncND'>
<method class_method='true' selector='actionWithTarget:selector:data:'>
<arg index='0' name='t' type='@' declared_type='id'/>
<arg index='1' name='s' type=':' declared_type='SEL'/>
<arg index='2' name='d' type='^v' declared_type='void*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='callbackMethod'>
<retval function_pointer='true' type='^?' declared_type='CC_CALLBACK_ND'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='initWithTarget:selector:data:'>
<arg index='0' name='t' type='@' declared_type='id'/>
<arg index='1' name='s' type=':' declared_type='SEL'/>
<arg index='2' name='d' type='^v' declared_type='void*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCallbackMethod:'>
<arg index='0' function_pointer='true' name='callbackMethod' type='^?' declared_type='CC_CALLBACK_ND'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCallFuncO'>
<method class_method='true' selector='actionWithTarget:selector:object:'>
<arg index='0' name='t' type='@' declared_type='id'/>
<arg index='1' name='s' type=':' declared_type='SEL'/>
<arg index='2' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg index='0' name='t' type='@' declared_type='id'/>
<arg index='1' name='s' type=':' declared_type='SEL'/>
<arg index='2' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='object'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCamera'>
<method selector='centerX:centerY:centerZ:'>
<arg index='0' name='x' type='^f' declared_type='float*'/>
<arg index='1' name='y' type='^f' declared_type='float*'/>
<arg index='2' name='z' type='^f' declared_type='float*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dirty'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='eyeX:eyeY:eyeZ:'>
<arg index='0' name='x' type='^f' declared_type='float*'/>
<arg index='1' name='y' type='^f' declared_type='float*'/>
<arg index='2' name='z' type='^f' declared_type='float*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='getZEye'>
<retval type='f' declared_type='float'/>
</method>
<method selector='locate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='restore'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCenterX:centerY:centerZ:'>
<arg index='0' name='x' type='f' declared_type='float'/>
<arg index='1' name='y' type='f' declared_type='float'/>
<arg index='2' name='z' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirty:'>
<arg index='0' name='dirty' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEyeX:eyeY:eyeZ:'>
<arg index='0' name='x' type='f' declared_type='float'/>
<arg index='1' name='y' type='f' declared_type='float'/>
<arg index='2' name='z' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUpX:upY:upZ:'>
<arg index='0' name='x' type='f' declared_type='float'/>
<arg index='1' name='y' type='f' declared_type='float'/>
<arg index='2' name='z' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='upX:upY:upZ:'>
<arg index='0' name='x' type='^f' declared_type='float*'/>
<arg index='1' name='y' type='^f' declared_type='float*'/>
<arg index='2' name='z' type='^f' declared_type='float*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCardinalSplineBy'>
<method selector='startWithTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCardinalSplineTo'>
<method class_method='true' selector='actionWithDuration:points:tension:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='points' type='@' declared_type='CCPointArray*'/>
<arg index='2' name='tension' type='f' type64='d' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:tension:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='points' type='@' declared_type='CCPointArray*'/>
<arg index='2' name='tension' type='f' type64='d' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='points'>
<retval type='@' declared_type='CCPointArray*'/>
</method>
<method selector='setPoints:'>
<arg index='0' name='points' type='@' declared_type='CCPointArray*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCatmullRomBy'>
<method class_method='true' selector='actionWithDuration:points:'>
<arg index='0' name='dt' type='f' declared_type='ccTime'/>
<arg index='1' name='points' type='@' declared_type='CCPointArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:'>
<arg index='0' name='dt' type='f' declared_type='ccTime'/>
<arg index='1' name='points' type='@' declared_type='CCPointArray*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCatmullRomTo'>
<method class_method='true' selector='actionWithDuration:points:'>
<arg index='0' name='dt' type='f' declared_type='ccTime'/>
<arg index='1' name='points' type='@' declared_type='CCPointArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:'>
<arg index='0' name='dt' type='f' declared_type='ccTime'/>
<arg index='1' name='points' type='@' declared_type='CCPointArray*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCClippingNode'>
<method selector='alphaThreshold'>
<retval type='f' declared_type='GLfloat'/>
</method>
<method class_method='true' selector='clippingNode'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='clippingNodeWithStencil:'>
<arg index='0' name='stencil' type='@' declared_type='CCNode*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithStencil:'>
<arg index='0' name='stencil' type='@' declared_type='CCNode*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inverted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAlphaThreshold:'>
<arg index='0' name='alphaThreshold' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInverted:'>
<arg index='0' name='inverted' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStencil:'>
<arg index='0' name='stencil' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stencil'>
<retval type='@' declared_type='CCNode*'/>
</method>
</class>
<class name='CCConfiguration'>
<method selector='OSVersion'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='checkForGLExtension:'>
<arg index='0' name='searchName' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maxModelviewStackDepth'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='maxTextureSize'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='maxTextureUnits'>
<retval type='i' declared_type='GLint'/>
</method>
<method class_method='true' selector='sharedConfiguration'>
<retval type='@' declared_type='CCConfiguration*'/>
</method>
<method selector='supportsBGRA8888'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsDiscardFramebuffer'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsNPOT'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsPVRTC'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsShareableVAO'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCDeccelAmplitude'>
<method class_method='true' selector='actionWithAction:duration:'>
<arg index='0' name='action' type='@' declared_type='CCAction*'/>
<arg index='1' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg index='0' name='action' type='@' declared_type='CCAction*'/>
<arg index='1' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg index='0' name='rate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCDelayTime'>
<method selector='update:'>
<arg index='0' name='dt' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCDirector'>
<method selector='actionManager'>
<retval type='@' declared_type='CCActionManager*'/>
</method>
<method selector='animationInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='convertEventToGL:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='convertToGL:'>
<arg index='0' name='p' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='convertToUI:'>
<arg index='0' name='p' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='createStatsLabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='displayStats'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='end'>
<retval type='v' declared_type='void'/>
</method>
<method selector='eventDispatcher'>
<retval type='@' declared_type='CCEventDispatcher*'/>
</method>
<method selector='getZEye'>
<retval type='f' declared_type='float'/>
</method>
<method selector='isAnimating'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPaused'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nextDeltaTimeZero'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='notificationNode'>
<retval type='@' declared_type='id'/>
</method>
<method selector='pause'>
<retval type='v' declared_type='void'/>
</method>
<method selector='popScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='popToRootScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='projection'>
<retval type='i' declared_type='ccDirectorProjection'/>
</method>
<method selector='purgeCachedData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='pushScene:'>
<arg index='0' name='scene' type='@' declared_type='CCScene*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceScene:'>
<arg index='0' name='scene' type='@' declared_type='CCScene*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reshapeProjection:'>
<arg index='0' name='newWindowSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runWithScene:'>
<arg index='0' name='scene' type='@' declared_type='CCScene*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runningScene'>
<retval type='@' declared_type='CCScene*'/>
</method>
<method selector='runningThread'>
<retval type='@' declared_type='NSThread*'/>
</method>
<method selector='scheduler'>
<retval type='@' declared_type='CCScheduler*'/>
</method>
<method selector='secondsPerFrame'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='sendCleanupToScene'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setActionManager:'>
<arg index='0' name='actionManager' type='@' declared_type='CCActionManager*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlphaBlending:'>
<arg index='0' name='on' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnimationInterval:'>
<arg index='0' name='animationInterval' type='d' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDepthTest:'>
<arg index='0' name='on' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayStats:'>
<arg index='0' name='displayStats' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEventDispatcher:'>
<arg index='0' name='eventDispatcher' type='@' declared_type='CCEventDispatcher*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGLDefaultValues'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNextDeltaTimeZero:'>
<arg index='0' name='nextDeltaTimeZero' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotificationNode:'>
<arg index='0' name='notificationNode' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProjection:'>
<arg index='0' name='projection' type='i' declared_type='ccDirectorProjection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScheduler:'>
<arg index='0' name='scheduler' type='@' declared_type='CCScheduler*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setView:'>
<arg index='0' name='view' type='@' declared_type='CCGLView*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedDirector'>
<retval type='@' declared_type='CCDirector*'/>
</method>
<method selector='startAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='totalFrames'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='view'>
<retval type='@' declared_type='CCGLView*'/>
</method>
<method selector='winSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='winSizeInPixels'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
</class>
<class name='CCDirectorMac'>
<method selector='convertToLogicalCoordinates:'>
<arg index='0' name='coordinates' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='isFullScreen'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='originalWinSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='resizeMode'>
<retval type='i' declared_type='int'/>
</method>
<method selector='setFullScreen:'>
<arg index='0' name='fullscreen' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOriginalWinSize:'>
<arg index='0' name='originalWinSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResizeMode:'>
<arg index='0' name='resizeMode' type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCDrawNode'>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='clear'>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawDot:radius:color:'>
<arg index='0' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='1' name='radius' type='f' type64='d' declared_type='CGFloat'/>
<arg index='2' name='color' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawPolyWithVerts:count:fillColor:borderWidth:borderColor:'>
<arg index='0' name='verts' type='^{CGPoint=ff}' type64='^{CGPoint=dd}' declared_type='CGPoint*'/>
<arg index='1' name='count' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='2' name='fill' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<arg index='3' name='width' type='f' type64='d' declared_type='CGFloat'/>
<arg index='4' name='line' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawSegmentFrom:to:radius:color:'>
<arg index='0' name='a' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='1' name='b' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='2' name='radius' type='f' type64='d' declared_type='CGFloat'/>
<arg index='3' name='color' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseBackIn'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseBackInOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseBackOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseBounce'>
<method selector='bounceTime:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='f' declared_type='ccTime'/>
</method>
</class>
<class name='CCEaseBounceIn'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseBounceInOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseBounceOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseElastic'>
<method class_method='true' selector='actionWithAction:period:'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<arg index='1' name='period' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:period:'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<arg index='1' name='period' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='period'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setPeriod:'>
<arg index='0' name='period' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseElasticIn'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseElasticInOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseElasticOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseExponentialIn'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseExponentialInOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseExponentialOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseIn'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseInOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseRateAction'>
<method class_method='true' selector='actionWithAction:rate:'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<arg index='1' name='rate' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:rate:'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<arg index='1' name='rate' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg index='0' name='rate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseSineIn'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseSineInOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseSineOut'>
<method selector='update:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEventDispatcher'>
<method selector='addKeyboardDelegate:priority:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<arg index='1' name='priority' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addMouseDelegate:priority:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<arg index='1' name='priority' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addTouchDelegate:priority:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<arg index='1' name='priority' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dispatchEvent:'>
<arg index='0' name='event' type='@' declared_type='CCEventObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dispatchEvents'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeAllKeyboardDelegates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllMouseDelegates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllTouchDelegates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeKeyboardDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeMouseDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTouchDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDispatchEvents:'>
<arg index='0' name='dispatchEvents' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFadeIn'>
<method selector='update:'>
<arg index='0' name='dt' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFadeOut'>
<method selector='update:'>
<arg index='0' name='dt' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFadeTo'>
<method class_method='true' selector='actionWithDuration:opacity:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='opactiy' type='C' declared_type='GLubyte'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:opacity:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='opacity' type='C' declared_type='GLubyte'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFiniteTimeAction'>
<method selector='duration'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCFiniteTimeAction*'/>
</method>
<method selector='setDuration:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFlipX'>
<method class_method='true' selector='actionWithFlipX:'>
<arg index='0' name='x' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFlipX:'>
<arg index='0' name='x' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFlipX3D'>
<method class_method='true' selector='actionWithDuration:'>
<arg index='0' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:'>
<arg index='0' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFlipY'>
<method class_method='true' selector='actionWithFlipY:'>
<arg index='0' name='y' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFlipY:'>
<arg index='0' name='y' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFlipY3D'>
<method selector='update:'>
<arg index='0' name='time' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFollow'>
<method class_method='true' selector='actionWithTarget:'>
<arg index='0' name='followedNode' type='@' declared_type='CCNode*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithTarget:worldBoundary:'>
<arg index='0' name='followedNode' type='@' declared_type='CCNode*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='boundarySet'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithTarget:'>
<arg index='0' name='followedNode' type='@' declared_type='CCNode*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:worldBoundary:'>
<arg index='0' name='followedNode' type='@' declared_type='CCNode*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setBoundarySet:'>
<arg index='0' name='boundarySet' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGLProgram'>
<method selector='addAttribute:index:'>
<arg index='0' name='attributeName' type='@' declared_type='NSString*'/>
<arg index='1' name='index' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fragmentShaderLog'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithVertexShaderByteArray:fragmentShaderByteArray:'>
<arg index='0' name='vShaderByteArray' type='*' declared_type='GLchar*' const='true'/>
<arg index='1' name='fShaderByteArray' type='*' declared_type='GLchar*' const='true'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithVertexShaderFilename:fragmentShaderFilename:'>
<arg index='0' name='vShaderFilename' type='@' declared_type='NSString*'/>
<arg index='1' name='fShaderFilename' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='link'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='program'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='programLog'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setUniformForModelViewProjectionMatrix'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with2fv:count:'>
<arg index='0' name='location' type='i' declared_type='GLint'/>
<arg index='1' name='floats' type='^f' declared_type='GLfloat*'/>
<arg index='2' name='numberOfArrays' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with3fv:count:'>
<arg index='0' name='location' type='i' declared_type='GLint'/>
<arg index='1' name='floats' type='^f' declared_type='GLfloat*'/>
<arg index='2' name='numberOfArrays' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with4fv:count:'>
<arg index='0' name='location' type='i' declared_type='GLint'/>
<arg index='1' name='floats' type='^v' declared_type='GLvoid*'/>
<arg index='2' name='numberOfArrays' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:'>
<arg index='0' name='location' type='i' declared_type='GLint'/>
<arg index='1' name='f1' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:'>
<arg index='0' name='location' type='i' declared_type='GLint'/>
<arg index='1' name='f1' type='f' declared_type='GLfloat'/>
<arg index='2' name='f2' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:'>
<arg index='0' name='location' type='i' declared_type='GLint'/>
<arg index='1' name='f1' type='f' declared_type='GLfloat'/>
<arg index='2' name='f2' type='f' declared_type='GLfloat'/>
<arg index='3' name='f3' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:f4:'>
<arg index='0' name='location' type='i' declared_type='GLint'/>
<arg index='1' name='f1' type='f' declared_type='GLfloat'/>
<arg index='2' name='f2' type='f' declared_type='GLfloat'/>
<arg index='3' name='f3' type='f' declared_type='GLfloat'/>
<arg index='4' name='f4' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withI1:'>
<arg index='0' name='location' type='i' declared_type='GLint'/>
<arg index='1' name='i1' type='i' declared_type='GLint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withMatrix4fv:count:'>
<arg index='0' name='location' type='i' declared_type='GLint'/>
<arg index='1' name='matrix_array' type='^v' declared_type='GLvoid*'/>
<arg index='2' name='numberOfMatrix' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformsForBuiltins'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateUniforms'>
<retval type='v' declared_type='void'/>
</method>
<method selector='use'>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertexShaderLog'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCGLView'>
<method selector='depthFormat'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='eventDelegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:shareContext:'>
<arg index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
<arg index='1' name='context' type='@' declared_type='NSOpenGLContext*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='load_'>
<retval type='v' declared_type='void'/>
</method>
<method selector='lockOpenGLContext'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEventDelegate:'>
<arg index='0' name='eventDelegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unlockOpenGLContext'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGrabber'>
<method selector='afterRender:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beforeRender:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='grab:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGrid3D'>
<method selector='originalVertex:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
<method selector='setVertex:vertex:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='1' name='vertex' type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertex:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
</class>
<class name='CCGrid3DAction'>
<method selector='originalVertex:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
<method selector='setVertex:vertex:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='1' name='vertex' type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertex:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
</class>
<class name='CCGridAction'>
<method class_method='true' selector='actionWithSize:duration:'>
<arg index='0' name='size' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='1' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='grid'>
<retval type='@' declared_type='CCGridBase*'/>
</method>
<method selector='gridSize'>
<retval type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
</method>
<method selector='initWithSize:duration:'>
<arg index='0' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='1' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setGridSize:'>
<arg index='0' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGridBase'>
<method selector='active'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='afterDraw:'>
<arg index='0' name='target' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beforeDraw'>
<retval type='v' declared_type='void'/>
</method>
<method selector='blit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='calculateVertexPoints'>
<retval type='v' declared_type='void'/>
</method>
<method selector='grabber'>
<retval type='@' declared_type='CCGrabber*'/>
</method>
<method selector='gridSize'>
<retval type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
</method>
<method class_method='true' selector='gridWithSize:'>
<arg index='0' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='gridWithSize:texture:flippedTexture:'>
<arg index='0' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='1' name='texture' type='@' declared_type='CCTexture2D*'/>
<arg index='2' name='flipped' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSize:'>
<arg index='0' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSize:texture:flippedTexture:'>
<arg index='0' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='1' name='texture' type='@' declared_type='CCTexture2D*'/>
<arg index='2' name='flipped' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isTextureFlipped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reuse'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reuseGrid'>
<retval type='i' declared_type='int'/>
</method>
<method selector='setActive:'>
<arg index='0' name='active' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGrabber:'>
<arg index='0' name='grabber' type='@' declared_type='CCGrabber*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsTextureFlipped:'>
<arg index='0' name='isTextureFlipped' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReuseGrid:'>
<arg index='0' name='reuseGrid' type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg index='0' name='shaderProgram' type='@' declared_type='CCGLProgram*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStep:'>
<arg index='0' name='step' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='step'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</class>
<class name='CCHide'>
<method selector='update:'>
<arg index='0' name='time' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCJumpBy'>
<method class_method='true' selector='actionWithDuration:position:height:jumps:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='2' name='height' type='f' declared_type='ccTime'/>
<arg index='3' name='jumps' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:height:jumps:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='2' name='height' type='f' declared_type='ccTime'/>
<arg index='3' name='jumps' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCJumpTiles3D'>
<method class_method='true' selector='actionWithJumps:amplitude:grid:duration:'>
<arg index='0' name='j' type='i' declared_type='int'/>
<arg index='1' name='amp' type='f' declared_type='float'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithJumps:amplitude:grid:duration:'>
<arg index='0' name='j' type='i' declared_type='int'/>
<arg index='1' name='amp' type='f' declared_type='float'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' name='amplitude' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' name='amplitudeRate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCJumpTo'>
<method selector='startWithTarget:'>
<arg index='0' name='aTarget' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLabelAtlas'>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='charmapfile' type='@' declared_type='NSString*'/>
<arg index='2' name='w' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='3' name='h' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='4' name='firstElement' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='fontFile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='charmapfile' type='@' declared_type='NSString*'/>
<arg index='2' name='w' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='3' name='h' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='4' name='firstElement' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fntFile:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='fontFile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCLabelBMFont'>
<method selector='alignment'>
<retval type='i' declared_type='CCTextAlignment'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='createFontChars'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fntFile'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithString:fntFile:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='fntFile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:width:alignment:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='fntFile' type='@' declared_type='NSString*'/>
<arg index='2' name='width' type='f' declared_type='float'/>
<arg index='3' name='alignment' type='i' declared_type='CCTextAlignment'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:width:alignment:imageOffset:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='fntFile' type='@' declared_type='NSString*'/>
<arg index='2' name='width' type='f' declared_type='float'/>
<arg index='3' name='alignment' type='i' declared_type='CCTextAlignment'/>
<arg index='4' name='offset' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fntFile:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='fntFile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fntFile:width:alignment:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='fntFile' type='@' declared_type='NSString*'/>
<arg index='2' name='width' type='f' declared_type='float'/>
<arg index='3' name='alignment' type='i' declared_type='CCTextAlignment'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fntFile:width:alignment:imageOffset:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='fntFile' type='@' declared_type='NSString*'/>
<arg index='2' name='width' type='f' declared_type='float'/>
<arg index='3' name='alignment' type='i' declared_type='CCTextAlignment'/>
<arg index='4' name='offset' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method class_method='true' selector='purgeCachedData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlignment:'>
<arg index='0' name='alignment' type='i' declared_type='CCTextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFntFile:'>
<arg index='0' name='fntFile' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' name='opacity' type='C' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:'>
<arg index='0' name='width' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLabelTTF'>
<method selector='dimensions'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='horizontalAlignment'>
<retval type='i' declared_type='CCTextAlignment'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<arg index='3' name='dimensions' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<arg index='4' name='alignment' type='i' declared_type='CCTextAlignment'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:lineBreakMode:'>
<arg index='0' name='str' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<arg index='3' name='dimensions' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<arg index='4' name='alignment' type='i' declared_type='CCTextAlignment'/>
<arg index='5' name='lineBreakMode' type='i' declared_type='CCLineBreakMode'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<arg index='3' name='dimensions' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<arg index='4' name='alignment' type='i' declared_type='CCTextAlignment'/>
<arg index='5' name='vertAlignment' type='i' declared_type='CCVerticalTextAlignment'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:lineBreakMode:'>
<arg index='0' name='str' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<arg index='3' name='dimensions' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<arg index='4' name='alignment' type='i' declared_type='CCTextAlignment'/>
<arg index='5' name='vAlignment' type='i' declared_type='CCVerticalTextAlignment'/>
<arg index='6' name='lineBreakMode' type='i' declared_type='CCLineBreakMode'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fontName:fontSize:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fontName:fontSize:dimensions:hAlignment:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<arg index='3' name='dimensions' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<arg index='4' name='alignment' type='i' declared_type='CCTextAlignment'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fontName:fontSize:dimensions:hAlignment:lineBreakMode:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<arg index='3' name='dimensions' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<arg index='4' name='alignment' type='i' declared_type='CCTextAlignment'/>
<arg index='5' name='lineBreakMode' type='i' declared_type='CCLineBreakMode'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<arg index='3' name='dimensions' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<arg index='4' name='alignment' type='i' declared_type='CCTextAlignment'/>
<arg index='5' name='vertAlignment' type='i' declared_type='CCVerticalTextAlignment'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:lineBreakMode:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<arg index='3' name='dimensions' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<arg index='4' name='alignment' type='i' declared_type='CCTextAlignment'/>
<arg index='5' name='vertAlignment' type='i' declared_type='CCVerticalTextAlignment'/>
<arg index='6' name='lineBreakMode' type='i' declared_type='CCLineBreakMode'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDimensions:'>
<arg index='0' name='dimensions' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontName:'>
<arg index='0' name='fontName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:'>
<arg index='0' name='fontSize' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontalAlignment:'>
<arg index='0' name='horizontalAlignment' type='i' declared_type='CCTextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg index='0' name='str' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalAlignment:'>
<arg index='0' name='verticalAlignment' type='i' declared_type='CCVerticalTextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='verticalAlignment'>
<retval type='i' declared_type='CCVerticalTextAlignment'/>
</method>
</class>
<class name='CCLayer'>
<method selector='isKeyboardEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMouseEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTouchEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyboardPriority'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='mousePriority'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='setKeyboardEnabled:'>
<arg index='0' name='keyboardEnabled' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyboardPriority:'>
<arg index='0' name='keyboardPriority' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMouseEnabled:'>
<arg index='0' name='mouseEnabled' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMousePriority:'>
<arg index='0' name='mousePriority' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTouchEnabled:'>
<arg index='0' name='touchEnabled' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTouchPriority:'>
<arg index='0' name='touchPriority' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchPriority'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
</class>
<class name='CCLayerColor'>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='changeHeight:'>
<arg index='0' name='h' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeWidth:'>
<arg index='0' name='w' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeWidth:height:'>
<arg index='0' name='w' type='f' declared_type='GLfloat'/>
<arg index='1' name='h' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithColor:'>
<arg index='0' name='color' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithColor:width:height:'>
<arg index='0' name='color' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<arg index='1' name='w' type='f' declared_type='GLfloat'/>
<arg index='2' name='h' type='f' declared_type='GLfloat'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='layerWithColor:'>
<arg index='0' name='color' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='layerWithColor:width:height:'>
<arg index='0' name='color' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<arg index='1' name='w' type='f' declared_type='GLfloat'/>
<arg index='2' name='h' type='f' declared_type='GLfloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLayerGradient'>
<method selector='compressedInterpolation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='endColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='endOpacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='initWithColor:fadingTo:'>
<arg index='0' name='start' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<arg index='1' name='end' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithColor:fadingTo:alongVector:'>
<arg index='0' name='start' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<arg index='1' name='end' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<arg index='2' name='v' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='layerWithColor:fadingTo:'>
<arg index='0' name='start' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<arg index='1' name='end' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='layerWithColor:fadingTo:alongVector:'>
<arg index='0' name='start' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<arg index='1' name='end' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<arg index='2' name='v' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCompressedInterpolation:'>
<arg index='0' name='compressedInterpolation' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColor:'>
<arg index='0' name='endColor' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndOpacity:'>
<arg index='0' name='endOpacity' type='C' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColor:'>
<arg index='0' name='startColor' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartOpacity:'>
<arg index='0' name='startOpacity' type='C' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVector:'>
<arg index='0' name='vector' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='startOpacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='vector'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
</class>
<class name='CCLayerMultiplex'>
<method selector='initWithLayers:vaList:'>
<arg index='0' name='layer' type='@' declared_type='CCLayer*'/>
<arg index='1' name='params' type='*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' declared_type64='__va_list_tag*'/>
<retval type='@' declared_type='id'/>
</method>
<method variadic='true' class_method='true' selector='layerWithLayers:' sentinel='0'>
<arg index='0' name='layer' type='@' declared_type='CCLayer*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='switchTo:'>
<arg index='0' name='n' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='switchToAndReleaseMe:'>
<arg index='0' name='n' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLens3D'>
<method class_method='true' selector='actionWithPosition:radius:grid:duration:'>
<arg index='0' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='1' name='r' type='f' declared_type='float'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPosition:radius:grid:duration:'>
<arg index='0' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='1' name='r' type='f' declared_type='float'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lensEffect'>
<retval type='f' declared_type='float'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='setLensEffect:'>
<arg index='0' name='lensEffect' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLiquid'>
<method class_method='true' selector='actionWithWaves:amplitude:grid:duration:'>
<arg index='0' name='wav' type='i' declared_type='int'/>
<arg index='1' name='amp' type='f' declared_type='float'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg index='0' name='wav' type='i' declared_type='int'/>
<arg index='1' name='amp' type='f' declared_type='float'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' name='amplitude' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' name='amplitudeRate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenu'>
<method selector='alignItemsHorizontally'>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsHorizontallyWithPadding:'>
<arg index='0' name='padding' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method variadic='true' selector='alignItemsInColumns:' sentinel='0'>
<arg index='0' name='columns' type='@' declared_type='NSNumber*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInColumns:vaList:'>
<arg index='0' name='columns' type='@' declared_type='NSNumber*'/>
<arg index='1' name='args' type='*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' declared_type64='__va_list_tag*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInColumnsWithArray:'>
<arg index='0' name='arrayOfNumbers' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method variadic='true' selector='alignItemsInRows:' sentinel='0'>
<arg index='0' name='rows' type='@' declared_type='NSNumber*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInRows:vaList:'>
<arg index='0' name='rows' type='@' declared_type='NSNumber*'/>
<arg index='1' name='args' type='*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' declared_type64='__va_list_tag*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInRowsWithArray:'>
<arg index='0' name='arrayOfNumbers' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsVertically'>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsVerticallyWithPadding:'>
<arg index='0' name='padding' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='enabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithArray:'>
<arg index='0' name='arrayOfItems' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='menuWithArray:'>
<arg index='0' name='arrayOfItems' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method variadic='true' class_method='true' selector='menuWithItems:' sentinel='0'>
<arg index='0' name='item' type='@' declared_type='CCMenuItem*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='menuWithItems:vaList:'>
<arg index='0' name='firstItem' type='@' declared_type='CCMenuItem*'/>
<arg index='1' name='args' type='*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' declared_type64='__va_list_tag*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='setEnabled:'>
<arg index='0' name='enabled' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHandlerPriority:'>
<arg index='0' name='newPriority' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItem'>
<method selector='activate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='cleanup'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelected'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='itemWithBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithTarget:selector:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
</method>
<method selector='selected'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsEnabled:'>
<arg index='0' name='enabled' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:selector:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='selector' type=':' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unselected'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemAtlasFont'>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='charMapFile' type='@' declared_type='NSString*'/>
<arg index='2' name='itemWidth' type='i' declared_type='int'/>
<arg index='3' name='itemHeight' type='i' declared_type='int'/>
<arg index='4' name='startCharMap' type='c' declared_type='char'/>
<arg index='5' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='charMapFile' type='@' declared_type='NSString*'/>
<arg index='2' name='itemWidth' type='i' declared_type='int'/>
<arg index='3' name='itemHeight' type='i' declared_type='int'/>
<arg index='4' name='startCharMap' type='c' declared_type='char'/>
<arg index='5' name='target' type='@' declared_type='id'/>
<arg index='6' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='charMapFile' type='@' declared_type='NSString*'/>
<arg index='2' name='itemWidth' type='i' declared_type='int'/>
<arg index='3' name='itemHeight' type='i' declared_type='int'/>
<arg index='4' name='startCharMap' type='c' declared_type='char'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='charMapFile' type='@' declared_type='NSString*'/>
<arg index='2' name='itemWidth' type='i' declared_type='int'/>
<arg index='3' name='itemHeight' type='i' declared_type='int'/>
<arg index='4' name='startCharMap' type='c' declared_type='char'/>
<arg index='5' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='charMapFile' type='@' declared_type='NSString*'/>
<arg index='2' name='itemWidth' type='i' declared_type='int'/>
<arg index='3' name='itemHeight' type='i' declared_type='int'/>
<arg index='4' name='startCharMap' type='c' declared_type='char'/>
<arg index='5' name='target' type='@' declared_type='id'/>
<arg index='6' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCMenuItemFont'>
<method class_method='true' selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='fontSize'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='fontSize'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='initWithString:block:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:target:selector:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='r' type='@' declared_type='id'/>
<arg index='2' name='s' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:block:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:target:selector:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='r' type='@' declared_type='id'/>
<arg index='2' name='s' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setFontName:'>
<arg index='0' name='n' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontName:'>
<arg index='0' name='n' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setFontSize:'>
<arg index='0' name='s' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:'>
<arg index='0' name='s' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemImage'>
<method selector='initWithNormalImage:selectedImage:disabledImage:block:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='value2' type='@' declared_type='NSString*'/>
<arg index='2' name='value3' type='@' declared_type='NSString*'/>
<arg index='3' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalImage:selectedImage:disabledImage:target:selector:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='value2' type='@' declared_type='NSString*'/>
<arg index='2' name='value3' type='@' declared_type='NSString*'/>
<arg index='3' name='r' type='@' declared_type='id'/>
<arg index='4' name='s' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalImage:selectedImage:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='value2' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalImage:selectedImage:block:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='value2' type='@' declared_type='NSString*'/>
<arg index='2' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalImage:selectedImage:disabledImage:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='value2' type='@' declared_type='NSString*'/>
<arg index='2' name='value3' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalImage:selectedImage:disabledImage:block:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='value2' type='@' declared_type='NSString*'/>
<arg index='2' name='value3' type='@' declared_type='NSString*'/>
<arg index='3' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalImage:selectedImage:disabledImage:target:selector:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='value2' type='@' declared_type='NSString*'/>
<arg index='2' name='value3' type='@' declared_type='NSString*'/>
<arg index='3' name='r' type='@' declared_type='id'/>
<arg index='4' name='s' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalImage:selectedImage:target:selector:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='value2' type='@' declared_type='NSString*'/>
<arg index='2' name='r' type='@' declared_type='id'/>
<arg index='3' name='s' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDisabledSpriteFrame:'>
<arg index='0' name='frame' type='@' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNormalSpriteFrame:'>
<arg index='0' name='frame' type='@' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedSpriteFrame:'>
<arg index='0' name='frame' type='@' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemLabel'>
<method selector='disabledColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithLabel:block:'>
<arg index='0' name='label' type='@' declared_type='CCNode*'/>
<arg index='1' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLabel:target:selector:'>
<arg index='0' name='label' type='@' declared_type='CCNode*'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<arg index='2' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithLabel:'>
<arg index='0' name='label' type='@' declared_type='CCNode*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithLabel:block:'>
<arg index='0' name='label' type='@' declared_type='CCNode*'/>
<arg index='1' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithLabel:target:selector:'>
<arg index='0' name='label' type='@' declared_type='CCNode*'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<arg index='2' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='label'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='setDisabledColor:'>
<arg index='0' name='disabledColor' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsEnabled:'>
<arg index='0' name='enabled' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabel:'>
<arg index='0' name='label' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg index='0' name='label' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemSprite'>
<method selector='disabledImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:block:'>
<arg index='0' name='normalSprite' type='@' declared_type='CCNode*'/>
<arg index='1' name='selectedSprite' type='@' declared_type='CCNode*'/>
<arg index='2' name='disabledSprite' type='@' declared_type='CCNode*'/>
<arg index='3' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg index='0' name='normalSprite' type='@' declared_type='CCNode*'/>
<arg index='1' name='selectedSprite' type='@' declared_type='CCNode*'/>
<arg index='2' name='disabledSprite' type='@' declared_type='CCNode*'/>
<arg index='3' name='target' type='@' declared_type='id'/>
<arg index='4' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalSprite:selectedSprite:'>
<arg index='0' name='normalSprite' type='@' declared_type='CCNode*'/>
<arg index='1' name='selectedSprite' type='@' declared_type='CCNode*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalSprite:selectedSprite:block:'>
<arg index='0' name='normalSprite' type='@' declared_type='CCNode*'/>
<arg index='1' name='selectedSprite' type='@' declared_type='CCNode*'/>
<arg index='2' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalSprite:selectedSprite:disabledSprite:block:'>
<arg index='0' name='normalSprite' type='@' declared_type='CCNode*'/>
<arg index='1' name='selectedSprite' type='@' declared_type='CCNode*'/>
<arg index='2' name='disabledSprite' type='@' declared_type='CCNode*'/>
<arg index='3' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg index='0' name='normalSprite' type='@' declared_type='CCNode*'/>
<arg index='1' name='selectedSprite' type='@' declared_type='CCNode*'/>
<arg index='2' name='disabledSprite' type='@' declared_type='CCNode*'/>
<arg index='3' name='target' type='@' declared_type='id'/>
<arg index='4' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalSprite:selectedSprite:target:selector:'>
<arg index='0' name='normalSprite' type='@' declared_type='CCNode*'/>
<arg index='1' name='selectedSprite' type='@' declared_type='CCNode*'/>
<arg index='2' name='target' type='@' declared_type='id'/>
<arg index='3' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='normalImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='selectedImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='setDisabledImage:'>
<arg index='0' name='disabledImage' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNormalImage:'>
<arg index='0' name='normalImage' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedImage:'>
<arg index='0' name='selectedImage' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemToggle'>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithItems:block:'>
<arg index='0' name='arrayOfItems' type='@' declared_type='NSArray*'/>
<arg index='1' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithItems:'>
<arg index='0' name='arrayOfItems' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithItems:block:'>
<arg index='0' name='arrayOfItems' type='@' declared_type='NSArray*'/>
<arg index='1' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method variadic='true' class_method='true' selector='itemWithTarget:selector:items:' sentinel='0'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='selector' type=':' declared_type='SEL'/>
<arg index='2' name='item' type='@' declared_type='CCMenuItem*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithTarget:selector:items:vaList:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='selector' type=':' declared_type='SEL'/>
<arg index='2' name='item' type='@' declared_type='CCMenuItem*'/>
<arg index='3' name='args' type='*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' declared_type64='__va_list_tag*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='selectedIndex'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='selectedItem'>
<retval type='@' declared_type='CCMenuItem*'/>
</method>
<method selector='setSelectedIndex:'>
<arg index='0' name='selectedIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubItems:'>
<arg index='0' name='subItems' type='@' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='subItems'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
</class>
<class name='CCMotionStreak'>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='initWithFade:minSeg:width:color:texture:'>
<arg index='0' name='fade' type='f' declared_type='float'/>
<arg index='1' name='minSeg' type='f' declared_type='float'/>
<arg index='2' name='stroke' type='f' declared_type='float'/>
<arg index='3' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<arg index='4' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFade:minSeg:width:color:textureFilename:'>
<arg index='0' name='fade' type='f' declared_type='float'/>
<arg index='1' name='minSeg' type='f' declared_type='float'/>
<arg index='2' name='stroke' type='f' declared_type='float'/>
<arg index='3' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<arg index='4' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFastMode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reset'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFastMode:'>
<arg index='0' name='fastMode' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='streakWithFade:minSeg:width:color:texture:'>
<arg index='0' name='fade' type='f' declared_type='float'/>
<arg index='1' name='minSeg' type='f' declared_type='float'/>
<arg index='2' name='stroke' type='f' declared_type='float'/>
<arg index='3' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<arg index='4' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='streakWithFade:minSeg:width:color:textureFilename:'>
<arg index='0' name='fade' type='f' declared_type='float'/>
<arg index='1' name='minSeg' type='f' declared_type='float'/>
<arg index='2' name='stroke' type='f' declared_type='float'/>
<arg index='3' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<arg index='4' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='tintWithColor:'>
<arg index='0' name='colors' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMoveBy'>
<method class_method='true' selector='actionWithDuration:position:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='deltaPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='deltaPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCMoveTo'>
<method class_method='true' selector='actionWithDuration:position:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCNode'>
<method selector='actionManager'>
<retval type='@' declared_type='CCActionManager*'/>
</method>
<method selector='addChild:'>
<arg index='0' name='node' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:z:'>
<arg index='0' name='node' type='@' declared_type='CCNode*'/>
<arg index='1' name='z' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:z:tag:'>
<arg index='0' name='node' type='@' declared_type='CCNode*'/>
<arg index='1' name='z' type='i' type64='q' declared_type='NSInteger'/>
<arg index='2' name='tag' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='anchorPoint'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='anchorPointInPoints'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='boundingBox'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
</method>
<method selector='camera'>
<retval type='@' declared_type='CCCamera*'/>
</method>
<method selector='children'>
<retval type='@' declared_type='CCArray*'/>
</method>
<method selector='cleanup'>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='convertToNodeSpace:'>
<arg index='0' name='worldPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='convertToNodeSpaceAR:'>
<arg index='0' name='worldPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='convertToWorldSpace:'>
<arg index='0' name='nodePoint' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='convertToWorldSpaceAR:'>
<arg index='0' name='nodePoint' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='draw'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getActionByTag:'>
<arg index='0' name='tag' type='i' type64='q' declared_type='NSInteger'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='getChildByTag:'>
<arg index='0' name='tag' type='i' type64='q' declared_type='NSInteger'/>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='glServerState'>
<retval type='i' declared_type='ccGLServerState'/>
</method>
<method selector='grid'>
<retval type='@' declared_type='CCGridBase*'/>
</method>
<method selector='ignoreAnchorPointForPosition'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isRunning'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='node'>
<retval type='@' declared_type='id'/>
</method>
<method selector='nodeToParentTransform'>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}' declared_type='CGAffineTransform'/>
</method>
<method selector='nodeToWorldTransform'>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}' declared_type='CGAffineTransform'/>
</method>
<method selector='numberOfRunningActions'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='onEnter'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onEnterTransitionDidFinish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onExit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onExitTransitionDidStart'>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderOfArrival'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='parent'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='parentToNodeTransform'>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}' declared_type='CGAffineTransform'/>
</method>
<method selector='pauseSchedulerAndActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='removeAllChildren'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllChildrenWithCleanup:'>
<arg index='0' name='cleanup' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChild:'>
<arg index='0' name='child' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChild:cleanup:'>
<arg index='0' name='node' type='@' declared_type='CCNode*'/>
<arg index='1' name='cleanup' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildByTag:'>
<arg index='0' name='tag' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildByTag:cleanup:'>
<arg index='0' name='tag' type='i' type64='q' declared_type='NSInteger'/>
<arg index='1' name='cleanup' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromParent'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromParentAndCleanup:'>
<arg index='0' name='cleanup' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reorderChild:z:'>
<arg index='0' name='child' type='@' declared_type='CCNode*'/>
<arg index='1' name='zOrder' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeSchedulerAndActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotation'>
<retval type='f' declared_type='float'/>
</method>
<method selector='rotationX'>
<retval type='f' declared_type='float'/>
</method>
<method selector='rotationY'>
<retval type='f' declared_type='float'/>
</method>
<method selector='runAction:'>
<arg index='0' name='action' type='@' declared_type='CCAction*'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='scale'>
<retval type='f' declared_type='float'/>
</method>
<method selector='scaleX'>
<retval type='f' declared_type='float'/>
</method>
<method selector='scaleY'>
<retval type='f' declared_type='float'/>
</method>
<method selector='schedule:'>
<arg index='0' name='s' type=':' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='schedule:interval:'>
<arg index='0' name='s' type=':' declared_type='SEL'/>
<arg index='1' name='seconds' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='schedule:interval:repeat:delay:'>
<arg index='0' name='selector' type=':' declared_type='SEL'/>
<arg index='1' name='interval' type='f' declared_type='ccTime'/>
<arg index='2' name='repeat' type='I' declared_type='uint'/>
<arg index='3' name='delay' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleOnce:delay:'>
<arg index='0' name='selector' type=':' declared_type='SEL'/>
<arg index='1' name='delay' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdateWithPriority:'>
<arg index='0' name='priority' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduler'>
<retval type='@' declared_type='CCScheduler*'/>
</method>
<method selector='setActionManager:'>
<arg index='0' name='actionManager' type='@' declared_type='CCActionManager*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnchorPoint:'>
<arg index='0' name='anchorPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentSize:'>
<arg index='0' name='contentSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGlServerState:'>
<arg index='0' name='glServerState' type='i' declared_type='ccGLServerState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGrid:'>
<arg index='0' name='grid' type='@' declared_type='CCGridBase*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIgnoreAnchorPointForPosition:'>
<arg index='0' name='ignoreAnchorPointForPosition' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrderOfArrival:'>
<arg index='0' name='orderOfArrival' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParent:'>
<arg index='0' name='parent' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotation:'>
<arg index='0' name='rotation' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotationX:'>
<arg index='0' name='rotationX' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotationY:'>
<arg index='0' name='rotationY' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScale:'>
<arg index='0' name='scale' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScaleX:'>
<arg index='0' name='scaleX' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScaleY:'>
<arg index='0' name='scaleY' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScheduler:'>
<arg index='0' name='scheduler' type='@' declared_type='CCScheduler*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg index='0' name='shaderProgram' type='@' declared_type='CCGLProgram*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSkewX:'>
<arg index='0' name='skewX' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSkewY:'>
<arg index='0' name='skewY' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg index='0' name='tag' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg index='0' name='userData' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserObject:'>
<arg index='0' name='userObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVertexZ:'>
<arg index='0' name='vertexZ' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisible:'>
<arg index='0' name='visible' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setZOrder:'>
<arg index='0' name='z' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='skewX'>
<retval type='f' declared_type='float'/>
</method>
<method selector='skewY'>
<retval type='f' declared_type='float'/>
</method>
<method selector='sortAllChildren'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAction:'>
<arg index='0' name='action' type='@' declared_type='CCAction*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopActionByTag:'>
<arg index='0' name='tag' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAllActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='transform'>
<retval type='v' declared_type='void'/>
</method>
<method selector='transformAncestors'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unschedule:'>
<arg index='0' name='s' type=':' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleUpdate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='update:'>
<arg index='0' name='delta' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userData'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='userObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='vertexZ'>
<retval type='f' declared_type='float'/>
</method>
<method selector='visible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='visit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='worldToNodeTransform'>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}' declared_type='CGAffineTransform'/>
</method>
<method selector='zOrder'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
</class>
<class name='CCOrbitCamera'>
<method class_method='true' selector='actionWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:'>
<arg index='0' name='t' type='f' declared_type='float'/>
<arg index='1' name='r' type='f' declared_type='float'/>
<arg index='2' name='dr' type='f' declared_type='float'/>
<arg index='3' name='z' type='f' declared_type='float'/>
<arg index='4' name='dz' type='f' declared_type='float'/>
<arg index='5' name='x' type='f' declared_type='float'/>
<arg index='6' name='dx' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:'>
<arg index='0' name='t' type='f' declared_type='float'/>
<arg index='1' name='r' type='f' declared_type='float'/>
<arg index='2' name='dr' type='f' declared_type='float'/>
<arg index='3' name='z' type='f' declared_type='float'/>
<arg index='4' name='dz' type='f' declared_type='float'/>
<arg index='5' name='x' type='f' declared_type='float'/>
<arg index='6' name='dx' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='sphericalRadius:zenith:azimuth:'>
<arg index='0' name='r' type='^f' declared_type='float*'/>
<arg index='1' name='zenith' type='^f' declared_type='float*'/>
<arg index='2' name='azimuth' type='^f' declared_type='float*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParallaxNode'>
<method selector='addChild:z:parallaxRatio:positionOffset:'>
<arg index='0' name='node' type='@' declared_type='CCNode*'/>
<arg index='1' name='z' type='i' type64='q' declared_type='NSInteger'/>
<arg index='2' name='c' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='3' name='positionOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parallaxArray'>
<retval type='^{ccArray=II^@}' type64='^{ccArray=QQ^@}' declared_type='ccArray*'/>
</method>
<method selector='setParallaxArray:'>
<arg index='0' name='parallaxArray' type='^{ccArray=II^@}' type64='^{ccArray=QQ^@}' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParticleBatchNode'>
<method selector='addChild:z:tag:'>
<arg index='0' name='child' type='@' declared_type='CCParticleSystem*'/>
<arg index='1' name='z' type='i' type64='q' declared_type='NSInteger'/>
<arg index='2' name='aTag' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='batchNodeWithFile:'>
<arg index='0' name='imageFile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithFile:capacity:'>
<arg index='0' name='fileImage' type='@' declared_type='NSString*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithTexture:'>
<arg index='0' name='tex' type='@' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithTexture:capacity:'>
<arg index='0' name='tex' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='disableParticle:'>
<arg index='0' name='particleIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg index='0' name='fileImage' type='@' declared_type='NSString*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg index='0' name='tex' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg index='0' name='pSystem' type='@' declared_type='CCParticleSystem*'/>
<arg index='1' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChild:cleanup:'>
<arg index='0' name='pSystem' type='@' declared_type='CCParticleSystem*'/>
<arg index='1' name='doCleanUp' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' name='textureAtlas' type='@' declared_type='CCTextureAtlas*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
</class>
<class name='CCParticleExplosion'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCParticleFire'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCParticleFireworks'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCParticleFlower'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCParticleGalaxy'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCParticleMeteor'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCParticleRain'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCParticleSmoke'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCParticleSnow'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCParticleSpiral'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCParticleSun'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCParticleSystem'>
<method selector='active'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='angle'>
<retval type='f' declared_type='float'/>
</method>
<method selector='angleVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='atlasIndex'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='autoRemoveOnFinish'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='batchNode'>
<retval type='@' declared_type='CCParticleBatchNode*'/>
</method>
<method selector='blendAdditive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='duration'>
<retval type='f' declared_type='float'/>
</method>
<method selector='emissionRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='emitterMode'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='endColor'>
<retval type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='endColorVar'>
<retval type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='endRadius'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endRadiusVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSizeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSpin'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSpinVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='gravity'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='initWithDictionary:'>
<arg index='0' name='dictionary' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDictionary:path:'>
<arg index='0' name='dictionary' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='dirname' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:'>
<arg index='0' name='plistFile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTotalParticles:'>
<arg index='0' name='numberOfParticles' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFull'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='life'>
<retval type='f' declared_type='float'/>
</method>
<method selector='lifeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='particleCount'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='particleWithFile:'>
<arg index='0' name='plistFile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='particleWithTotalParticles:'>
<arg index='0' name='numberOfParticles' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='posVar'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='positionType'>
<retval type='i' declared_type='tCCPositionType'/>
</method>
<method selector='postStep'>
<retval type='v' declared_type='void'/>
</method>
<method selector='radialAccel'>
<retval type='f' declared_type='float'/>
</method>
<method selector='radialAccelVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='resetSystem'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotatePerSecond'>
<retval type='f' declared_type='float'/>
</method>
<method selector='rotatePerSecondVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setAngle:'>
<arg index='0' name='angle' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngleVar:'>
<arg index='0' name='angleVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAtlasIndex:'>
<arg index='0' name='atlasIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoRemoveOnFinish:'>
<arg index='0' name='autoRemoveOnFinish' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBatchNode:'>
<arg index='0' name='batchNode' type='@' declared_type='CCParticleBatchNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendAdditive:'>
<arg index='0' name='blendAdditive' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDuration:'>
<arg index='0' name='duration' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEmissionRate:'>
<arg index='0' name='emissionRate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEmitterMode:'>
<arg index='0' name='emitterMode' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColor:'>
<arg index='0' name='endColor' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColorVar:'>
<arg index='0' name='endColorVar' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndRadius:'>
<arg index='0' name='endRadius' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndRadiusVar:'>
<arg index='0' name='endRadiusVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSize:'>
<arg index='0' name='endSize' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSizeVar:'>
<arg index='0' name='endSizeVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSpin:'>
<arg index='0' name='endSpin' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSpinVar:'>
<arg index='0' name='endSpinVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravity:'>
<arg index='0' name='gravity' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLife:'>
<arg index='0' name='life' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLifeVar:'>
<arg index='0' name='lifeVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg index='0' name='opacityModifyRGB' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosVar:'>
<arg index='0' name='posVar' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositionType:'>
<arg index='0' name='positionType' type='i' declared_type='tCCPositionType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRadialAccel:'>
<arg index='0' name='radialAccel' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRadialAccelVar:'>
<arg index='0' name='radialAccelVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotatePerSecond:'>
<arg index='0' name='rotatePerSecond' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotatePerSecondVar:'>
<arg index='0' name='rotatePerSecondVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourcePosition:'>
<arg index='0' name='sourcePosition' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeed:'>
<arg index='0' name='speed' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeedVar:'>
<arg index='0' name='speedVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColor:'>
<arg index='0' name='startColor' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColorVar:'>
<arg index='0' name='startColorVar' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartRadius:'>
<arg index='0' name='startRadius' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartRadiusVar:'>
<arg index='0' name='startRadiusVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSize:'>
<arg index='0' name='startSize' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSizeVar:'>
<arg index='0' name='startSizeVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSpin:'>
<arg index='0' name='startSpin' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSpinVar:'>
<arg index='0' name='startSpinVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTangentialAccel:'>
<arg index='0' name='tangentialAccel' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTangentialAccelVar:'>
<arg index='0' name='tangentialAccelVar' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTotalParticles:'>
<arg index='0' name='totalParticles' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourcePosition'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='speed'>
<retval type='f' declared_type='float'/>
</method>
<method selector='speedVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startColor'>
<retval type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='startColorVar'>
<retval type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='startRadius'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startRadiusVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSizeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSpin'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSpinVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='stopSystem'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tangentialAccel'>
<retval type='f' declared_type='float'/>
</method>
<method selector='tangentialAccelVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='totalParticles'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='update:'>
<arg index='0' name='dt' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateQuadWithParticle:newPosition:'>
<arg index='0' name='particle' type='^{sCCParticle={CGPoint=ff}{CGPoint=ff}{_ccColor4F=ffff}{_ccColor4F=ffff}fffffI(?={?={CGPoint=ff}ff}{?=ffff})}' type64='^{sCCParticle={CGPoint=dd}{CGPoint=dd}{_ccColor4F=ffff}{_ccColor4F=ffff}fffffQ(?={?={CGPoint=dd}ff}{?=ffff})}' declared_type='tCCParticle*'/>
<arg index='1' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateWithNoTime'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParticleSystemQuad'>
<method selector='initIndices'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initTexCoordsWithRect:'>
<arg index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrame:'>
<arg index='0' name='spriteFrame' type='@' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:withRect:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCPhysicsSprite'>
<method selector='ignoreBodyRotation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setIgnoreBodyRotation:'>
<arg index='0' name='ignoreBodyRotation' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCPlace'>
<method class_method='true' selector='actionWithPosition:'>
<arg index='0' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPosition:'>
<arg index='0' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCPointArray'>
<method selector='addControlPoint:'>
<arg index='0' name='controlPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='arrayWithCapacity:'>
<arg index='0' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='controlPoints'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='count'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='getControlPointAtIndex:'>
<arg index='0' name='index' type='i' type64='q' declared_type='NSInteger'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertControlPoint:atIndex:'>
<arg index='0' name='controlPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='1' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeControlPointAtIndex:'>
<arg index='0' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceControlPoint:atIndex:'>
<arg index='0' name='controlPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='1' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCPointArray*'/>
</method>
<method selector='reverseInline'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlPoints:'>
<arg index='0' name='controlPoints' type='@' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCProgressFromTo'>
<method class_method='true' selector='actionWithDuration:from:to:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='fromPercentage' type='f' declared_type='float'/>
<arg index='2' name='toPercentage' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:from:to:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='fromPercentage' type='f' declared_type='float'/>
<arg index='2' name='toPercentage' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCProgressTimer'>
<method selector='barChangeRate'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithSprite:'>
<arg index='0' name='sprite' type='@' declared_type='CCSprite*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='midpoint'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='percentage'>
<retval type='f' declared_type='float'/>
</method>
<method class_method='true' selector='progressWithSprite:'>
<arg index='0' name='sprite' type='@' declared_type='CCSprite*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='reverseDirection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBarChangeRate:'>
<arg index='0' name='barChangeRate' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMidpoint:'>
<arg index='0' name='midpoint' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' name='opacity' type='C' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPercentage:'>
<arg index='0' name='percentage' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReverseDirection:'>
<arg index='0' name='reverseDirection' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSprite:'>
<arg index='0' name='sprite' type='@' declared_type='CCSprite*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setType:'>
<arg index='0' name='type' type='i' declared_type='CCProgressTimerType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sprite'>
<retval type='@' declared_type='CCSprite*'/>
</method>
<method selector='type'>
<retval type='i' declared_type='CCProgressTimerType'/>
</method>
<method selector='vertexData'>
<retval type='^{_ccV2F_C4B_T2F={_ccVertex2F=ff}{_ccColor4B=CCCC}{_ccTex2F=ff}}' declared_type='ccV2F_C4B_T2F*'/>
</method>
<method selector='vertexDataCount'>
<retval type='i' declared_type='int'/>
</method>
</class>
<class name='CCProgressTo'>
<method class_method='true' selector='actionWithDuration:percent:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='percent' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:percent:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='percent' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRenderTexture'>
<method selector='autoDraw'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='begin'>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:'>
<arg index='0' name='r' type='f' declared_type='float'/>
<arg index='1' name='g' type='f' declared_type='float'/>
<arg index='2' name='b' type='f' declared_type='float'/>
<arg index='3' name='a' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:depth:'>
<arg index='0' name='r' type='f' declared_type='float'/>
<arg index='1' name='g' type='f' declared_type='float'/>
<arg index='2' name='b' type='f' declared_type='float'/>
<arg index='3' name='a' type='f' declared_type='float'/>
<arg index='4' name='depthValue' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:depth:stencil:'>
<arg index='0' name='r' type='f' declared_type='float'/>
<arg index='1' name='g' type='f' declared_type='float'/>
<arg index='2' name='b' type='f' declared_type='float'/>
<arg index='3' name='a' type='f' declared_type='float'/>
<arg index='4' name='depthValue' type='f' declared_type='float'/>
<arg index='5' name='stencilValue' type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clear:g:b:a:'>
<arg index='0' name='r' type='f' declared_type='float'/>
<arg index='1' name='g' type='f' declared_type='float'/>
<arg index='2' name='b' type='f' declared_type='float'/>
<arg index='3' name='a' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearColor'>
<retval type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='clearDepth'>
<retval type='f' declared_type='GLclampf'/>
</method>
<method selector='clearDepth:'>
<arg index='0' name='depthValue' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearFlags'>
<retval type='I' declared_type='GLbitfield'/>
</method>
<method selector='clearStencil'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='clearStencil:'>
<arg index='0' name='stencilValue' type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='end'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithWidth:height:pixelFormat:'>
<arg index='0' name='w' type='i' declared_type='int'/>
<arg index='1' name='h' type='i' declared_type='int'/>
<arg index='2' name='format' type='i' declared_type='CCTexture2DPixelFormat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWidth:height:pixelFormat:depthStencilFormat:'>
<arg index='0' name='w' type='i' declared_type='int'/>
<arg index='1' name='h' type='i' declared_type='int'/>
<arg index='2' name='format' type='i' declared_type='CCTexture2DPixelFormat'/>
<arg index='3' name='depthStencilFormat' type='I' declared_type='GLuint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='newCGImage'>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method class_method='true' selector='renderTextureWithWidth:height:'>
<arg index='0' name='w' type='i' declared_type='int'/>
<arg index='1' name='h' type='i' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='renderTextureWithWidth:height:pixelFormat:'>
<arg index='0' name='w' type='i' declared_type='int'/>
<arg index='1' name='h' type='i' declared_type='int'/>
<arg index='2' name='format' type='i' declared_type='CCTexture2DPixelFormat'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='renderTextureWithWidth:height:pixelFormat:depthStencilFormat:'>
<arg index='0' name='w' type='i' declared_type='int'/>
<arg index='1' name='h' type='i' declared_type='int'/>
<arg index='2' name='format' type='i' declared_type='CCTexture2DPixelFormat'/>
<arg index='3' name='depthStencilFormat' type='I' declared_type='GLuint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='saveToFile:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='saveToFile:format:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='format' type='i' declared_type='tCCImageFormat'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAutoDraw:'>
<arg index='0' name='autoDraw' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClearColor:'>
<arg index='0' name='clearColor' type='{_ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClearDepth:'>
<arg index='0' name='clearDepth' type='f' declared_type='GLclampf'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClearFlags:'>
<arg index='0' name='clearFlags' type='I' declared_type='GLbitfield'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClearStencil:'>
<arg index='0' name='clearStencil' type='i' declared_type='GLint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSprite:'>
<arg index='0' name='sprite' type='@' declared_type='CCSprite*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sprite'>
<retval type='@' declared_type='CCSprite*'/>
</method>
</class>
<class name='CCRepeat'>
<method class_method='true' selector='actionWithAction:times:'>
<arg index='0' name='action' type='@' declared_type='CCFiniteTimeAction*'/>
<arg index='1' name='times' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:times:'>
<arg index='0' name='action' type='@' declared_type='CCFiniteTimeAction*'/>
<arg index='1' name='times' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCFiniteTimeAction*'/>
</method>
<method selector='setInnerAction:'>
<arg index='0' name='innerAction' type='@' declared_type='CCFiniteTimeAction*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCRepeatForever'>
<method class_method='true' selector='actionWithAction:'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='setInnerAction:'>
<arg index='0' name='innerAction' type='@' declared_type='CCActionInterval*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCReuseGrid'>
<method class_method='true' selector='actionWithTimes:'>
<arg index='0' name='times' type='i' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimes:'>
<arg index='0' name='times' type='i' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCReverseTime'>
<method class_method='true' selector='actionWithAction:'>
<arg index='0' name='action' type='@' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg index='0' name='action' type='@' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRipple3D'>
<method class_method='true' selector='actionWithPosition:radius:waves:amplitude:grid:duration:'>
<arg index='0' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='1' name='r' type='f' declared_type='float'/>
<arg index='2' name='wav' type='i' declared_type='int'/>
<arg index='3' name='amp' type='f' declared_type='float'/>
<arg index='4' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='5' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithPosition:radius:waves:amplitude:grid:duration:'>
<arg index='0' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='1' name='r' type='f' declared_type='float'/>
<arg index='2' name='wav' type='i' declared_type='int'/>
<arg index='3' name='amp' type='f' declared_type='float'/>
<arg index='4' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='5' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' name='amplitude' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' name='amplitudeRate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCRotateBy'>
<method class_method='true' selector='actionWithDuration:angle:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='deltaAngle' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithDuration:angleX:angleY:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='aX' type='f' declared_type='float'/>
<arg index='2' name='aY' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:angle:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='deltaAngle' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:angleX:angleY:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='aX' type='f' declared_type='float'/>
<arg index='2' name='aY' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRotateTo'>
<method class_method='true' selector='actionWithDuration:angle:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='angle' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithDuration:angleX:angleY:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='aX' type='f' declared_type='float'/>
<arg index='2' name='aY' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:angle:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='angle' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:angleX:angleY:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='aX' type='f' declared_type='float'/>
<arg index='2' name='aY' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCScaleBy'>
<method selector='startWithTarget:'>
<arg index='0' name='aTarget' type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCScaleTo'>
<method class_method='true' selector='actionWithDuration:scale:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='s' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithDuration:scaleX:scaleY:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='sx' type='f' declared_type='float'/>
<arg index='2' name='sy' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:scale:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='s' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:scaleX:scaleY:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='sx' type='f' declared_type='float'/>
<arg index='2' name='sy' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCScene'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCScheduler'>
<method selector='isTargetPaused:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pauseAllTargets'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseAllTargetsWithMinPriority:'>
<arg index='0' name='minPriority' type='i' type64='q' declared_type='NSInteger'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTargets:'>
<arg index='0' name='targetsToResume' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleBlockForKey:target:interval:repeat:delay:paused:block:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<arg index='2' name='interval' type='f' declared_type='ccTime'/>
<arg index='3' name='repeat' type='I' declared_type='uint'/>
<arg index='4' name='delay' type='f' declared_type='ccTime'/>
<arg index='5' name='paused' type='B' declared_type='BOOL'/>
<arg index='6' function_pointer='true' name='block' type='@?' declared_type='void (^)(ccTime)'>
<arg type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:'>
<arg index='0' name='selector' type=':' declared_type='SEL'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<arg index='2' name='interval' type='f' declared_type='ccTime'/>
<arg index='3' name='paused' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleSelector:forTarget:interval:repeat:delay:paused:'>
<arg index='0' name='selector' type=':' declared_type='SEL'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<arg index='2' name='interval' type='f' declared_type='ccTime'/>
<arg index='3' name='repeat' type='I' declared_type='uint'/>
<arg index='4' name='delay' type='f' declared_type='ccTime'/>
<arg index='5' name='paused' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdateForTarget:priority:paused:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='priority' type='i' type64='q' declared_type='NSInteger'/>
<arg index='2' name='paused' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeScale:'>
<arg index='0' name='timeScale' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeScale'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='unscheduleAll'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllForTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllWithMinPriority:'>
<arg index='0' name='minPriority' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleBlockForKey:target:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleSelector:forTarget:'>
<arg index='0' name='selector' type=':' declared_type='SEL'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleUpdateForTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='update:'>
<arg index='0' name='dt' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCSequence'>
<method class_method='true' selector='actionOne:two:'>
<arg index='0' name='actionOne' type='@' declared_type='CCFiniteTimeAction*'/>
<arg index='1' name='actionTwo' type='@' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithArray:'>
<arg index='0' name='arrayOfActions' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method variadic='true' class_method='true' selector='actions:' sentinel='0'>
<arg index='0' name='action1' type='@' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actions:vaList:'>
<arg index='0' name='action1' type='@' declared_type='CCFiniteTimeAction*'/>
<arg index='1' name='args' type='*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' declared_type64='__va_list_tag*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initOne:two:'>
<arg index='0' name='actionOne' type='@' declared_type='CCFiniteTimeAction*'/>
<arg index='1' name='actionTwo' type='@' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShaderCache'>
<method selector='addProgram:forKey:'>
<arg index='0' name='program' type='@' declared_type='CCGLProgram*'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadDefaultShaders'>
<retval type='v' declared_type='void'/>
</method>
<method selector='programForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method class_method='true' selector='purgeSharedShaderCache'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedShaderCache'>
<retval type='@' declared_type='CCShaderCache*'/>
</method>
</class>
<class name='CCShaky3D'>
<method class_method='true' selector='actionWithRange:shakeZ:grid:duration:'>
<arg index='0' name='range' type='i' declared_type='int'/>
<arg index='1' name='shakeZ' type='B' declared_type='BOOL'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg index='0' name='range' type='i' declared_type='int'/>
<arg index='1' name='shakeZ' type='B' declared_type='BOOL'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShakyTiles3D'>
<method class_method='true' selector='actionWithRange:shakeZ:grid:duration:'>
<arg index='0' name='range' type='i' declared_type='int'/>
<arg index='1' name='shakeZ' type='B' declared_type='BOOL'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg index='0' name='range' type='i' declared_type='int'/>
<arg index='1' name='shakeZ' type='B' declared_type='BOOL'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShatteredTiles3D'>
<method class_method='true' selector='actionWithRange:shatterZ:grid:duration:'>
<arg index='0' name='range' type='i' declared_type='int'/>
<arg index='1' name='shatterZ' type='B' declared_type='BOOL'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shatterZ:grid:duration:'>
<arg index='0' name='range' type='i' declared_type='int'/>
<arg index='1' name='shatterZ' type='B' declared_type='BOOL'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShow'>
<method selector='update:'>
<arg index='0' name='time' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCShuffleTiles'>
<method class_method='true' selector='actionWithSeed:grid:duration:'>
<arg index='0' name='s' type='i' declared_type='int'/>
<arg index='1' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='2' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg index='0' name='s' type='i' declared_type='int'/>
<arg index='1' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='2' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSkewBy'>
<method selector='initWithDuration:skewX:skewY:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='sx' type='f' declared_type='float'/>
<arg index='2' name='sy' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSkewTo'>
<method class_method='true' selector='actionWithDuration:skewX:skewY:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='sx' type='f' declared_type='float'/>
<arg index='2' name='sy' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:skewX:skewY:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='sx' type='f' declared_type='float'/>
<arg index='2' name='sy' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSpawn'>
<method class_method='true' selector='actionOne:two:'>
<arg index='0' name='one' type='@' declared_type='CCFiniteTimeAction*'/>
<arg index='1' name='two' type='@' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithArray:'>
<arg index='0' name='arrayOfActions' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method variadic='true' class_method='true' selector='actions:' sentinel='0'>
<arg index='0' name='action1' type='@' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actions:vaList:'>
<arg index='0' name='action1' type='@' declared_type='CCFiniteTimeAction*'/>
<arg index='1' name='args' type='*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' declared_type64='__va_list_tag*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initOne:two:'>
<arg index='0' name='one' type='@' declared_type='CCFiniteTimeAction*'/>
<arg index='1' name='two' type='@' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSpeed'>
<method class_method='true' selector='actionWithAction:speed:'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<arg index='1' name='value' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:speed:'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<arg index='1' name='value' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='setInnerAction:'>
<arg index='0' name='innerAction' type='@' declared_type='CCActionInterval*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeed:'>
<arg index='0' name='speed' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='speed'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CCSplitCols'>
<method class_method='true' selector='actionWithCols:duration:'>
<arg index='0' name='cols' type='i' declared_type='int'/>
<arg index='1' name='duration' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCols:duration:'>
<arg index='0' name='cols' type='i' declared_type='int'/>
<arg index='1' name='duration' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSplitRows'>
<method class_method='true' selector='actionWithRows:duration:'>
<arg index='0' name='rows' type='i' declared_type='int'/>
<arg index='1' name='duration' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRows:duration:'>
<arg index='0' name='rows' type='i' declared_type='int'/>
<arg index='1' name='duration' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSprite'>
<method selector='atlasIndex'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='batchNode'>
<retval type='@' declared_type='CCSpriteBatchNode*'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='dirty'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='displayFrame'>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
<method selector='flipX'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='flipY'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithCGImage:key:'>
<arg index='0' name='image' type='^{CGImage=}' declared_type='CGImageRef'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:rect:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrame:'>
<arg index='0' name='spriteFrame' type='@' declared_type='CCSpriteFrame*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrameName:'>
<arg index='0' name='spriteFrameName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:rotated:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<arg index='2' name='rotated' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFrameDisplayed:'>
<arg index='0' name='frame' type='@' declared_type='CCSpriteFrame*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='offsetPosition'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='quad'>
<retval type='{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad'/>
</method>
<method selector='setAtlasIndex:'>
<arg index='0' name='atlasIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBatchNode:'>
<arg index='0' name='batchNode' type='@' declared_type='CCSpriteBatchNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirty:'>
<arg index='0' name='dirty' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrame:'>
<arg index='0' name='newFrame' type='@' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrameWithAnimationName:index:'>
<arg index='0' name='animationName' type='@' declared_type='NSString*'/>
<arg index='1' name='frameIndex' type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFlipX:'>
<arg index='0' name='flipX' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFlipY:'>
<arg index='0' name='flipY' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' name='opacity' type='C' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' name='textureAtlas' type='@' declared_type='CCTextureAtlas*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureRect:'>
<arg index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureRect:rotated:untrimmedSize:'>
<arg index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<arg index='1' name='rotated' type='B' declared_type='BOOL'/>
<arg index='2' name='size' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVertexRect:'>
<arg index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='spriteWithCGImage:key:'>
<arg index='0' name='image' type='^{CGImage=}' declared_type='CGImageRef'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithFile:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithFile:rect:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithSpriteFrame:'>
<arg index='0' name='spriteFrame' type='@' declared_type='CCSpriteFrame*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithSpriteFrameName:'>
<arg index='0' name='spriteFrameName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithTexture:rect:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
<method selector='textureRect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
</method>
<method selector='textureRectRotated'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='updateTransform'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCSpriteBatchNode'>
<method selector='addSpriteWithoutQuad:z:tag:'>
<arg index='0' name='child' type='@' declared_type='CCSprite*'/>
<arg index='1' name='z' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='2' name='aTag' type='i' type64='q' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='appendChild:'>
<arg index='0' name='sprite' type='@' declared_type='CCSprite*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='atlasIndexForChild:atZ:'>
<arg index='0' name='sprite' type='@' declared_type='CCSprite*'/>
<arg index='1' name='z' type='i' type64='q' declared_type='NSInteger'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='batchNodeWithFile:'>
<arg index='0' name='fileImage' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithFile:capacity:'>
<arg index='0' name='fileImage' type='@' declared_type='NSString*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithTexture:'>
<arg index='0' name='tex' type='@' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithTexture:capacity:'>
<arg index='0' name='tex' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='descendants'>
<retval type='@' declared_type='CCArray*'/>
</method>
<method selector='increaseAtlasCapacity'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg index='0' name='fileImage' type='@' declared_type='NSString*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg index='0' name='tex' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg index='0' name='child' type='@' declared_type='CCSprite*'/>
<arg index='1' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertQuadFromSprite:quadIndex:'>
<arg index='0' name='sprite' type='@' declared_type='CCSprite*'/>
<arg index='1' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rebuildIndexInOrder:atlasIndex:'>
<arg index='0' name='parent' type='@' declared_type='CCSprite*'/>
<arg index='1' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='removeChild:cleanup:'>
<arg index='0' name='sprite' type='@' declared_type='CCSprite*'/>
<arg index='1' name='doCleanup' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildAtIndex:cleanup:'>
<arg index='0' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='1' name='doCleanup' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFromAtlas:'>
<arg index='0' name='sprite' type='@' declared_type='CCSprite*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reorderBatch:'>
<arg index='0' name='reorder' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' name='textureAtlas' type='@' declared_type='CCTextureAtlas*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
<method selector='updateQuadFromSprite:quadIndex:'>
<arg index='0' name='sprite' type='@' declared_type='CCSprite*'/>
<arg index='1' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCSpriteFrame'>
<method class_method='true' selector='frameWithTexture:rect:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='frameWithTexture:rectInPixels:rotated:offset:originalSize:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<arg index='2' name='rotated' type='B' declared_type='BOOL'/>
<arg index='3' name='offset' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='4' name='originalSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='frameWithTextureFilename:rect:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='frameWithTextureFilename:rectInPixels:rotated:offset:originalSize:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<arg index='2' name='rotated' type='B' declared_type='BOOL'/>
<arg index='3' name='offset' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='4' name='originalSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rectInPixels:rotated:offset:originalSize:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<arg index='2' name='rotated' type='B' declared_type='BOOL'/>
<arg index='3' name='offset' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='4' name='originalSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTextureFilename:rect:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTextureFilename:rectInPixels:rotated:offset:originalSize:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<arg index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<arg index='2' name='rotated' type='B' declared_type='BOOL'/>
<arg index='3' name='offset' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='4' name='originalSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='offset'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='offsetInPixels'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='originalSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='originalSizeInPixels'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='rect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
</method>
<method selector='rectInPixels'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
</method>
<method selector='rotated'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setOffset:'>
<arg index='0' name='offset' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffsetInPixels:'>
<arg index='0' name='offsetInPixels' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOriginalSize:'>
<arg index='0' name='originalSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOriginalSizeInPixels:'>
<arg index='0' name='originalSizeInPixels' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRect:'>
<arg index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRectInPixels:'>
<arg index='0' name='rectInPixels' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotated:'>
<arg index='0' name='rotated' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='textureFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCSpriteFrameCache'>
<method selector='addSpriteFrame:name:'>
<arg index='0' name='frame' type='@' declared_type='CCSpriteFrame*'/>
<arg index='1' name='frameName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:'>
<arg index='0' name='plist' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:texture:'>
<arg index='0' name='plist' type='@' declared_type='NSString*'/>
<arg index='1' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:textureFilename:'>
<arg index='0' name='plist' type='@' declared_type='NSString*'/>
<arg index='1' name='filename' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='purgeSharedSpriteFrameCache'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFrameByName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFrames'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFramesFromFile:'>
<arg index='0' name='plist' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFramesFromTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeUnusedSpriteFrames'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedSpriteFrameCache'>
<retval type='@' declared_type='CCSpriteFrameCache*'/>
</method>
<method selector='spriteFrameByName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
</class>
<class name='CCTMXLayer'>
<method selector='addChild:z:tag:'>
<arg index='0' name='node' type='@' declared_type='CCNode*'/>
<arg index='1' name='z' type='i' type64='q' declared_type='NSInteger'/>
<arg index='2' name='tag' type='i' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTilesetInfo:layerInfo:mapInfo:'>
<arg index='0' name='tilesetInfo' type='@' declared_type='CCTMXTilesetInfo*'/>
<arg index='1' name='layerInfo' type='@' declared_type='CCTMXLayerInfo*'/>
<arg index='2' name='mapInfo' type='@' declared_type='CCTMXMapInfo*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='layerOrientation'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='layerSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method class_method='true' selector='layerWithTilesetInfo:layerInfo:mapInfo:'>
<arg index='0' name='tilesetInfo' type='@' declared_type='CCTMXTilesetInfo*'/>
<arg index='1' name='layerInfo' type='@' declared_type='CCTMXLayerInfo*'/>
<arg index='2' name='mapInfo' type='@' declared_type='CCTMXMapInfo*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapTileSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='positionAt:'>
<arg index='0' name='tileCoordinate' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='propertyNamed:'>
<arg index='0' name='propertyName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='releaseMap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTileAt:'>
<arg index='0' name='tileCoordinate' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerName:'>
<arg index='0' name='layerName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerOrientation:'>
<arg index='0' name='layerOrientation' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerSize:'>
<arg index='0' name='layerSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapTileSize:'>
<arg index='0' name='mapTileSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg index='0' name='properties' type='@' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileGID:at:'>
<arg index='0' name='gid' type='I' declared_type='uint32_t'/>
<arg index='1' name='tileCoordinate' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileGID:at:withFlags:'>
<arg index='0' name='gid' type='I' declared_type='uint32_t'/>
<arg index='1' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='2' name='flags' type='i' declared_type='ccTMXTileFlags'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTiles:'>
<arg index='0' name='tiles' type='^I' declared_type='uint32_t*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileset:'>
<arg index='0' name='tileset' type='@' declared_type='CCTMXTilesetInfo*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setupTiles'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileAt:'>
<arg index='0' name='tileCoordinate' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='CCSprite*'/>
</method>
<method selector='tileGIDAt:'>
<arg index='0' name='tileCoordinate' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='tileGIDAt:withFlags:'>
<arg index='0' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='1' name='flags' type='^i' declared_type='ccTMXTileFlags*'/>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='tiles'>
<retval type='^I' declared_type='uint32_t*'/>
</method>
<method selector='tileset'>
<retval type='@' declared_type='CCTMXTilesetInfo*'/>
</method>
</class>
<class name='CCTMXLayerInfo'>
<method selector='layerSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='maxGID'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='minGID'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='offset'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='unsigned char'/>
</method>
<method selector='ownTiles'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='setLayerSize:'>
<arg index='0' name='layerSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxGID:'>
<arg index='0' name='maxGID' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinGID:'>
<arg index='0' name='minGID' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffset:'>
<arg index='0' name='offset' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' name='opacity' type='C' declared_type='unsigned char'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOwnTiles:'>
<arg index='0' name='ownTiles' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg index='0' name='properties' type='@' declared_type='NSMutableDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTiles:'>
<arg index='0' name='tiles' type='^I' declared_type='unsigned int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisible:'>
<arg index='0' name='visible' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tiles'>
<retval type='^I' declared_type='unsigned int*'/>
</method>
<method selector='visible'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCTMXMapInfo'>
<method selector='filename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='formatWithTMXFile:'>
<arg index='0' name='tmxFile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='formatWithXML:resourcePath:'>
<arg index='0' name='tmxString' type='@' declared_type='NSString*'/>
<arg index='1' name='resourcePath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTMXFile:'>
<arg index='0' name='tmxFile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg index='0' name='tmxString' type='@' declared_type='NSString*'/>
<arg index='1' name='resourcePath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layers'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mapSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='objectGroups'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='orientation'>
<retval type='i' declared_type='int'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='resources'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setFilename:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayers:'>
<arg index='0' name='layers' type='@' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapSize:'>
<arg index='0' name='mapSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectGroups:'>
<arg index='0' name='objectGroups' type='@' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrientation:'>
<arg index='0' name='orientation' type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg index='0' name='properties' type='@' declared_type='NSMutableDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResources:'>
<arg index='0' name='resources' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileProperties:'>
<arg index='0' name='tileProperties' type='@' declared_type='NSMutableDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileSize:'>
<arg index='0' name='tileSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTilesets:'>
<arg index='0' name='tilesets' type='@' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileProperties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='tilesets'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
</class>
<class name='CCTMXObjectGroup'>
<method selector='groupName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectNamed:'>
<arg index='0' name='objectName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='objects'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='positionOffset'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='propertyNamed:'>
<arg index='0' name='propertyName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setGroupName:'>
<arg index='0' name='groupName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjects:'>
<arg index='0' name='objects' type='@' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositionOffset:'>
<arg index='0' name='positionOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg index='0' name='properties' type='@' declared_type='NSMutableDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTMXTiledMap'>
<method selector='initWithTMXFile:'>
<arg index='0' name='tmxFile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg index='0' name='tmxString' type='@' declared_type='NSString*'/>
<arg index='1' name='resourcePath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerNamed:'>
<arg index='0' name='layerName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CCTMXLayer*'/>
</method>
<method selector='mapOrientation'>
<retval type='i' declared_type='int'/>
</method>
<method selector='mapSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='objectGroupNamed:'>
<arg index='0' name='groupName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CCTMXObjectGroup*'/>
</method>
<method selector='objectGroups'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='propertiesForGID:'>
<arg index='0' name='GID' type='I' declared_type='unsigned int'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='propertyNamed:'>
<arg index='0' name='propertyName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObjectGroups:'>
<arg index='0' name='objectGroups' type='@' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg index='0' name='properties' type='@' declared_type='NSMutableDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method class_method='true' selector='tiledMapWithTMXFile:'>
<arg index='0' name='tmxFile' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='tiledMapWithXML:resourcePath:'>
<arg index='0' name='tmxString' type='@' declared_type='NSString*'/>
<arg index='1' name='resourcePath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTMXTilesetInfo'>
<method selector='firstGid'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='imageSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='margin'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rectForGID:'>
<arg index='0' name='gid' type='I' declared_type='unsigned int'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
</method>
<method selector='setFirstGid:'>
<arg index='0' name='firstGid' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageSize:'>
<arg index='0' name='imageSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMargin:'>
<arg index='0' name='margin' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceImage:'>
<arg index='0' name='sourceImage' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpacing:'>
<arg index='0' name='spacing' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileSize:'>
<arg index='0' name='tileSize' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceImage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='spacing'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
</class>
<class name='CCTargetedAction'>
<method class_method='true' selector='actionWithTarget:action:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='action' type='@' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='forcedTarget'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:action:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='action' type='@' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setForcedTarget:'>
<arg index='0' name='forcedTarget' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTexture2D'>
<method class_method='true' selector='PVRImagesHavePremultipliedAlpha:'>
<arg index='0' name='haveAlphaPremultiplied' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='bitsPerPixelForFormat'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='bitsPerPixelForFormat:'>
<arg index='0' name='format' type='i' declared_type='CCTexture2DPixelFormat'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='contentSize'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method selector='contentSizeInPixels'>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</method>
<method class_method='true' selector='defaultAlphaPixelFormat'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='drawAtPoint:'>
<arg index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:'>
<arg index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='generateMipmap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasPremultipliedAlpha'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithCGImage:resolutionType:'>
<arg index='0' name='cgImage' type='^{CGImage=}' declared_type='CGImageRef'/>
<arg index='1' name='resolution' type='i' declared_type='ccResolutionType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:pixelFormat:pixelsWide:pixelsHigh:contentSize:'>
<arg index='0' name='data' type='^v' declared_type='void*' const='true'/>
<arg index='1' name='pixelFormat' type='i' declared_type='CCTexture2DPixelFormat'/>
<arg index='2' name='width' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='3' name='height' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='4' name='size' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPVRFile:'>
<arg index='0' name='file' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<arg index='3' name='dimensions' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<arg index='4' name='alignment' type='i' declared_type='CCTextAlignment'/>
<arg index='5' name='vertAlignment' type='i' declared_type='CCVerticalTextAlignment'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:dimensions:hAlignment:vAlignment:lineBreakMode:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='size' type='f' type64='d' declared_type='CGFloat'/>
<arg index='3' name='dimensions' type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
<arg index='4' name='alignment' type='i' declared_type='CCTextAlignment'/>
<arg index='5' name='vertAlignment' type='i' declared_type='CCVerticalTextAlignment'/>
<arg index='6' name='lineBreakMode' type='i' declared_type='CCLineBreakMode'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='keepData:length:'>
<arg index='0' name='data' type='^v' declared_type='void*'/>
<arg index='1' name='length' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='maxS'>
<retval type='f' declared_type='GLfloat'/>
</method>
<method selector='maxT'>
<retval type='f' declared_type='GLfloat'/>
</method>
<method selector='name'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='pixelFormat'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='pixelsHigh'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='pixelsWide'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='releaseData:'>
<arg index='0' name='data' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolutionType'>
<retval type='i' declared_type='ccResolutionType'/>
</method>
<method selector='setAliasTexParameters'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAntiAliasTexParameters'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setDefaultAlphaPixelFormat:'>
<arg index='0' name='format' type='i' declared_type='CCTexture2DPixelFormat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxS:'>
<arg index='0' name='maxS' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxT:'>
<arg index='0' name='maxT' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResolutionType:'>
<arg index='0' name='resolutionType' type='i' declared_type='ccResolutionType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg index='0' name='shaderProgram' type='@' declared_type='CCGLProgram*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexParameters:'>
<arg index='0' name='texParams' type='^{_ccTexParams=IIII}' declared_type='ccTexParams*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='stringForFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCTextureAtlas'>
<method selector='capacity'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='drawNumberOfQuads:'>
<arg index='0' name='n' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawNumberOfQuads:fromIndex:'>
<arg index='0' name='n' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='1' name='start' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawQuads'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillWithEmptyQuadsFromIndex:amount:'>
<arg index='0' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='1' name='amount' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='increaseTotalQuadsWith:'>
<arg index='0' name='amount' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg index='0' name='file' type='@' declared_type='NSString*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg index='0' name='tex' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertQuad:atIndex:'>
<arg index='0' name='quad' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*'/>
<arg index='1' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertQuadFromIndex:atIndex:'>
<arg index='0' name='fromIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='1' name='newIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertQuads:atIndex:amount:'>
<arg index='0' name='quads' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*'/>
<arg index='1' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='2' name='amount' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveQuadsFromIndex:amount:atIndex:'>
<arg index='0' name='oldIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='1' name='amount' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='2' name='newIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveQuadsFromIndex:to:'>
<arg index='0' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='1' name='newIndex' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='quads'>
<retval type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*'/>
</method>
<method selector='removeAllQuads'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeQuadAtIndex:'>
<arg index='0' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeQuadsAtIndex:amount:'>
<arg index='0' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<arg index='1' name='amount' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resizeCapacity:'>
<arg index='0' name='n' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setQuads:'>
<arg index='0' name='quads' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method class_method='true' selector='textureAtlasWithFile:capacity:'>
<arg index='0' name='file' type='@' declared_type='NSString*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='textureAtlasWithTexture:capacity:'>
<arg index='0' name='tex' type='@' declared_type='CCTexture2D*'/>
<arg index='1' name='capacity' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='totalQuads'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='updateQuad:atIndex:'>
<arg index='0' name='quad' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*'/>
<arg index='1' name='index' type='I' type64='Q' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTextureCache'>
<method selector='addCGImage:forKey:'>
<arg index='0' name='image' type='^{CGImage=}' declared_type='CGImageRef'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='addImage:'>
<arg index='0' name='fileimage' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='addImageAsync:target:selector:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<arg index='2' name='selector' type=':' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addImageAsync:withBlock:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<arg index='1' function_pointer='true' name='block' type='@?' declared_type='void (^)(CCTexture2D *)'>
<arg type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPVRImage:'>
<arg index='0' name='filename' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='dumpCachedTextureInfo'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='purgeSharedTextureCache'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllTextures'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTexture:'>
<arg index='0' name='tex' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTextureForKey:'>
<arg index='0' name='textureKeyName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeUnusedTextures'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedTextureCache'>
<retval type='@' declared_type='CCTextureCache*'/>
</method>
<method selector='textureForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</class>
<class name='CCTexturePVR'>
<method selector='format'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='hasAlpha'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='height'>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='numberOfMipmaps'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='pvrTextureWithContentsOfFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='pvrTextureWithContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='retainName'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setRetainName:'>
<arg index='0' name='retainName' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='width'>
<retval type='I' declared_type='uint32_t'/>
</method>
</class>
<class name='CCTileMapAtlas'>
<method selector='initWithTileFile:mapFile:tileWidth:tileHeight:'>
<arg index='0' name='tile' type='@' declared_type='NSString*'/>
<arg index='1' name='map' type='@' declared_type='NSString*'/>
<arg index='2' name='w' type='i' declared_type='int'/>
<arg index='3' name='h' type='i' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='releaseMap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTile:at:'>
<arg index='0' name='tile' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<arg index='1' name='position' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tgaInfo'>
<retval type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*'/>
</method>
<method selector='tileAt:'>
<arg index='0' name='position' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method class_method='true' selector='tileMapAtlasWithTileFile:mapFile:tileWidth:tileHeight:'>
<arg index='0' name='tile' type='@' declared_type='NSString*'/>
<arg index='1' name='map' type='@' declared_type='NSString*'/>
<arg index='2' name='w' type='i' declared_type='int'/>
<arg index='3' name='h' type='i' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTiledGrid3D'>
<method selector='originalTile:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
<method selector='setTile:coords:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='1' name='coords' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tile:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
</class>
<class name='CCTiledGrid3DAction'>
<method selector='originalTile:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
<method selector='setTile:coords:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='1' name='coords' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tile:'>
<arg index='0' name='pos' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
</class>
<class name='CCTimer'>
<method selector='interval'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='setInterval:'>
<arg index='0' name='interval' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='update:'>
<arg index='0' name='dt' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTimerBlock'>
<method selector='initWithTarget:interval:repeat:delay:key:block:'>
<arg index='0' name='owner' type='@' declared_type='id'/>
<arg index='1' name='seconds' type='f' declared_type='ccTime'/>
<arg index='2' name='r' type='I' declared_type='uint'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<arg index='4' name='key' type='@' declared_type='NSString*'/>
<arg index='5' function_pointer='true' name='block' type='@?' declared_type='void (^)(ccTime)'>
<arg type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='timerWithTarget:interval:key:block:'>
<arg index='0' name='owner' type='@' declared_type='id'/>
<arg index='1' name='seconds' type='f' declared_type='ccTime'/>
<arg index='2' name='key' type='@' declared_type='NSString*'/>
<arg index='3' function_pointer='true' name='block' type='@?' declared_type='void (^)(ccTime)'>
<arg type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTimerTargetSelector'>
<method selector='initWithTarget:selector:'>
<arg index='0' name='t' type='@' declared_type='id'/>
<arg index='1' name='s' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:interval:repeat:delay:'>
<arg index='0' name='t' type='@' declared_type='id'/>
<arg index='1' name='s' type=':' declared_type='SEL'/>
<arg index='2' name='seconds' type='f' declared_type='ccTime'/>
<arg index='3' name='r' type='I' declared_type='uint'/>
<arg index='4' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='selector'>
<retval type=':' declared_type='SEL'/>
</method>
<method class_method='true' selector='timerWithTarget:selector:'>
<arg index='0' name='t' type='@' declared_type='id'/>
<arg index='1' name='s' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='timerWithTarget:selector:interval:'>
<arg index='0' name='t' type='@' declared_type='id'/>
<arg index='1' name='s' type=':' declared_type='SEL'/>
<arg index='2' name='seconds' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTintBy'>
<method class_method='true' selector='actionWithDuration:red:green:blue:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='deltaRed' type='s' declared_type='GLshort'/>
<arg index='2' name='deltaGreen' type='s' declared_type='GLshort'/>
<arg index='3' name='deltaBlue' type='s' declared_type='GLshort'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='deltaRed' type='s' declared_type='GLshort'/>
<arg index='2' name='deltaGreen' type='s' declared_type='GLshort'/>
<arg index='3' name='deltaBlue' type='s' declared_type='GLshort'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTintTo'>
<method class_method='true' selector='actionWithDuration:red:green:blue:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='red' type='C' declared_type='GLubyte'/>
<arg index='2' name='green' type='C' declared_type='GLubyte'/>
<arg index='3' name='blue' type='C' declared_type='GLubyte'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='red' type='C' declared_type='GLubyte'/>
<arg index='2' name='green' type='C' declared_type='GLubyte'/>
<arg index='3' name='blue' type='C' declared_type='GLubyte'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCToggleVisibility'>
<method selector='update:'>
<arg index='0' name='time' type='f' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionCrossFade'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionFade'>
<method selector='initWithDuration:scene:withColor:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='scene' type='@' declared_type='CCScene*'/>
<arg index='2' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='transitionWithDuration:scene:withColor:'>
<arg index='0' name='duration' type='f' declared_type='ccTime'/>
<arg index='1' name='scene' type='@' declared_type='CCScene*'/>
<arg index='2' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionFadeBL'>
<method selector='actionWithSize:'>
<arg index='0' name='vector' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTransitionFadeDown'>
<method selector='actionWithSize:'>
<arg index='0' name='v' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTransitionFadeTR'>
<method selector='actionWithSize:'>
<arg index='0' name='vector' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTransitionFadeUp'>
<method selector='actionWithSize:'>
<arg index='0' name='v' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTransitionFlipAngular'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionFlipX'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionFlipY'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionJumpZoom'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionMoveInB'>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionMoveInL'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionMoveInR'>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionMoveInT'>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionPageTurn'>
<method selector='actionWithSize:'>
<arg index='0' name='vector' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initWithDuration:scene:backwards:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='s' type='@' declared_type='CCScene*'/>
<arg index='2' name='back' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='transitionWithDuration:scene:backwards:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='s' type='@' declared_type='CCScene*'/>
<arg index='2' name='back' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionProgress'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCRenderTexture*'/>
<retval type='@' declared_type='CCProgressTimer*'/>
</method>
</class>
<class name='CCTransitionProgressHorizontal'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCRenderTexture*'/>
<retval type='@' declared_type='CCProgressTimer*'/>
</method>
</class>
<class name='CCTransitionProgressInOut'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCRenderTexture*'/>
<retval type='@' declared_type='CCProgressTimer*'/>
</method>
</class>
<class name='CCTransitionProgressOutIn'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCRenderTexture*'/>
<retval type='@' declared_type='CCProgressTimer*'/>
</method>
</class>
<class name='CCTransitionProgressRadialCCW'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCRenderTexture*'/>
<retval type='@' declared_type='CCProgressTimer*'/>
</method>
</class>
<class name='CCTransitionProgressRadialCW'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCRenderTexture*'/>
<retval type='@' declared_type='CCProgressTimer*'/>
</method>
</class>
<class name='CCTransitionProgressVertical'>
<method selector='progressTimerNodeWithRenderTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCRenderTexture*'/>
<retval type='@' declared_type='CCProgressTimer*'/>
</method>
</class>
<class name='CCTransitionRotoZoom'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionScene'>
<method selector='finish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='hideOutShowIn'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithDuration:scene:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='s' type='@' declared_type='CCScene*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='transitionWithDuration:scene:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='s' type='@' declared_type='CCScene*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionSceneOriented'>
<method selector='initWithDuration:scene:orientation:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='s' type='@' declared_type='CCScene*'/>
<arg index='2' name='o' type='i' declared_type='tOrientation'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='transitionWithDuration:scene:orientation:'>
<arg index='0' name='t' type='f' declared_type='ccTime'/>
<arg index='1' name='s' type='@' declared_type='CCScene*'/>
<arg index='2' name='o' type='i' declared_type='tOrientation'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionShrinkGrow'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionSlideInB'>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionSlideInL'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionSlideInR'>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionSlideInT'>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionSplitCols'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTransitionSplitRows'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTransitionTurnOffTiles'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionZoomFlipAngular'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionZoomFlipX'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionZoomFlipY'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTurnOffTiles'>
<method class_method='true' selector='actionWithSeed:grid:duration:'>
<arg index='0' name='s' type='i' declared_type='int'/>
<arg index='1' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='2' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg index='0' name='s' type='i' declared_type='int'/>
<arg index='1' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='2' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTwirl'>
<method class_method='true' selector='actionWithPosition:twirls:amplitude:grid:duration:'>
<arg index='0' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='1' name='t' type='i' declared_type='int'/>
<arg index='2' name='amp' type='f' declared_type='float'/>
<arg index='3' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='4' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithPosition:twirls:amplitude:grid:duration:'>
<arg index='0' name='pos' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg index='1' name='t' type='i' declared_type='int'/>
<arg index='2' name='amp' type='f' declared_type='float'/>
<arg index='3' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='4' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' name='amplitude' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' name='amplitudeRate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWaves'>
<method class_method='true' selector='actionWithWaves:amplitude:horizontal:vertical:grid:duration:'>
<arg index='0' name='wav' type='i' declared_type='int'/>
<arg index='1' name='amp' type='f' declared_type='float'/>
<arg index='2' name='h' type='B' declared_type='BOOL'/>
<arg index='3' name='v' type='B' declared_type='BOOL'/>
<arg index='4' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='5' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:horizontal:vertical:grid:duration:'>
<arg index='0' name='wav' type='i' declared_type='int'/>
<arg index='1' name='amp' type='f' declared_type='float'/>
<arg index='2' name='h' type='B' declared_type='BOOL'/>
<arg index='3' name='v' type='B' declared_type='BOOL'/>
<arg index='4' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='5' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' name='amplitude' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' name='amplitudeRate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWaves3D'>
<method class_method='true' selector='actionWithWaves:amplitude:grid:duration:'>
<arg index='0' name='wav' type='i' declared_type='int'/>
<arg index='1' name='amp' type='f' declared_type='float'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg index='0' name='wav' type='i' declared_type='int'/>
<arg index='1' name='amp' type='f' declared_type='float'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' name='amplitude' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' name='amplitudeRate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWavesTiles3D'>
<method class_method='true' selector='actionWithWaves:amplitude:grid:duration:'>
<arg index='0' name='wav' type='i' declared_type='int'/>
<arg index='1' name='amp' type='f' declared_type='float'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg index='0' name='wav' type='i' declared_type='int'/>
<arg index='1' name='amp' type='f' declared_type='float'/>
<arg index='2' name='gridSize' type='{_ccGridSize=ii}' type64='{_ccGridSize=qq}' declared_type='ccGridSize'/>
<arg index='3' name='d' type='f' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' name='amplitude' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' name='amplitudeRate' type='f' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWindow'>
<method selector='initWithFrame:fullscreen:'>
<arg index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
<arg index='1' name='fullscreen' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSObject'>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='ccFlagsChanged:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccKeyDown:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccKeyUp:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccMouseDown:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccMouseDragged:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccMouseEntered:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccMouseExited:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccMouseMoved:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccMouseUp:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccOtherMouseDown:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccOtherMouseDragged:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccOtherMouseUp:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccRightMouseDown:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccRightMouseDragged:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccRightMouseUp:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccScrollWheel:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchesBeganWithEvent:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchesCancelledWithEvent:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchesEndedWithEvent:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchesMovedWithEvent:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='easeActionWithAction:'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='flagsChanged:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='keyDown:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='keyUp:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseDown:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseDragged:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseEntered:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseExited:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseMoved:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseUp:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='otherMouseDown:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='otherMouseDragged:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='otherMouseUp:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rightMouseDown:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rightMouseDragged:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rightMouseUp:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollWheel:'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCString:'>
<arg index='0' name='label' type='*' declared_type='char*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' name='opacity' type='C' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg index='0' name='boolean' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg index='0' name='label' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='touchesBeganWithEvent:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesCancelledWithEvent:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesEndedWithEvent:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesMovedWithEvent:'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateProjection'>
<retval type='v' declared_type='void'/>
</method>
</class>
<informal_protocol name='CCBlendProtocol'>
<method selector='blendFunc' type='{_ccBlendFunc=II}8@0:4' type64='{_ccBlendFunc=II}16@0:8'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='setBlendFunc:' type='v16@0:4{_ccBlendFunc=II}8' type64='v24@0:8{_ccBlendFunc=II}16'>
<arg index='0' name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCDirectorDelegate'>
<method selector='updateProjection' type='v8@0:4' type64='v16@0:8'>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCEventDelegate'>
<method selector='flagsChanged:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='keyDown:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='keyUp:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseDown:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseDragged:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseEntered:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseExited:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseMoved:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseUp:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='otherMouseDown:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='otherMouseDragged:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='otherMouseUp:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rightMouseDown:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rightMouseDragged:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rightMouseUp:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollWheel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesBeganWithEvent:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesCancelledWithEvent:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesEndedWithEvent:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesMovedWithEvent:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCKeyboardEventDelegate'>
<method selector='ccFlagsChanged:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccKeyDown:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccKeyUp:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CCLabelProtocol'>
<method selector='setCString:' type='v12@0:4*8' type64='v24@0:8*16'>
<arg index='0' name='label' type='*' declared_type='char*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='label' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string' type='@8@0:4' type64='@16@0:8'>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='CCMouseEventDelegate'>
<method selector='ccMouseDown:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccMouseDragged:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccMouseEntered:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccMouseExited:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccMouseMoved:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccMouseUp:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccOtherMouseDown:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccOtherMouseDragged:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccOtherMouseUp:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccRightMouseDown:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccRightMouseDragged:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccRightMouseUp:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccScrollWheel:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='theEvent' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CCRGBAProtocol'>
<method selector='color' type='{_ccColor3B=CCC}8@0:4' type64='{_ccColor3B=CCC}16@0:8'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='doesOpacityModifyRGB' type='B8@0:4' type64='B16@0:8'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='opacity' type='C8@0:4' type64='C16@0:8'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='setColor:' type='v11@0:4{_ccColor3B=CCC}8' type64='v19@0:8{_ccColor3B=CCC}16'>
<arg index='0' name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:' type='v12@0:4C8' type64='v20@0:8C16'>
<arg index='0' name='opacity' type='C' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacityModifyRGB:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg index='0' name='boolean' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCTextureProtocol'>
<method selector='setTexture:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' name='texture' type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='texture' type='@8@0:4' type64='@16@0:8'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</informal_protocol>
<informal_protocol name='CCTouchEventDelegate'>
<method selector='ccTouchesBeganWithEvent:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchesCancelledWithEvent:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchesEndedWithEvent:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchesMovedWithEvent:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' name='event' type='@' declared_type='NSEvent*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CCTransitionEaseScene'>
<method selector='easeActionWithAction:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg index='0' name='action' type='@' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</informal_protocol>
</signatures>
